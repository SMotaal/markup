{"version":3,"file":"markup.js","sources":["../../lib/markup-parser.js","../../lib/helpers.js","../../lib/markup-patterns.js","../../lib/extensions/postscript/postscript-mode.js","../../lib/markup-modes.js","../../packages/pseudom/lib/pseudo.mjs","../../packages/pseudom/lib/native.mjs","../../packages/pseudom/pseudom.js","../../lib/markup-dom.js","../../lib/markup.js"],"sourcesContent":["/** Markup (render) @author Saleh Abdel Motaal */\nexport function markup(source, options, defaults = markup.defaults) {\n  return [...render(source, options, defaults)];\n}\n\n/// REGULAR EXPRESSIONS\n\n/** Non-alphanumeric symbol matching expressions (inteded to be extended) */\nexport const matchers = {\n  escapes: /(\\n)|(\\\\(?:(?:\\\\\\\\)*\\\\|[^\\\\\\s])?|\\*\\/|`|\"|'|\\$\\{)/g,\n  comments: /(\\n)|(\\*\\/|\\b(?:[a-z]+\\:\\/\\/|\\w[\\w\\+\\.]*\\w@[a-z]+)\\S+|@[a-z]+)/gi,\n  quotes: /(\\n)|(\\\\(?:(?:\\\\\\\\)*\\\\|[^\\\\\\s])?|`|\"|'|\\$\\{)/g,\n  xml: /([\\s\\n]+)|(\"|'|=|&#x?[a-f0-9]+;|&[a-z]+;|\\/?>|<%|%>|<!--|-->|<[\\/\\!]?(?=[a-z]+\\:?[a-z\\-]*[a-z]|[a-z]+))/gi,\n  sequences: /([\\s\\n]+)|(\\\\(?:(?:\\\\\\\\)*\\\\|[^\\\\\\s])?|\\/\\/|\\/\\*|\\*\\/|\\(|\\)|\\[|\\]|,|;|\\.\\.\\.|\\.|\\b:\\/\\/\\b|::|:|\\?|`|\"|'|\\$\\{|\\{|\\}|=>|<\\/|\\/>|\\++|\\-+|\\*+|&+|\\|+|=+|!={0,3}|<{1,3}=?|>{1,2}=?)|[+\\-*/&|^%<>~!]=?/g,\n};\n\n/** Special alpha-numeric symbol test expressions (inteded to be extended) */\nexport const patterns = {\n  /** Basic latin Keyword like symbol (inteded to be extended) */\n  maybeKeyword: /^[a-z](\\w*)$/i,\n};\n\n/// SYNTAXES\n/** Syntax definitions (inteded to be extended) */\nexport const syntaxes = {default: {patterns, matcher: matchers.sequences}};\n\n/** Mode states (inteded to be extended) */\nexport const modes = {default: {syntax: 'default'}};\n\n/// DEFAULTS\n/** Parsing defaults (inteded to be extended) */\nexport const defaults = (markup.defaults = {\n  matcher: matchers.sequences,\n  syntax: 'default',\n  sourceType: 'default',\n  renderers: {text: String},\n  renderer,\n  get syntaxes() {\n    return syntaxes;\n  },\n  set syntaxes(value) {\n    if (this !== defaults)\n      throw Error(\n        'Invalid assignment: direct assignment to defaults is not allowed. Use Object.create(defaults) to create a mutable instance of defaults first.',\n      );\n    Object.defineProperty(this, 'syntaxes', {value});\n  },\n});\n\nconst Null = Object.freeze(Object.create(null));\n\n/// RENDERING\n/** Token prototype (inteded to be extended) */\nclass Token {\n  toString() {\n    return this.text;\n  }\n}\n\nexport async function* renderer(tokens) {\n  let i = 0;\n  for await (const token of tokens) {\n    if (!token) continue;\n    i++ % 10 || (await new Promise(r => setTimeout(r, 1)));\n    yield Object.setPrototypeOf(token, Token.prototype);\n  }\n}\n\nexport function render(source, options, defaults = markup.defaults) {\n  const {syntax, renderer = defaults.renderer, ...tokenizerOptions} = options || defaults;\n  const state = {options: tokenizerOptions};\n  return renderer((options.tokenize || tokenize)(source, state, defaults));\n}\n\n/// GROUPING\nconst Grouper = ({\n  /* grouper context */\n  syntax,\n  goal = syntax,\n  quote,\n  comment,\n  closure,\n  span,\n  grouping = comment || closure || span || undefined,\n\n  punctuator,\n  // terminator = (comment && comment.closer) || undefined,\n  spans = (grouping && grouping.spans) || undefined,\n  matcher = (grouping && grouping.matcher) || undefined,\n  quotes = (grouping && grouping.quotes) || undefined,\n  punctuators = {aggregators: {}},\n  opener = quote || (grouping && grouping.opener) || undefined,\n  closer = quote || (grouping && grouping.closer) || undefined,\n  hinter,\n  open = (grouping && grouping.open) || undefined,\n  close = (grouping && grouping.close) || undefined,\n}) => ({\n  syntax,\n  goal,\n  punctuator,\n  // terminator,\n  spans,\n  matcher,\n  quotes,\n  punctuators,\n  opener,\n  closer,\n  hinter,\n  open,\n  close,\n});\n\nconst createGrouper = Grouper;\n\n/// TOKENIZATION\n\nexport function* contextualizer($, defaults) {\n  let done, grouper;\n\n  $ !== undefined ||\n    ($ = (defaults && defaults.syntaxes && defaults.syntaxes.default) || syntaxes.default);\n\n  const initialize = context => {\n    context.token ||\n      (context.token = (tokenizer => (tokenizer.next(), token => tokenizer.next(token).value))(\n        tokenizer(context),\n      ));\n    context;\n  };\n\n  if (!$.context) {\n    const {\n      syntax,\n      matcher = ($.matcher = defaults.matcher),\n      quotes,\n      punctuators = ($.punctuators = {aggregators: {}}),\n      punctuators: {aggregators = ($punctuators.aggregators = {})},\n      patterns: {\n        maybeKeyword = ($.patterns.maybeKeyword =\n          ((defaults && defaults.patterns) || patterns).maybeKeyword || undefined),\n      } = ($.patterns = {maybeKeyword: null}),\n      spans: {[syntax]: spans} = Null,\n    } = $;\n\n    // matcher.matcher ||\n    //   (matcher.matcher = new RegExp(matcher.source, matcher.flags.replace('g', 'y')));\n\n    initialize(\n      ($.context = {\n        // ... $,\n        $,\n        punctuators,\n        aggregators,\n        // matcher: matcher.matcher,\n        matcher,\n        quotes,\n        spans,\n      }),\n    );\n  }\n\n  const {\n    syntax: $syntax,\n    matcher: $matcher,\n    quotes: $quotes,\n    punctuators: $punctuators,\n    punctuators: {aggregators: $aggregators},\n  } = $;\n\n  while (true) {\n    if (\n      grouper !== (grouper = yield (grouper && grouper.context) || $.context) &&\n      grouper &&\n      !grouper.context\n    ) {\n      const {\n        goal = $syntax,\n        punctuator,\n        punctuators = $punctuators,\n        aggregators = $aggregators,\n        closer,\n        spans,\n        matcher = $matcher,\n        quotes = $quotes,\n        forming = goal === $syntax,\n      } = grouper;\n\n      // !matcher ||\n      //   matcher.matcher ||\n      //   (matcher.matcher = new RegExp(matcher.source, matcher.flags.replace('g', 'y')));\n\n      initialize(\n        (grouper.context = {\n          // ... $.context,\n          $,\n          punctuator,\n          punctuators,\n          aggregators,\n          closer,\n          spans,\n          // matcher: matcher && matcher.matcher,\n          matcher,\n          quotes,\n          forming,\n        }),\n      );\n    }\n  }\n}\n\nexport function* tokenizer(context) {\n  let done, next;\n\n  const {\n    $: {\n      syntax,\n      keywords,\n      assigners,\n      operators,\n      combinators,\n      nonbreakers,\n      comments,\n      closures,\n      breakers,\n      patterns,\n    },\n    punctuators,\n    aggregators,\n    spans,\n    quotes,\n    forming = true,\n\n    // syntax,\n    // keywords,\n    // assigners,\n    // operators,\n    // combinators,\n    // nonbreakers,\n    // comments,\n    // closures,\n    // breakers,\n    // patterns,\n  } = context;\n\n  const {maybeIdentifier, maybeKeyword} = patterns || context;\n  const wording = keywords || maybeIdentifier ? true : false;\n\n  const LineEndings = /$/gm;\n  const punctuate = text =>\n    (nonbreakers && nonbreakers.includes(text) && 'nonbreaker') ||\n    (operators && operators.includes(text) && 'operator') ||\n    (comments && comments.includes(text) && 'comment') ||\n    (spans && spans.includes(text) && 'span') ||\n    (quotes && quotes.includes(text) && 'quote') ||\n    (closures && closures.includes(text) && 'closure') ||\n    (breakers && breakers.includes(text) && 'breaker') ||\n    false;\n\n  const aggregate =\n    ((assigners && assigners.size) || (combinators && combinators.size)) &&\n    (text =>\n      (assigners && assigners.includes(text) && 'assigner') ||\n      (combinators && combinators.includes(text) && 'combinator') ||\n      false);\n\n  // const seen = tokenizer.seen || new WeakSet();\n  // let unseen;\n  // seen.has(context) ||\n  //   (seen.add(\n  //     Object.values(\n  //       (unseen = {context}),\n  //       !aggregators || (unseen.aggregators = aggregators),\n  //       !punctuators || (unseen.punctuators = punctuators),\n  //       unseen,\n  //     ),\n  //   ) && console.log(unseen));\n\n  while (!done) {\n    let token, punctuator;\n    if (next && next.text) {\n      const {\n        text, // Text for next production\n        type, // Type of next production\n        // offset, // Index of next production\n        // breaks, // Linebreaks in next production\n        hint, // Hint of next production\n        previous, // Previous production\n        parent = (next.parent = (previous && previous.parent) || undefined), // Parent of next production\n        last, // Last significant production\n      } = next;\n\n      if (type === 'sequence') {\n        (next.punctuator =\n          (aggregate &&\n            previous &&\n            (aggregators[text] ||\n              (!(text in aggregators) && (aggregators[text] = aggregate(text))))) ||\n          (punctuators[text] ||\n            (!(text in punctuators) && (punctuators[text] = punctuate(text)))) ||\n          undefined) && (next.type = 'punctuator');\n      } else if (type === 'whitespace') {\n        next.breaks = text.match(LineEndings).length - 1;\n      } else if (forming && wording) {\n        // type !== 'indent' &&\n        const word = text.trim();\n        word &&\n          ((keywords &&\n            keywords.includes(word) &&\n            (!last || last.punctuator !== 'nonbreaker' || (previous && previous.breaks > 0)) &&\n            (next.type = 'keyword')) ||\n            (maybeIdentifier && maybeIdentifier.test(word) && (next.type = 'identifier')));\n      } else {\n        next.type = 'text';\n      }\n\n      previous && (previous.next = next);\n\n      token = next;\n    }\n\n    next = yield token;\n  }\n}\n\n// TODO: <@SMotaal> Refactor\nexport function* tokenize(source, state = {}, defaults = markup.defaults) {\n  const syntaxes = defaults.syntaxes;\n\n  let {\n    match,\n    index,\n    options: {\n      sourceType = (state.options.sourceType = state.options.syntax || defaults.sourceType),\n    } = (state.options = {}),\n    previous = null,\n    mode = (state.mode = modes[sourceType] || modes[defaults.sourceType]),\n    mode: {syntax},\n    grouping = (state.grouping = {\n      hints: new Set(),\n      groupings: [],\n      groupers: mode.groupers || (mode.groupers = {}),\n    }),\n  } = state;\n\n  (state.source === (state.source = source) && index >= 0) ||\n    (index = state.index = (index > 0 && index % source.length) || 0);\n\n  const top = {type: 'top', text: '', offset: index};\n\n  let done,\n    parent = top,\n    last;\n\n  let lastContext;\n\n  const {\n    [(state.syntax = state.mode.syntax)]: $ = defaults.syntaxes[defaults.syntax],\n  } = defaults.syntaxes;\n\n  const $contexting = contextualizer($, defaults);\n  let $context = $contexting.next().value;\n\n  // Initial contextual hint (syntax)\n  !syntax ||\n    (grouping.goal || (grouping.goal = syntax), grouping.hint && grouping.lastSyntax === syntax) ||\n    (grouping.hints.add(syntax).delete(grouping.lastSyntax),\n    (grouping.hint = [...grouping.hints].join(' ')),\n    (grouping.context = state.context || (state.context = grouping.lastSyntax = syntax)));\n\n  while (true) {\n    const {\n      $: {syntax, matchers, comments, spans, closures},\n      // syntax, matchers, comments, spans, closures,\n\n      punctuator: $$punctuator,\n      closer: $$closer,\n      spans: $$spans,\n      // matcher: $$matcher,\n      matcher: {\n        matcher: $$matcher = ($context.matcher.matcher = new RegExp(\n          $context.matcher.source,\n          $context.matcher.flags, // .replace('g', 'y'),\n        )),\n      },\n      token,\n      // token = ($context.token = (tokenizer => (\n      //   tokenizer.next(), token => tokenizer.next(token).value\n      // ))(tokenizer($context))),\n      forming = true,\n    } = $context;\n\n    // Prime Matcher\n    // ((state.matcher !== $$matcher && (state.matcher = $$matcher)) ||\n    //   state.index !== $$matcher.lastIndex) &&\n    //   $$matcher.exec(state.source);\n\n    // Current contextual hint (syntax or hint)\n    const hint = grouping.hint;\n\n    while (lastContext === (lastContext = $context)) {\n      let next;\n\n      state.last = last;\n\n      const lastIndex = state.index || 0;\n\n      $$matcher.lastIndex === lastIndex || ($$matcher.lastIndex = lastIndex);\n      match = state.match = $$matcher.exec(source);\n      done = index === (index = state.index = $$matcher.lastIndex) || !match;\n\n      if (done) return;\n\n      // Current contextual match\n      const {0: text, 1: whitespace, 2: sequence, index: offset} = match;\n\n      // Current quasi-contextual fragment\n      const pre = source.slice(lastIndex, offset);\n      pre &&\n        ((next = token({type: 'pre', text: pre, offset: lastIndex, previous, parent, hint, last})),\n        yield (previous = next));\n\n      // Current contextual fragment\n      const type = (whitespace && 'whitespace') || (sequence && 'sequence') || 'text';\n      next = token({type, text, offset, previous, parent, hint, last});\n\n      // Current contextual punctuator (from sequence)\n      const closing =\n        $$closer &&\n        ($$closer.test\n          ? $$closer.test(text)\n          : $$closer === text || (whitespace && whitespace.includes($$closer)));\n\n      let after;\n      let punctuator = next.punctuator;\n\n      if (punctuator || closing) {\n        // punctuator text closing next parent\n        // syntax matchers closures spans $$spans\n\n        let hinter = punctuator ? `${syntax}-${punctuator}` : grouping.hint;\n        let closed, opened, grouper;\n\n        if (closing) {\n          closed = grouper = closing && grouping.groupings.pop();\n          next.closed = closed;\n          grouping.groupings.includes(grouper) || grouping.hints.delete(grouper.hinter);\n          (closed.punctuator === 'opener' && (next.punctuator = 'closer')) ||\n            (closed.punctuator && (next.punctuator = closed.punctuator));\n          after = grouper.close && grouper.close(next, state, $context);\n\n          const previousGrouper = (grouper = grouping.groupings[grouping.groupings.length - 1]);\n          grouping.goal = (previousGrouper && previousGrouper.goal) || syntax;\n          parent = (parent && parent.parent) || top;\n        } else if ($$punctuator !== 'comment') {\n          const group = `${hinter},${text}`;\n          grouper = grouping.groupers[group];\n\n          if ($$spans && punctuator === 'span') {\n            // const span = $$spans[text];\n            const span = $$spans.get(text);\n            next.punctuator = punctuator = 'span';\n            opened =\n              grouper ||\n              createGrouper({\n                syntax,\n                goal: syntax,\n                span,\n                matcher: span.matcher || (matchers && matchers.span) || undefined,\n                spans: (spans && spans[text]) || undefined,\n                hinter,\n                punctuator,\n              });\n          } else if ($$punctuator !== 'quote') {\n            if (punctuator === 'quote') {\n              opened =\n                grouper ||\n                createGrouper({\n                  syntax,\n                  goal: punctuator,\n                  quote: text,\n                  matcher: (matchers && matchers.quote) || undefined,\n                  spans: (spans && spans[text]) || undefined,\n                  hinter,\n                  punctuator,\n                });\n            } else if (punctuator === 'comment') {\n              // const comment = comments[text];\n              const comment = comments.get(text);\n              opened =\n                grouper ||\n                createGrouper({\n                  syntax,\n                  goal: punctuator,\n                  comment,\n                  matcher: comment.matcher || (matchers && matchers.comment) || undefined,\n                  hinter,\n                  punctuator,\n                });\n            } else if (punctuator === 'closure') {\n              // const closure = (grouper && grouper.closure) || closures[text];\n              const closure = (grouper && grouper.closure) || closures.get(text);\n              punctuator = next.punctuator = 'opener';\n              // 'opener' !==\n              //   (punctuator =\n              //     (closure.open &&\n              //       (next = closure.open(next, state, previous) || next).punctuator) ||\n              //     (next.punctuator = 'opener')) ||\n              closure &&\n                (opened =\n                  grouper ||\n                  createGrouper({\n                    syntax,\n                    goal: syntax,\n                    closure,\n                    matcher: closure.matcher || (matchers && matchers.closure) || undefined,\n                    hinter,\n                    punctuator,\n                  }));\n            }\n          }\n\n          if (opened) {\n            // after = opened.open && opened.open(next, state, opened);\n            grouping.groupers[group] || (grouping.groupers[group] = grouper = opened);\n            grouping.groupings.push(grouper), grouping.hints.add(hinter);\n            grouping.goal = (grouper && grouper.goal) || syntax;\n            parent = next;\n          }\n        }\n\n        state.context = grouping.context = grouping.goal || syntax;\n\n        if (opened || closed) {\n          $context = $contexting.next((state.grouper = grouper || undefined)).value;\n          grouping.hint = `${[...grouping.hints].join(' ')} ${\n            grouping.context ? `in-${grouping.context}` : ''\n          }`;\n          opened && (after = opened.open && opened.open(next, state, $context));\n        }\n      }\n\n      // Current contextual tail token (yield from sequence)\n      yield (previous = next);\n\n      // Next reference to last contextual sequence token\n      next && !whitespace && forming && (last = next);\n\n      if (after) {\n        let tokens, token, nextIndex; //  = after.end || after.index\n\n        if (after.syntax) {\n          const {syntax, offset, index} = after;\n          const body = index > offset && source.slice(offset, index - 1);\n          if (body) {\n            body.length > 0 &&\n              ((tokens = tokenize(body, {options: {syntax}}, defaults)), (nextIndex = index));\n            const hint = `${syntax}-in-${$.syntax}`;\n            token = token => (\n              (token.hint = `${(token.hint && `${token.hint} `) || ''}${hint}`), token\n            );\n          }\n        } else if (after.length) {\n          const hint = grouping.hint;\n          token = token => (\n            (token.hint = `${hint} ${token.type || 'code'}`), $context.token(token)\n          );\n          (tokens = after).end && (nextIndex = after.end);\n        }\n\n        if (tokens) {\n          // console.log({token, tokens, nextIndex});\n          for (const next of tokens) {\n            previous && ((next.previous = previous).next = next);\n            token && token(next);\n            yield (previous = next);\n          }\n        }\n        nextIndex > index && (state.index = nextIndex);\n      }\n    }\n  }\n}\n\n// (next.punctuator = punctuator =\n//   (closure.open &&\n//     closure.open(next, state, previous) &&\n//     (next.punctuator || punctuator)) ||\n//   'opener') ||\n// (next.punctuator = punctuator =\n//   (closure.open && closure.open(next, state, previous)) || 'opener') ||\n// if (body.syntax && body.text) {\n//   const {syntax, text} = body;\n//   const state = {options: {syntax}};\n//   const tokens = tokenize(text, state, defaults);\n//   for (const token of tokens) yield token;\n// }\n\n// const aggregate =\n//   assigners || combinators\n//     ? ((...aggregators) => {\n//         const aggregates = {};\n//         if (aggregators.length) {\n//           let aggregated = 0;\n//           for (const aggregate of aggregators)\n//             if (aggregate)\n//               for (const symbol of aggregate[1])\n//                 !symbol ||\n//                   aggregates[symbol] ||\n//                   ((aggregates[symbol] = aggregate[0]), aggregated++);\n//           if (!aggregated) return false;\n//         }\n//         const aggregator = text => aggregates[text] || false;\n//         aggregator.aggregates = aggregates;\n//         return aggregator;\n//       })(\n//         assigners && (assigners.size > 0 || assigners.length > 0) && ['assigner', assigners],\n//         combinators &&\n//           (combinators.size > 0 || combinators.length > 0) && ['combinator', combinators],\n//       )\n//     : false;\n","/// Helpers\nexport const raw = String.raw;\n\n/**\n * Create a sequence match expression from patterns.\n *\n * @param  {...Pattern} patterns\n */\nexport const sequence = (...patterns) =>\n  new RegExp(Reflect.apply(raw, null, patterns.map(p => (p && p.source) || p || '')), 'g');\n\n/**\n * Create a maybeIdentifier test (ie [<first>][<other>]*) expression.\n *\n * @param  {Entity} first - Valid ^[<…>] entity\n * @param  {Entity} other - Valid [<…>]*$ entity\n * @param  {string} [flags] - RegExp flags (defaults to 'u')\n * @param  {unknown} [boundary]\n */\nexport const identifier = (\n  first,\n  other = first,\n  flags = 'u',\n  boundary = /yg/.test(flags) && '\\\\b',\n) => new RegExp(`${boundary || '^'}[${first}][${other}]*${boundary || '$'}`, flags);\n\n/**\n * Create a sequence pattern from patterns.\n *\n * @param  {...Pattern} patterns\n */\nexport const all = (...patterns) => patterns.map(p => (p && p.exec ? p.source : p)).join('|');\n\n/// Symbols\n\nexport class Symbols extends Set {\n  static from(...sources) {\n    const Species = this || Symbols;\n    const symbols = (sources.length && Species.split(sources)) || [];\n    return new Species(symbols);\n  }\n\n  get(symbol) {\n    if (this.has(symbol)) return symbol;\n  }\n\n  static split(...sources) {\n    const Species = this || Symbols;\n    const symbols = [];\n    for (const source of sources.flat()) {\n      source &&\n        (typeof source === 'string'\n          ? symbols.push(...source.split(/ +/))\n          : Symbol.iterator in source && symbols.push(...Species.split(...source)));\n    }\n    return symbols;\n  }\n}\n\n{\n  const {has} = Object.getOwnPropertyDescriptors(Set.prototype);\n  const {map} = Object.getOwnPropertyDescriptors(Array.prototype);\n  Object.defineProperties(Symbols.prototype, {includes: has, map});\n}\n\n/// Closures\n\nexport class Closure extends String {\n  constructor(opener, closer = opener) {\n    if (!opener || !closer) throw Error(`Cannot construct closure from \"${opener}\" … \"${closer}\"`);\n    super(`${opener}…${closer}`);\n    this.opener = opener;\n    this.closer = closer;\n  }\n}\n\nexport class Closures extends Map {\n  static from(...sources) {\n    const Species = this || Closures;\n    const closures = (sources.length && Species.split(sources)) || [];\n    return new Species(closures);\n  }\n  static split(...sources) {\n    const Species = this || Closures;\n    const Member = Species.Element || Closure;\n    const closures = [];\n    for (const source of sources.flat()) {\n      if (source) {\n        switch (typeof source) {\n          case 'object': {\n            if (source instanceof Member) {\n              closures.push([source.opener, source]);\n            } else if (source instanceof Species) {\n              closures.push(...source);\n            }\n            break;\n          }\n          case 'string': {\n            for (const pair of source.split(/ *?([^ ]+…[^ ]+|[^ …]+) *?/)) {\n              if (!pair) continue;\n              const [opener, closer] = pair.split('…');\n              const closure = new Member(opener, closer);\n              closures.push([opener, closure]);\n            }\n            break;\n          }\n        }\n      }\n    }\n    return closures;\n  }\n}\n\n{\n  const {has} = Object.getOwnPropertyDescriptors(Map.prototype);\n  Object.defineProperties(Closures.prototype, {includes: has});\n}\n\n// export const Symbols = Object.defineProperty(\n//   source =>\n//     (source &&\n//       ((typeof source === 'string' && source.split(/ +/)) ||\n//         (Symbol.iterator in source && [...source]))) ||\n//     [],\n//   'from',\n//   {value: (...args) => [...new Set([].concat(...args.map(Symbols)))]},\n// );\n// export const Symbols = Object.defineProperty(source => Symbols.from(source), 'from', {\n//   value: (...args) => Symbols.from(...args),\n// });\n\n// export const closures = string => {\n//   const pairs = Symbols.from(string);\n//   const array = new Array(pairs.size);\n//   const entries = {};\n//   array.pairs = pairs;\n//   let i = 0;\n//   for (const pair of pairs) {\n//     const [opener, closer] = pair.split('…');\n//     // array[(array[i++] = opener)] = {opener, closer};\n//     entries[(array[i++] = opener)] = {opener, closer};\n//   }\n//   array.get = opener => entries[opener];\n//   array.toString = () => string;\n//   return array;\n// };\n\n// export const lines = string => string.split(/\\n+/),\n","/** @typedef {RegExp|string} Pattern - Valid /(…)/ sub expression */\n/** @typedef {string|{source: string}} Entity - Valid /[…]/ sub expression */\n\nexport {patterns} from './markup-parser.js';\nimport {raw} from './helpers.js';\n\n/// Entities\n\n/**\n * The collection of Regular Expressions used to match specific\n * markup sequences in a given context or to test matched sequences verbosely\n * in order to further categorize them. Full support for Unicode Classes and\n * Properties has been included in the ECMAScript specification but certain\n * engines are still implementing them.\n *\n * @type {{[name: string]: {[name: string]: Entity}}}\n */\nexport const entities = {\n  es: {\n    /** http://www.ecma-international.org/ecma-262/9.0/#prod-IdentifierStart */\n    IdentifierStart: raw`_$\\p{ID_Start}`,\n    /** http://www.ecma-international.org/ecma-262/9.0/#prod-IdentifierPart */\n    IdentifierPart: raw`_$\\u200c\\u200d\\p{ID_Continue}`,\n  },\n};\n\n/** Interoperability (for some browsers) */\n(Ranges => {\n  const transforms = [];\n\n  if (!supports(raw`\\p{ID_Start}`, 'u')) {\n    const UnicodePropertyEscapes = /\\\\p{ *(\\w+) *}/g;\n    UnicodePropertyEscapes.replace = (m, propertyKey) => {\n      if (propertyKey in Ranges) return Ranges[propertyKey].toString();\n      throw RangeError(`Cannot rewrite unicode property \"${propertyKey}\"`);\n    };\n    transforms.push(expression => {\n      let flags = expression && expression.flags;\n      let source = expression && `${expression.source || expression || ''}`;\n      source &&\n        UnicodePropertyEscapes.test(source) &&\n        (source = source.replace(UnicodePropertyEscapes, UnicodePropertyEscapes.replace));\n      return (flags && new RegExp(source, flags)) || source;\n    });\n  }\n\n  if (!transforms.length) return;\n\n  for (const key in entities) {\n    const sources = entities[key];\n    const changes = {};\n    for (const id in sources) {\n      let source = sources[id];\n      if (!source || typeof source !== 'string') continue;\n      for (const transform of transforms) source = transform(source);\n      !source || source === sources[id] || (changes[id] = source);\n    }\n    Object.assign(sources, changes);\n  }\n\n  // prettier-ignore\n  function supports() {try {return !!RegExp(... arguments)} catch (e) { }}\n})({\n  ID_Start: raw`a-zA-Z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7b9\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab65\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc`,\n  ID_Continue: raw`a-zA-Z0-9\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7b9\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab65\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f`,\n});\n\nexport const ready = Promise.resolve();\n\n// /// Regular Expressions\n// export const RegExpUnicodeProperties = /\\\\p{ *(\\w+) *}/g;\n\n// RegExpUnicodeProperties.replace = (m, propertyKey) => {\n//   // const property = ASCII[propertyKey] || Unicode[propertyKey];\n//   const property = Ranges[propertyKey];\n//   if (property) return property.toString();\n//   throw RangeError(`Cannot rewrite unicode property \"${propertyKey}\"`);\n// };\n\n// RegExpUnicodeProperties.rewrite = expression => {\n//   let flags = expression && expression.flags;\n//   let source = expression && `${expression.source || expression || ''}`;\n//   source &&\n//     RegExpUnicodeProperties.test(source) &&\n//     (source = source.replace(RegExpUnicodeProperties, RegExpUnicodeProperties.replace));\n//   return (flags && new RegExp(source, flags)) || source;\n// };\n\n// /// Interoperability\n// export const supported =\n//   // TODO: Remove when ssupporting non-unicode runtimes [not in scope]\n//   new RegExp(raw`\\uFFFF`, 'u') &&\n//   supports(\n//     UnicodeProperties => new RegExp(raw`\\p{L}`, 'u'),\n//     UnicodeClasses => new RegExp(raw`\\p{ID_Start}\\p{ID_Continue}`, 'u'),\n//   );\n\n// async function replaceUnsupportedExpressions() {\n//   // await Unicode.initialize(); console.log(Unicode);\n//   for (const key in entities) {\n//     const sources = entities[key];\n//     const replacements = {};\n//     for (const id in sources)\n//       !sources[id] ||\n//         typeof (sources[id].source || sources[id]) !== 'string' ||\n//         (replacements[id] = RegExpUnicodeProperties.rewrite(sources[id]));\n//     Object.assign(sources, replacements);\n//   }\n//   return;\n// }\n\n// function supports(feature, ...features) {\n//   if (feature) {\n//     try {\n//       feature();\n//     } catch (exception) {\n//       return false;\n//     }\n//   }\n//   return !features.length || Reflect.apply(supports, null, features);\n// }\n\n// // TODO: Fix UnicodeRange.merge if not implemented in Firefox soon\n// // import {Unicode} from './unicode/unicode.js';\n\n// // TODO: Remove Ranges once UnicodeRange is working\n// const Ranges = {\n//   // L: 'a-zA-Z',\n//   // N: '0-9',\n//   ID_Start: raw`a-zA-Z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7b9\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab65\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc`,\n//   ID_Continue: raw`a-zA-Z0-9\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7b9\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab65\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f`,\n// };\n\n// /// Bootstrap\n// export const ready = (entities.ready = supported\n//   ? Promise.resolve()\n//   : replaceUnsupportedExpressions());\n","const defaults = {\n  aliases: ['ps', 'eps'],\n  syntax: 'postscript',\n};\n\nconst keywords =\n  'abs add aload anchorsearch and arc arcn arct arcto array ashow astore atan awidthshow begin bind bitshift bytesavailable cachestatus ceiling charpath clear cleartomark cleardictstack clip clippath closefile closepath colorimage concat concatmatrix condition configurationerror copy copypage cos count countdictstack countexecstack counttomark cshow currentblackgeneration currentcacheparams currentcmykcolor currentcolor currentcolorrendering currentcolorscreen currentcolorspace currentcolortransfer currentcontext currentdash currentdevparams currentdict currentfile currentflat currentfont currentglobal currentgray currentgstate currenthalftone currenthalftonephase currenthsbcolor currentlinecap currentlinejoin currentlinewidth currentmatrix currentmiterlimit currentobjectformat currentpacking currentpagedevice currentpoint currentrgbcolor currentscreen currentshared currentstrokeadjust currentsystemparams currenttransfer currentundercolorremoval currentuserparams curveto cvi cvlit cvn cvr cvrs cvs cvx def defaultmatrix definefont defineresource defineusername defineuserobject deletefile detach deviceinfo dict dictfull dictstack dictstackoverflow dictstackunderflow div dtransform dup echo eexec end eoclip eofill eoviewclip eq erasepage errordict exch exec execform execstack execstackoverflow execuserobject executeonly executive exit exp false file filenameforall fileposition fill filter findencoding findfont findresource flattenpath floor flush flushfile FontDirectory for forall fork ge get getinterval globaldict GlobalFontDirectory glyphshow grestore grestoreall gsave gstate gt handleerror identmatrix idiv idtransform if ifelse image imagemask index ineofill infill initclip initgraphics initmatrix initviewclip instroke internaldict interrupt inueofill inufill inustroke invalidaccess invalidcontext invalidexit invalidfileaccess invalidfont invalidid invalidrestore invertmatrix ioerror ISOLatin1Encoding itransform join kshow known languagelevel le length limitcheck lineto ln load lock log loop lt makefont makepattern mark matrix maxlength mod monitor moveto mul ne neg newpath noaccess nocurrentpoint not notify null nulldevice or packedarray pathbbox pathforall pop print printobject product prompt pstack put putinterval quit rand rangecheck rcurveto read readhexstring readline readonly readstring realtime rectclip rectfill rectstroke rectviewclip renamefile repeat resetfile resourceforall resourcestatus restore reversepath revision rlineto rmoveto roll rootfont rotate round rrand run save scale scalefont scheck search selectfont serialnumber setbbox setblackgeneration setcachedevice setcachedevice2 setcachelimit setcacheparams setcharwidth setcmykcolor setcolor setcolorrendering setcolorscreen setcolorspace setcolortransfer setdash setdevparams setfileposition setflat setfont setglobal setgray setgstate sethalftone sethalftonephase sethsbcolor setlinecap setlinejoin setlinewidth setmatrix setmiterlimit setobjectformat setoverprint setpacking setpagedevice setpattern setrgbcolor setscreen setshared setstrokeadjust setsystemparams settransfer setucacheparams setundercolorremoval setuserparams setvmthreshold shareddict show showpage sin sqrt srand stack stackoverflow stackunderflow StandardEncoding start startjob status statusdict stop stopped store string stringwidth stroke strokepath sub syntaxerror systemdict timeout transform translate true truncate type typecheck token uappend ucache ucachestatus ueofill ufill undef undefined undefinedfilename undefineresource undefinedresult undefinefont undefineresource undefinedresource undefineuserobject unmatchedmark unregistered upath userdict UserObjects usertime ustroke ustrokepath version viewclip viewclippath VMerror vmreclaim vmstatus wait wcheck where widthshow write writehexstring writeobject writestring wtranslation xcheck xor xshow xyshow yield yshow';\n// const quotes = `(…) <…> <~…~>`;\nconst enclosures = `{…} […] <<…>> (…) <~…~> <…>`;\nconst comments = `%…\\n`;\n\n/// PATTERNS\nconst COMMENTS = /%/;\nconst OPERATORS = /\\/\\/|\\/|={1,2}/;\nconst ENCLOSURES = /<<|>>|{|}|\\[|\\]/;\nconst QUOTES = /<~|~>|<|>|\\(|\\)/;\nconst WHITESPACE = /[\\s\\n]+/; // /[\\0\\x09\\x0A\\x0C\\x0D\\x20]/;\n\n// NUMBERS\nconst DECIMAL = /[+\\-]?\\d+\\.?|[+\\-]?\\d*\\.\\d+/;\nconst EXPONENTIAL = /\\d+[eE]\\-?\\d+|\\d+\\.\\d+[eE]\\-?\\d+/;\nconst RADIX = /[2-9]#\\d+|1\\d#[\\da-jA-J]+|2\\d#[\\da-tA-T]+|3[0-6][\\da-zA-Z]+/;\n\n// NAMES\nconst NAME = /[\\da-zA-Z$@.\\-]+/;\n\n// STRINGS\nconst ASCII16 = /(?:[\\da-fA-F]{2})*[\\da-fA-F]{1,2}/;\nconst ASCII85 = /(?:[!-uz]{4})*[!-uz]{1,4}/;\n// const STRING = /\\((?:[^\\\\]|\\\\.|\\((?:[^\\\\]|\\\\.|.)*?\\)[^()]+\\))\\)/\n// const STRING = /\\((?:[^\\\\]|\\\\.|\\((?:[^\\\\]|\\\\.|.)*\\)[^()]+\\))\\)/\n// const STRING = /\\((?:[^\\\\]|\\\\.|\\((?:[^\\\\]*?|\\\\.)*?\\)[^()\\\\]*\\))+?\\)/\n// const STRING = /\\((?:[^()]*|\\(.*?\\)[^()]*\\))*\\)/\n\nexport const postscript = Object.defineProperties(\n  ({symbols, closures, sequence}, {aliases, syntax} = defaults) => ({\n    syntax,\n    keywords: Symbols.from(keywords),\n    quotes: closures(quotes),\n    closures: closures(enclosures),\n    patterns: {\n      maybeIdentifier: new RegExp(`^${NAME.source}$`),\n    },\n    matcher: sequence`(${WHITESPACE})|(${all(COMMENTS, OPERATORS, ENCLOSURES, QUOTES)})|(${all(\n      DECIMAL,\n      EXPONENTIAL,\n      RADIX,\n      NAME,\n    )})`,\n    matchers: {\n      // '(': /(\\\\?\\n)|(\\\\.|(?:[^()]+|\\(.*\\)|))/\n    },\n  }),\n  {\n    defaults: {get: () => ({...defaults})},\n  },\n);\n\n// ...(modes[syntax] = {syntax}),\n\n// ...(modes.html = {syntax: 'html'}),\n// keywords: symbols('DOCTYPE doctype'),\n// comments: closures('<!--…-->'),\n// quotes: [],\n// closures: closures('<%…%> <!…> <…/> </…> <…>'),\n// patterns: {\n//   ...patterns,\n//   closeTag: /<\\/\\w[^<>{}]*?>/g,\n//   maybeIdentifier: /^(?:(?:[a-z][\\-a-z]*)?[a-z]+\\:)?(?:[a-z][\\-a-z]*)?[a-z]+$/,\n// },\n// matcher: matchers.xml,\n// matchers: {\n//   quote: /(\\n)|(\\\\(?:(?:\\\\\\\\)*\\\\|[^\\\\\\s])|\"|')/g,\n//   comment: /(\\n)|(-->)/g,\n// },\n// if (aliases) for (const mode of postscript.aliases) modes[id] = modes[syntax];\n","import {matchers, modes} from './markup-parser.js';\nimport {patterns, entities} from './markup-patterns.js';\nimport * as helpers from './helpers.js';\nimport * as extensions from './extensions/modes.js';\n\n/// INTERFACE\nconst definitions = {};\n\nexport const install = (defaults, newSyntaxes = defaults.syntaxes || {}) => {\n  Object.assign(newSyntaxes, syntaxes);\n  Object.defineProperties(newSyntaxes, definitions);\n  defaults.syntaxes === newSyntaxes || (defaults.syntaxes = newSyntaxes);\n};\n\nexport const syntaxes = {};\n\n/// DEFINITIONS\nSyntaxes: {\n  const {Closures, Symbols, sequence, all, raw} = helpers;\n\n  CSS: {\n    const css = (syntaxes.css = {\n      ...(modes.css = {syntax: 'css'}),\n      comments: Closures.from('/*…*/'),\n      closures: Closures.from('{…} (…) […]'),\n      quotes: Symbols.from(`' \"`),\n      assigners: Symbols.from(`:`),\n      combinators: Symbols.from('> :: + :'),\n      nonbreakers: Symbols.from(`-`),\n      breakers: Symbols.from(', ;'),\n      patterns: {...patterns},\n      matcher: /([\\s\\n]+)|(\\\\(?:(?:\\\\\\\\)*\\\\|[^\\\\\\s])?|\\/\\*|\\*\\/|\\(|\\)|\\[|\\]|\"|'|\\{|\\}|,|;|\\.|\\b:\\/\\/\\b|::\\b|:(?!active|after|any|any-link|backdrop|before|checked|default|defined|dir|disabled|empty|enabled|first|first-child|first-letter|first-line|first-of-type|focus|focus-visible|focus-within|fullscreen|host|hover|in-range|indeterminate|invalid|lang|last-child|last-of-type|left|link|matches|not|nth-child|nth-last-child|nth-last-of-type|nth-of-type|only-child|only-of-type|optional|out-of-range|read-only|required|right|root|scope|target|valid|visited))/g,\n      matchers: {\n        quote: matchers.escapes,\n        comment: matchers.comments,\n      },\n    });\n  }\n\n  HTML: {\n    const html = (syntaxes.html = {\n      ...(modes.html = {syntax: 'html'}),\n      keywords: Symbols.from('DOCTYPE doctype'),\n      comments: Closures.from('<!--…-->'),\n      closures: Closures.from('<%…%> <!…> <…/> </…> <…>'),\n      quotes: [],\n      patterns: {\n        ...patterns,\n        closeTag: /<\\/\\w[^<>{}]*?>/g,\n        maybeIdentifier: /^(?:(?:[a-z][\\-a-z]*)?[a-z]+\\:)?(?:[a-z][\\-a-z]*)?[a-z]+$/,\n      },\n      matcher: matchers.xml,\n      matchers: {\n        quote: /(\\n)|(\\\\(?:(?:\\\\\\\\)*\\\\|[^\\\\\\s])|\"|')/g,\n        comment: /(\\n)|(-->)/g,\n      },\n    });\n\n    {\n      const DOCTAGS = Symbols.from('SCRIPT STYLE');\n      const TAG = /^[a-z]+$/i;\n      // TODO: Check if custom/namespace tags ever need special close logic\n      // const TAGLIKE = /^(?:(?:[a-z][\\-a-z]*)?[a-z]+\\:)?(?:[a-z][\\-a-z]*)?[a-z]+$/i;\n\n      const HTMLTagClosure = html.closures.get('<');\n\n      HTMLTagClosure.close = (next, state, context) => {\n        const parent = next && next.parent;\n        const first = parent && parent.next;\n        const tag = first && first.text && TAG.test(first.text) && first.text.toUpperCase();\n\n        if (tag && DOCTAGS.includes(tag)) {\n          // TODO: Uncomment once token buffering is implemented\n          // tag && (first.type = 'keyword');\n\n          let {source, index} = state;\n          const $$matcher = syntaxes.html.patterns.closeTag;\n\n          let match; //  = $$matcher.exec(source);\n          $$matcher.lastIndex = index;\n\n          // TODO: Check if `<script>`…`</SCRIPT>` is still valid!\n          const $$closer = new RegExp(raw`^<\\/(?:${first.text.toLowerCase()}|${tag})\\b`);\n\n          let syntax = (tag === 'STYLE' && 'css') || '';\n\n          if (!syntax) {\n            const openTag = source.slice(parent.offset, index);\n            const match = /\\stype=.*?\\b(.+?)\\b/.exec(openTag);\n            syntax =\n              tag === 'SCRIPT' && (!match || !match[1] || /^module$|javascript/i.test(match[1]))\n                ? 'es'\n                : '';\n            // console.log({syntax, tag, match, openTag});\n          }\n\n          while ((match = $$matcher.exec(source))) {\n            if ($$closer.test(match[0])) {\n              if (syntax) {\n                return {offset: index, index: match.index, syntax};\n              } else {\n                const offset = index;\n                const text = source.slice(offset, match.index - 1);\n                state.index = match.index;\n                return [{text, offset, previous: next, parent}];\n              }\n            }\n          }\n        }\n      };\n      HTMLTagClosure.quotes = Symbols.from(`' \"`);\n      HTMLTagClosure.closer = /\\/?>/;\n\n      // TODO: Allow grouping-level patterns for HTML attributes vs text\n      // html.closures['<'].patterns = { maybeIdentifier: TAGLIKE };\n    }\n  }\n\n  Markdown: {\n    const BLOCK = '```…``` ~~~…~~~';\n    const INLINE = '[…] (…) *…* **…** _…_ __…__ ~…~ ~~…~~';\n    /**\n     * TODO: Address unexpected closures in parsing fragmenter\n     *\n     * As far as tokenization goes, unexpected closures are still\n     * closures nonetheless. They are not spans.\n     */\n    const SPANS = ''; // INLINE\n    const CLOSURES = SPANS ? BLOCK : `${BLOCK} ${INLINE}`;\n\n    const html = syntaxes.html;\n    const md = (syntaxes.md = {\n      ...(modes.markdown = modes.md = {syntax: 'md'}),\n      comments: Closures.from('<!--…-->'),\n      quotes: [],\n      closures: Closures.from(html.closures, CLOSURES),\n      patterns: {...html.patterns},\n      matcher: /(^\\s+|\\n)|(&#x?[a-f0-9]+;|&[a-z]+;|(?:```+|\\~\\~\\~+|--+|==+|(?:\\#{1,6}|\\-|\\b\\d+\\.|\\b[a-z]\\.|\\b[ivx]+\\.)(?=\\s+\\S+))|\"|'|=|\\/>|<%|%>|<!--|-->|<[\\/\\!]?(?=[a-z]+\\:?[a-z\\-]*[a-z]|[a-z]+)|<|>|\\(|\\)|\\[|\\]|__?|([*~`])\\3?\\b|\\b([*~`])\\4?)|\\b[^\\n\\s\\[\\]\\(\\)\\<\\>&]*[^\\n\\s\\[\\]\\(\\)\\<\\>&_]\\b|[^\\n\\s\\[\\]\\(\\)\\<\\>&]+(?=__?\\b)/gim,\n      spans: undefined,\n      matchers: {comment: /(\\n)|(-->)/g},\n    });\n\n    if (md.closures) {\n      const SYNTAX = /^\\w+$/;\n\n      const previousTextFrom = (token, matcher) => {\n        const text = [];\n        if (matcher != null) {\n          if (matcher.test)\n            do token.text && text.push(token.text), (token = token.previous);\n            while (!token.text || !matcher.test(token.text));\n          else if (matcher.includes)\n            do token.text && text.push(token.text), (token = token.previous);\n            while (!token.text || !matcher.includes(token.text));\n          text.length && text.reverse();\n        }\n        return text.join('');\n      };\n\n      const indenter = (indenting, tabs = 2) => {\n        let source = indenting;\n        const indent = new RegExp(raw`(?:\\t|${' '.repeat(tabs)})`, 'g');\n        source = source.replace(/\\\\?(?=[\\(\\)\\:\\?\\[\\]])/g, '\\\\');\n        source = source.replace(indent, indent.source);\n        return new RegExp(`^${source}`, 'm');\n      };\n\n      const EMBEDDED = true;\n      {\n        const open = (parent, state, grouper) => {\n          const {source, index: start} = state;\n          const fence = parent.text;\n          const fencing = previousTextFrom(parent, '\\n');\n          const indenting = fencing.slice(fencing.indexOf('\\n') + 1, -fence.length) || '';\n          let end = source.indexOf(`\\n${fencing}`, start);\n          const INDENT = indenter(indenting);\n          const CLOSER = new RegExp(raw`\\n${INDENT.source.slice(1)}${fence}`, 'g');\n\n          CLOSER.lastIndex = start;\n          let closerMatch = CLOSER.exec(source);\n          if (closerMatch && closerMatch.index >= start) {\n            end = closerMatch.index + 1;\n          } else {\n            const FENCE = new RegExp(raw`\\n?[\\>\\|\\s]*${fence}`, 'g');\n            FENCE.lastIndex = start;\n            const fenceMatch = FENCE.exec(source);\n            if (fenceMatch && fenceMatch.index >= start) {\n              end = fenceMatch.index + 1;\n            } else return;\n          }\n\n          if (end > start) {\n            let offset = start;\n            let text;\n\n            const body = source.slice(start, end) || '';\n            const tokens = [];\n            tokens.end = end;\n            if (!EMBEDDED) {\n              text = body;\n              tokens.push({text, type: 'code', offset, parent});\n              offset += body.length;\n            } else {\n              const [head, ...lines] = body.split(/(\\n)/g);\n              if (head) {\n                tokens.push({text: head, type: 'comment', offset, parent}), (offset += head.length);\n              }\n              for (const line of lines) {\n                const [indent] = INDENT.exec(line) || '';\n                const inset = (indent && indent.length) || 0;\n                if (inset) {\n                  for (const text of indent.split(/(\\s+)/g)) {\n                    const type = (text.trim() && 'sequence') || 'whitespace';\n                    tokens.push({text, type, offset, parent});\n                    offset += text.length;\n                  }\n                  text = line.slice(inset);\n                } else {\n                  text = line;\n                }\n                tokens.push({text, type: 'code', offset, parent}), (offset += text.length);\n              }\n            }\n            // console.log({fencing, body, start, end, offset, lines, tokens});\n            if (tokens.length) return tokens;\n          }\n        };\n\n        const quotes = html.closures.get('<');\n        for (const opener of ['```', '~~~']) {\n          const FenceClosure = md.closures.get(opener);\n          if (FenceClosure) {\n            FenceClosure.matcher = new RegExp(\n              raw`/(\\s*\\n)|(${opener}(?=${opener}\\s|${opener}$)|^(?:[\\s>|]*\\s)?\\s*)|.*$`,\n              'gm',\n            );\n            FenceClosure.quotes = quotes;\n            FenceClosure.open = open;\n          }\n        }\n      }\n    }\n  }\n\n  ECMAScript: {\n    const REGEXPS = /\\/(?=[^\\*\\/\\n][^\\n]*\\/)(?:[^\\\\\\/\\n\\t\\[]+|\\\\\\S|\\[(?:\\\\\\S|[^\\\\\\n\\t\\]]+)+?\\])+?\\/[a-z]*/g;\n    const COMMENTS = /\\/\\/|\\/\\*|\\*\\/|\\/|^\\#\\!.*\\n/g;\n    const QUOTES = /`|\"|'/g;\n    const CLOSURES = /\\{|\\}|\\(|\\)|\\[|\\]/g;\n\n    const es = (syntaxes.es = {\n      ...(modes.javascript = modes.es = modes.js = modes.ecmascript = {syntax: 'es'}),\n      comments: Closures.from('//…\\n /*…*/'),\n      quotes: Symbols.from(`' \" \\``),\n      closures: Closures.from('{…} (…) […]'),\n      spans: {'`': Closures.from('${…}')},\n      keywords: Symbols.from(\n        // abstract enum interface package  namespace declare type module\n        'arguments as async await break case catch class const continue debugger default delete do else export extends finally for from function get if import in instanceof let new of return set super switch this throw try typeof var void while with yield',\n      ),\n      assigners: Symbols.from('= += -= *= /= **= %= |= ^= &= <<= >>= >>>='),\n      combinators: Symbols.from(\n        '>= <= == === != !== || && ! & | > < => % + - ** * / >> << >>> ? :',\n      ),\n      nonbreakers: Symbols.from('.'),\n      operators: Symbols.from('++ -- !! ^ ~ ! ...'),\n      breakers: Symbols.from(', ;'),\n      patterns: {...patterns},\n      matcher: sequence`([\\s\\n]+)|(${all(\n        REGEXPS,\n        raw`\\/=`,\n        COMMENTS,\n        QUOTES,\n        CLOSURES,\n        /,|;|\\.\\.\\.|\\.|\\:|\\?|=>/,\n        /!==|===|==|=/,\n        ...raw`\\+ \\- \\* & \\|`.split(' ').map(s => `${s}${s}|${s}=|${s}`),\n        ...raw`! \\*\\* % << >> >>> < > \\^ ~`.split(' ').map(s => `${s}=|${s}`),\n      )})`,\n      matchers: {\n        quote: /(\\n)|(\\\\(?:(?:\\\\\\\\)*\\\\|[^\\\\\\s])?|`|\"|'|\\$\\{)/g,\n        // quote: /(\\n)|(`|\"|'|\\$\\{)|(\\\\.)/g,\n        // quote: /(\\n)|(`|\"|'|\\$\\{)|(\\\\.)/g,\n        // \"'\": /(\\n)|(')|(\\\\.)/g,\n        // '\"': /(\\n)|(\")|(\\\\.)/g,\n        // '`': /(\\n)|(`|\\$\\{)|(\\\\.)/g,\n        comment: matchers.comments,\n      },\n    });\n\n    ECMAScriptExtensions: {\n      // const HASHBANG = /^\\#\\!.*\\n/g; // [^] === (?:.*\\n)\n      // TODO: Undo $ matching once fixed\n      const QUOTES = /`|\"(?:[^\\\\\"]+|\\\\.)*(?:\"|$)|'(?:[^\\\\']+|\\\\.)*(?:'|$)/g;\n      const COMMENTS = /\\/\\/.*(?:\\n|$)|\\/\\*[^]*?(?:\\*\\/|$)|^\\#\\!.*\\n/g; // [^] === (?:.*\\n)\n      const STATEMENTS = all(QUOTES, CLOSURES, REGEXPS, COMMENTS);\n      const BLOCKLEVEL = sequence`([\\s\\n]+)|(${STATEMENTS})`;\n      const TOPLEVEL = sequence`([\\s\\n]+)|(${STATEMENTS})`;\n      const CLOSURE = sequence`(\\n+)|(${STATEMENTS})`;\n      const ESM = sequence`${TOPLEVEL}|\\bexport\\b|\\bimport\\b`;\n      const CJS = sequence`${BLOCKLEVEL}|\\bexports\\b|\\bmodule.exports\\b|\\brequire\\b`;\n      const ESX = sequence`${BLOCKLEVEL}|\\bexports\\b|\\bimport\\b|\\bmodule.exports\\b|\\brequire\\b`;\n\n      const {quotes, closures, spans} = es;\n      const syntax = {quotes, closures, spans};\n      const matchers = {};\n      ({quote: matchers.quote} = es.matchers);\n\n      const esm = (syntaxes.esm = {\n        ...(modes.esm = {syntax: 'esm'}),\n        keywords: Symbols.from('import export default'),\n        ...syntax,\n        matcher: ESM,\n        matchers: {...matchers, closure: CLOSURE},\n      });\n      const cjs = (syntaxes.cjs = {\n        ...(modes.cjs = {syntax: 'cjs'}),\n        keywords: Symbols.from('import module exports require'),\n        ...syntax,\n        matcher: CJS,\n        matchers: {...matchers, closure: CJS},\n      });\n      const esx = (syntaxes.esx = {\n        ...(modes.esx = {syntax: 'esx'}),\n        keywords: Symbols.from(esm.keywords, cjs.keywords),\n        ...syntax,\n        matcher: ESX,\n        matchers: {...matchers, closure: ESX},\n      });\n    }\n  }\n}\n\n/// Extensions\n{\n  for (const mode in extensions) {\n    /**\n     * @typedef {Partial<typeof syntaxes[keyof syntaxes]>} mode\n     * @typedef {typeof helpers} helpers\n     * @typedef {{aliases?: string[], syntax: string}} defaults\n     * @type {(helpers: helpers, defaults: defaults) => mode}\n     */\n    const factory = extensions[mode];\n    const defaults = {syntax: mode, ...factory.defaults};\n    const {syntax, aliases} = defaults;\n\n    definitions[syntax] = {\n      get() {\n        return (this[syntax] = factory(helpers, defaults));\n      },\n      set(value) {\n        Reflect.defineProperty(this, syntax, {value});\n      },\n      configurable: true,\n      enumerable: true,\n    };\n\n    modes[syntax] = {syntax};\n\n    if (aliases && aliases.length) {\n      for (const alias of aliases) {\n        modes[alias] = modes[syntax];\n      }\n    }\n  }\n}\n/// Bootstrap\nexport const ready = (async () => {\n  await entities.ready;\n  syntaxes.es.patterns.maybeIdentifier = helpers.identifier(\n    entities.es.IdentifierStart,\n    entities.es.IdentifierPart,\n  );\n  // setTimeout(() => console.log('Syntaxes: %O', syntaxes), 1000);\n  // console.log({maybeIdentifier: `${syntaxes.es.patterns.maybeIdentifier}`});\n})();\n","const {assign, defineProperty} = Object;\n\nexport const document = void null;\n\nexport class Node {\n  get children() {\n    return defineProperty(this, 'children', {value: new Set()}).children;\n  }\n  get childElementCount() {\n    return (this.hasOwnProperty('children') && this.children.size) || 0;\n  }\n  get textContent() {\n    return (\n      (this.hasOwnProperty('children') && this.children.size && [...this.children].join('')) || ''\n    );\n  }\n  set textContent(text) {\n    this.hasOwnProperty('children') && this.children.size && this.children.clear();\n    text && this.children.add(new String(text));\n  }\n  appendChild(element) {\n    return element && this.children.add(element), element;\n  }\n  append(...elements) {\n    if (elements.length) for (const element of elements) element && this.children.add(element);\n  }\n  removeChild(element) {\n    element &&\n      this.hasOwnProperty('children') &&\n      this.children.size &&\n      this.children.delete(element);\n    return element;\n  }\n  remove(...elements) {\n    if (elements.length && this.hasOwnProperty('children') && this.children.size)\n      for (const element of elements) element && this.children.delete(element);\n  }\n}\n\nexport class Element extends Node {\n  get innerHTML() {\n    return this.textContent;\n  }\n  set innerHTML(text) {\n    this.textContent = text;\n  }\n  get outerHTML() {\n    const {className, tag, innerHTML} = this;\n    return `<${tag}${(className && ` class=\"${className}\"`) || ''}>${innerHTML || ''}</${tag}>`;\n  }\n  toString() {\n    return this.outerHTML;\n  }\n  toJSON() {\n    return this.toString();\n  }\n}\n\nexport class DocumentFragment extends Node {\n  toString() {\n    return this.textContent;\n  }\n  toJSON() {\n    return (this.childElementCount && [...this.children]) || [];\n  }\n  [Symbol.iterator]() {\n    return ((this.childElementCount && this.children) || '')[Symbol.iterator]();\n  }\n}\n\nexport class Text extends String {\n  toString() {\n    return encodeEntities(super.toString());\n  }\n}\n\nexport const createElement = (tag, properties, ...children) => {\n  const element = assign(new Element(), {\n    tag,\n    className: (properties && properties.className) || '',\n    properties,\n  });\n  children.length && defineProperty(element, 'children', {value: new Set(children)});\n  return element;\n};\n\nexport const createText = (content = '') => new Text(content);\nexport const encodeEntity = entity => `&#${entity.charCodeAt(0)};`;\nexport const encodeEntities = string => string.replace(/[\\u00A0-\\u9999<>\\&]/gim, encodeEntity);\nexport const createFragment = () => new DocumentFragment();\n","export const {document, Element, Node, Text, DocumentFragment} =\n  'object' === typeof self && (self || 0).window === self && self;\n\nexport const {createElement, createText, createFragment} = {\n  createElement: (tag, properties, ...children) => {\n    const element = document.createElement(tag);\n    properties && Object.assign(element, properties);\n    if (!children.length) return element;\n    if (element.append) {\n      while (children.length > 500) element.append(...children.splice(0, 500));\n      children.length && element.append(...children);\n    } else if (element.appendChild) {\n      for (const child of children) element.appendChild(child);\n    }\n    return element;\n  },\n\n  createText: (content = '') => document.createTextNode(content),\n\n  createFragment: () => document.createDocumentFragment(),\n};\n","import * as pseudo from './lib/pseudo.js';\nimport * as dom from './lib/native.js';\nexport {encodeEntity, encodeEntities} from './lib/pseudo.js';\n\n// TEST: Trace for ESM testing\ntypeof process === 'object' && console.info('[ESM]: %o', import.meta.url);\n\nexport const native = dom.document && dom;\nexport const {createElement, createText, createFragment} = native || pseudo;\nexport {pseudo};\n","import * as dom from '../packages/pseudom/pseudom.js';\n\n/// OPTIONS\n/** The tag name of the element to use for rendering a token. */\nconst SPAN = 'span';\n\n/** The class name of the element to use for rendering a token. */\nconst CLASS = 'markup';\n\n/**\n * Intended to prevent unpredictable DOM related overhead by rendering elements\n * using lightweight proxy objects that can be serialized into HTML text.\n */\nconst HTML_MODE = true;\n/// INTERFACE\n\nexport const renderers = {};\n\nexport async function* renderer(tokens, tokenRenderers = renderers) {\n  for await (const token of tokens) {\n    const {type = 'text', text, punctuator, breaks} = token;\n    const tokenRenderer =\n      (punctuator && (tokenRenderers[punctuator] || tokenRenderers.operator)) ||\n      (type && tokenRenderers[type]) ||\n      (text && tokenRenderers.text);\n    const element = tokenRenderer && tokenRenderer(text, token);\n    element && (yield element);\n  }\n}\n\nexport const install = (defaults, newRenderers = defaults.renderers || {}) => {\n  Object.assign(newRenderers, renderers);\n  defaults.renderers === newRenderers || (defaults.renderers = newRenderers);\n  defaults.renderer = renderer;\n};\n\nexport const supported = !!dom.native;\nexport const native = !HTML_MODE && supported;\nconst implementation = native ? dom.native : dom.pseudo;\nexport const {createElement, createText, createFragment} = implementation;\n\n/// IMPLEMENTATION\nconst factory = (tag, properties) => (content, token) => {\n  if (!content) return;\n  typeof content !== 'string' || (content = createText(content));\n  const element = createElement(tag, properties, content);\n\n  element && token && (token.hint && (element.className += ` ${token.hint}`));\n  // token.breaks && (element.breaks = token.breaks),\n  // token &&\n  // (token.form && (element.className += ` maybe-${token.form}`),\n  // token.hint && (element.className += ` ${token.hint}`),\n  // element && (element.token = token));\n\n  return element;\n};\n\nObject.assign(renderers, {\n  // whitespace: factory(SPAN, {className: `${CLASS} whitespace`}),\n  whitespace: createText,\n  text: factory(SPAN, {className: CLASS}),\n\n  variable: factory('var', {className: `${CLASS} variable`}),\n  keyword: factory(SPAN, {className: `${CLASS} keyword`}),\n  identifier: factory(SPAN, {className: `${CLASS} identifier`}),\n  operator: factory(SPAN, {className: `${CLASS} punctuator operator`}),\n  assigner: factory(SPAN, {className: `${CLASS} punctuator operator assigner`}),\n  combinator: factory(SPAN, {className: `${CLASS} punctuator operator combinator`}),\n  punctuation: factory(SPAN, {className: `${CLASS} punctuator punctuation`}),\n  quote: factory(SPAN, {className: `${CLASS} punctuator quote`}),\n  breaker: factory(SPAN, {className: `${CLASS} punctuator breaker`}),\n  opener: factory(SPAN, {className: `${CLASS} punctuator opener`}),\n  closer: factory(SPAN, {className: `${CLASS} punctuator closer`}),\n  span: factory(SPAN, {className: `${CLASS} punctuator span`}),\n  sequence: factory(SPAN, {className: `${CLASS} sequence`}),\n  literal: factory(SPAN, {className: `${CLASS} literal`}),\n  indent: factory(SPAN, {className: `${CLASS} sequence indent`}),\n  comment: factory(SPAN, {className: `${CLASS} comment`}),\n  code: factory(SPAN, {className: `${CLASS}`}),\n});\n","import * as modes from './markup-modes.js';\nimport * as dom from './markup-dom.js';\nimport * as parser from './markup-parser.js';\n\nexport let initialized;\n\nexport const ready = (async () => void (await modes.ready))();\n\nexport const versions = [parser];\n\n// const versions = [parser, parser2];\n\nconst initialize = () =>\n  initialized ||\n  (initialized = async () => {\n    const {createFragment, supported} = dom;\n\n    /**\n     * Temporary template element for rendering\n     * @type {HTMLTemplateElement?}\n     */\n    const template =\n      supported &&\n      (template =>\n        'HTMLTemplateElement' === (template && template.constructor && template.constructor.name) && template)(\n        document.createElement('template'),\n      );\n\n    /// API\n    const syntaxes = {};\n    const renderers = {};\n    const defaults = {...parser.defaults};\n\n    await ready;\n    /// Defaults\n    modes.install(defaults, syntaxes);\n    dom.install(defaults, renderers);\n\n    let lastVersion;\n    tokenize = (source, options = {}) => {\n      const version = options.version > 1 ? versions[options.version - 1] : versions[0];\n      options.tokenize = (version || parser).tokenize;\n      try {\n        return version.tokenize(source, {options}, defaults);\n      } finally {\n        !version || lastVersion === (lastVersion = version) || console.log({version});\n      }\n    };\n\n    render = async (source, options) => {\n      const fragment = options.fragment || createFragment();\n\n      const elements = parser.render(source, options, defaults);\n      let first = await elements.next();\n\n      let logs = (fragment.logs = []);\n\n      if (first && 'value' in first) {\n        if (!dom.native && template && 'textContent' in fragment) {\n          logs.push(`render method = 'text' in template`);\n          const body = [first.value];\n          if (!first.done) for await (const element of elements) body.push(element);\n          template.innerHTML = body.join('');\n          fragment.appendChild(template.content);\n\n          // if (!first.done) {\n          //   if (typeof requestAnimationFrame === 'function') {\n          //     //  && first.value.token\n          //     let lines = 0;\n          //     for await (const element of elements) {\n          //       // element.token &&\n          //       //   element.token.breaks > 0 &&\n          //       //   (lines += element.token.breaks) % 2 === 0 &&\n          //       lines++ % 10 === 0 &&\n          //         ((template.innerHTML = body.splice(0, body.length).join('')),\n          //         fragment.appendChild(template.content));\n          //       // await new Promise(r => setTimeout(r, 1000))\n          //       // await new Promise(requestAnimationFrame)\n          //       body.push(element);\n          //     }\n          //   } else {\n          //     for await (const element of elements) body.push(element);\n          //     template.innerHTML = body.join(''); // text\n          //     fragment.appendChild(template.content);\n          //   }\n          // }\n        } else if ('push' in fragment) {\n          logs.push(`render method = 'push' in fragment`);\n          fragment.push(first.value);\n          if (!first.done) for await (const element of elements) fragment.push(element);\n        } else if ('append' in fragment) {\n          //  && first.value.nodeType >= 1\n          logs.push(`render method = 'append' in fragment`);\n          fragment.append(first.value);\n          if (!first.done) for await (const element of elements) fragment.append(element);\n        }\n        // else if ('textContent' in fragment) {\n        //   let text = `${first.value}`;\n        //   if (!first.done) for await (const element of elements) text += `${element}`;\n        //   if (template) {\n        //     logs.push(`render method = 'text' in template`);\n        //   } else {\n        //     logs.push(`render method = 'text' in fragment`);\n        //     // TODO: Find a workaround for DocumentFragment.innerHTML\n        //     fragment.innerHTML = text;\n        //   }\n        // }\n      }\n\n      return fragment;\n    };\n\n    initialized = true;\n\n    return markup;\n  })();\n\nexport let render = async (source, options) => {\n  await initialize();\n  return await render(source, options);\n};\n\nexport let tokenize = (source, options) => {\n  if (!initialized) throw Error(`Markup: tokenize(…) called before initialization. ${Messages.InitializeFirst}`);\n  else if (initialized.then) Error(`Markup: tokenize(…) called during initialization. ${Messages.InitializeFirst}`);\n  return markup.tokenize(source, options);\n};\n\nconst keyFrom = options => (options && JSON.stringify(options)) || '';\nconst skim = iterable => {\n  for (const item of iterable);\n};\n\nexport const warmup = async (source, options) => {\n  const key = (options && keyFrom(options)) || '';\n  let cache = (warmup.cache || (warmup.cache = new Map())).get(key);\n  cache || warmup.cache.set(key, (cache = new Set()));\n  await (initialized || initialize());\n  // let tokens;\n  cache.has(source) || (skim(tokenize(source, options)), cache.add(source));\n  // cache.has(source) || ((tokens => { while (!tokens.next().done); })(tokenize(source, options)), cache.add(source));\n  return true;\n};\n\nexport const markup = Object.create(parser, {\n  initialize: {get: () => initialize},\n  render: {get: () => render},\n  tokenize: {get: () => tokenize},\n  warmup: {get: () => warmup},\n  dom: {get: () => dom},\n  modes: {get: () => parser.modes},\n});\n\n/// CONSTANTS\n\nconst Messages = {\n  InitializeFirst: `Try calling Markup.initialize().then(…) first.`,\n};\n\nexport default markup;\n"],"names":["all","Symbols","defaults","syntaxes","helpers.identifier","document","Element","Node","Text","DocumentFragment","createElement","createText","createFragment","dom.document","renderer","install","dom.native","native","dom.pseudo","ready","modes.ready","initialized","dom","parser.defaults","modes.install","dom.install","tokenize","render","parser.render","markup","parser.modes"],"mappings":"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"}