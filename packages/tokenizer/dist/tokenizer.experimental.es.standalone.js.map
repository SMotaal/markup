{"version":3,"file":"tokenizer.experimental.es.standalone.js","sources":["../../packages/tokenizer/lib/core.js","../../packages/matcher/lib/state.js","../../packages/matcher/lib/matcher.js","../../packages/matcher/lib/token-matcher.js","../../packages/matcher/lib/range.js","../../packages/matcher/experimental/common/helpers/symbol-map.js","../../packages/matcher/experimental/common/helpers.js","../../experimental/es/es-ranges.js","../../experimental/es/es-definitions.js","../../experimental/es/es-matcher.js","../../experimental/es/es-mode.js","../../experimental/es/standalone.js"],"sourcesContent":["﻿export const TOKENIZERS = 'tokenizers';\nexport const MAPPINGS = 'mappings';\nexport const MODES = 'modes';\n\nconst none = {\n  syntax: 'markup',\n  matcher: /([\\s\\n]+)|(\\\\(?:(?:\\\\\\\\)*\\\\|[^\\\\\\s])?|\\/\\/+|\\/\\*+|\\*+\\/|\\(|\\)|\\[|\\]|,|;|\\.\\.\\.|\\.|\\b:\\/\\/\\b|::|:|\\?|`|\"|'|\\$\\{|\\{|\\}|=>|<\\/|\\/>|\\++|\\-+|\\*+|&+|\\|+|=+|!={0,3}|<{1,3}=?|>{1,2}=?)|[+\\-*/&|^%<>~!]=?/g,\n};\n\nconst define = (instance, property, value, options) => {\n  if (!instance.hasOwnProperty(property))\n    return (\n      Object.defineProperty(instance, property, {\n        value,\n        writable: (options && options.writable === true) || false,\n        configurable: (options && options.configurable === true) || false,\n        enumerable: !options || options.enumerable === true,\n      }),\n      value\n    );\n};\n\nconst EmptyTokenArray = (EmptyTokenArray =>\n  Object.freeze(\n    new (Object.freeze(Object.freeze(Object.setPrototypeOf(EmptyTokenArray.prototype, null)).constructor, null))(),\n  ))(\n  class EmptyTokenArray {\n    *[Symbol.iterator]() {}\n  },\n);\n\n/** @type {(string: string, sequence: string , index?: number) => number} */\nexport const indexOf = Function.call.bind(String.prototype.indexOf);\n/** @type {(string: string) => number} */\nexport const countLineBreaks = text => {\n  let lineBreaks = 0;\n  for (let index = -1; (index = indexOf(text, '\\n', index + 1)) > -1; lineBreaks++);\n  return lineBreaks;\n};\n\nexport const createBaselineTokenizer = () => {\n  return class Tokenizer {\n    *tokenize(sourceText) {\n      let match, lastIndex;\n      const matcher = RegExp(none.matcher);\n      const string = String(sourceText || '');\n\n      lastIndex = 0;\n      while ((match = matcher.exec(string))) {\n        const {0: text, index} = match;\n        const pre = lastIndex < index && string.slice(lastIndex, index);\n        lastIndex = matcher.lastIndex;\n        pre && (yield {text: pre, lineBreaks: countLineBreaks(pre)});\n        yield {text, lineBreaks: countLineBreaks(text)};\n      }\n    }\n  };\n};\n\n/** @param {typeof import('./tokenizer.js')['Tokenizer']} [Tokenizer] */\nexport const createParser = (Tokenizer = createBaselineTokenizer()) =>\n  class Parser {\n    constructor(options) {\n      if (options) {\n        const {mode, tokenizer, url, modes} = options;\n        if (mode) {\n          this.register((this.mode = mode));\n          tokenizer && this[TOKENIZERS].set(mode, tokenizer);\n        }\n        if (modes) for (const id in modes) this.register(modes[id]);\n        url && (this.MODULE_URL = url);\n      }\n    }\n\n    /**\n     * @param source {string}\n     * @param state {{sourceType?: string}}\n     */\n    tokenize(source, state = {}) {\n      const {\n        options: {\n          sourceType,\n          mode = (state.options.mode = (sourceType && this.get(sourceType)) || this.mode || none),\n        } = (state.options = {}),\n      } = state;\n      let tokenizer = mode && this[TOKENIZERS].get(mode);\n      if (!source || !mode) return EmptyTokenArray;\n      if (!tokenizer) {\n        if (typeof Tokenizer !== 'function') {\n          throw TypeError(\n            `Parse factory expected the first argument to be a Tokenizer constructor (not ${typeof Tokenizer}) — either define a tokenizer mapping for \"${sourceType ||\n              mode.syntax ||\n              'markup'}\" or pass the a constructor to the factory.`,\n          );\n        }\n        this[TOKENIZERS].set(mode, (tokenizer = new Tokenizer(mode)));\n      }\n      state.parser = this;\n      state.tokenize = (this.hasOwnProperty('tokenize') && this.tokenize) || (this.tokenize = this.tokenize.bind(this));\n      return tokenizer.tokenize(source, state);\n    }\n\n    get [TOKENIZERS]() {\n      return define(this, TOKENIZERS, new WeakMap());\n    }\n    get [MAPPINGS]() {\n      return define(this, MAPPINGS, Object.create(null));\n    }\n\n    get [MODES]() {\n      return define(this, MODES, Object.create(null));\n    }\n\n    get(id = 'default') {\n      const {[MAPPINGS]: mappings, [MODES]: modes} = this;\n      if (id in modes) return modes[id];\n      let mapping = mappings[id];\n      !mapping || mapping.syntax === id || (mapping = mappings[mapping.syntax]);\n      if (mapping) {\n        const {syntax, mode, factory, options} = mapping;\n        if (mode) {\n          return (modes[id] = mode);\n        }\n        if (factory) {\n          if (options.requires && options.requires.length > 0) {\n            const list = [];\n            for (const id of options.requires) id in modes || this.get(id) || list.push(id);\n            if (list.length) {\n              list.length > 1 && list.push(list.splice(-2, 2).join(' and '));\n              throw Error(`Cannot initialize \"${syntax}\" which requires the list mode(s): ${list.join(', ')}`);\n            }\n          }\n          return (mapping.mode = modes[id] = factory(options, modes));\n        }\n      }\n    }\n\n    /** @param {ModeFactory | Mode} mode @param {ModeOptions} [options] */\n    register(mode, options) {\n      if (!this[MAPPINGS]) return;\n\n      const {[MAPPINGS]: mappings, [MODES]: modes} = this;\n      const factory = typeof mode === 'function' && mode;\n      const {syntax, aliases = (options.aliases = []), preregister, tokenizer} = ({\n        syntax: options.syntax = mode.syntax,\n      } = options = {\n        syntax: undefined,\n        ...(factory ? factory.defaults : mode),\n        ...options,\n      });\n\n      if (!syntax || typeof syntax !== 'string') {\n        throw TypeError(`Cannot register \"${syntax}\" since it not valid string'`);\n      }\n\n      if (preregister) preregister(this);\n\n      if (mappings[syntax]) {\n        if (factory ? factory === mappings[syntax].factory : mode === modes[syntax]) return;\n        throw ReferenceError(`Cannot register \"${syntax}\" since it is already registered`);\n      }\n\n      const ids = [syntax];\n\n      if (aliases && aliases.length > 0) {\n        for (const alias of aliases) {\n          const mapping = mappings[alias];\n          if (!alias || typeof alias !== 'string') {\n            throw TypeError(`Cannot register \"${syntax}\" since it's alias \"${alias}\" not valid string'`);\n          }\n\n          if (alias in modes || (mapping && (mapping.syntax === alias || mapping.syntax[0] === alias[0]))) {\n            continue;\n          }\n\n          if (mapping) {\n            Object.defineProperty(mappings, alias, {writable: true, configurable: true});\n            delete mappings[alias];\n            ids.push(alias);\n          }\n\n          ids.push(alias);\n        }\n      }\n\n      const mapping = factory ? {syntax, factory, options} : {syntax, mode, options};\n      const descriptor = {value: mapping, writable: false, configurable: true};\n\n      for (const id of ids) Object.defineProperty(mappings, id, descriptor);\n\n      if (tokenizer) this[TOKENIZERS].set(mode, tokenizer);\n    }\n\n    unregister(id) {\n      const {[MAPPINGS]: mappings, [MODES]: modes} = this;\n      if (id in modes) {\n        throw ReferenceError(`Cannot unregister \"${id}\" since it's already been bootstrapped for use.`);\n      }\n      Object.defineProperty(mappings, id, {writable: true, configurable: true});\n      delete mappings[id];\n    }\n\n    /** @param {string} mode @param {string[]} requires */\n    requires(mode, requires) {\n      const missing = [];\n      for (const mode of requires) {\n        mode in this[MAPPINGS] || missing.push(`\"${mode}\"`);\n      }\n      if (!missing.length) return;\n      throw Error(`Cannot initialize \"${mode}\" which requires the missing mode(s): ${missing.join(', ')}`);\n    }\n  };\n\n/**\n * @typedef { Partial<{syntax: string, matcher: RegExp, [name:string]: Set | Map | {[name:string]: Set | Map | RegExp} }> } Mode\n * @typedef { {[name: string]: Mode} } Modes\n * @typedef { {[name: string]: {syntax: string} } } Mappings\n * @typedef { {aliases?: string[], syntax: string} } ModeOptions\n * @typedef { (options: ModeOptions, modes: Modes) => Mode } ModeFactory\n */\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\nconst CurrentIndex = Symbol('CurrentIndex');\nconst CurrentMatch = Symbol('CurrentMatch');\nconst CurrentToken = Symbol('CurrentToken');\nconst CreatedToken = Symbol('CreatedToken');\nconst TotalTokens = Symbol('TotalTokens');\nconst TotalMatches = Symbol('TotalMatches');\nconst Next = Symbol('Next');\nconst Initialize = Symbol('Initialize');\nconst Finalize = Symbol('Finalize');\nconst Tokens = Symbol('Tokens');\n\n/** @template {RegExp} T  @implements {MatcherIterator<T>} */\nexport class MatcherState {\n  /** @param {Partial<MatcherState<T>>} properties */\n  constructor({source, matcher, initialize, finalize, ...properties}) {\n    Object.assign(this, properties);\n\n    this.done = false;\n    /** @type {*} */\n    this.value = undefined;\n\n    /** @type {string} */\n    this.source = String(source);\n    /** @type {T} */\n    this.matcher =\n      matcher &&\n      (matcher instanceof RegExp\n        ? Object.setPrototypeOf(RegExp(matcher.source, matcher.flags || 'g'), matcher)\n        : RegExp(matcher, 'g'));\n\n    /** @type {RegExpExecArray} */\n    this[CurrentMatch] = undefined;\n    this[TotalMatches] = -1;\n    this[Next] = this.getNextMatch;\n    this[Initialize] =\n      typeof initialize === 'function'\n        ? () => {\n            this.initialize();\n            initialize();\n          }\n        : this.initialize;\n    this[Finalize] =\n      typeof finalize === 'function'\n        ? () => {\n            finalize();\n            this.finalize();\n          }\n        : this.finalize;\n  }\n\n  initialize() {\n    Object.defineProperties(this, {\n      source: {value: this.source, writable: false, configurable: true},\n      matcher: {value: this.matcher, writable: false, configurable: true},\n    });\n    this[TotalMatches] = 0;\n  }\n\n  finalize() {\n    Object.freeze(this);\n  }\n\n  [Symbol.iterator]() {\n    return this;\n  }\n\n  next() {\n    if (this.done) return this;\n    if (this[TotalMatches] === -1) this[Initialize]();\n    if ((this.done = (this.value = this[Next]()) == null)) this[Finalize]();\n    else this[TotalMatches]++;\n    return this;\n  }\n\n  getNextMatch() {\n    return !this.done &&\n      this.matcher.lastIndex <\n        ((this[CurrentMatch] = this.matcher.exec(this.source)) != null /* */\n          ? this.matcher.lastIndex + (this[CurrentMatch][0].length === 0 && 1)\n          : this.matcher.lastIndex)\n      ? this[CurrentMatch]\n      : undefined;\n  }\n}\n\n/** @template {RegExp} T  @extends {MatcherState<T>} */\nexport class TokenizerState extends MatcherState {\n  /** @param {Partial<TokenizerState<T>>} properties */\n  constructor(properties) {\n    super(properties)[Next] = this.getNextToken;\n  }\n\n  initialize() {\n    super.initialize();\n    this[TotalTokens] = 0;\n  }\n\n  finalize() {\n    super.finalize();\n  }\n\n  getNextToken() {\n    if (this.done || this.getNextMatch() == null) return;\n\n    this[CurrentToken] = this[CreatedToken];\n    this[CreatedToken] = this.createToken(this[CurrentMatch], this);\n\n    if (this[CreatedToken] !== undefined) {\n      this[CreatedToken].index = ++this[TotalTokens];\n    }\n\n    // Initial design considered holding on to one token\n    //   that used to be set to state.nextToken along with\n    //   the matching state.nextTokenContext.\n    //\n    // TODO: Replace graceful holding with construct stacking.\n    return this[CurrentToken] || this.getNextToken();\n  }\n\n  get [Tokens]() {\n    return Object.defineProperty(this, Tokens, {value: [], writable: false, configurable: true})[Tokens];\n  }\n\n  createToken(match, state) {}\n}\n\nTokenizerState.defaults = {source: undefined, initialize: undefined, finalize: undefined};\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport {MatcherState} from './state.js';\n\n/** Matcher for composable matching */\nexport class Matcher extends RegExp {\n  /**\n   * @param {MatcherPattern} pattern\n   * @param {MatcherFlags} [flags]\n   * @param {MatcherEntities} [entities]\n   * @param {{}} [state]\n   */\n  constructor(pattern, flags, entities, state) {\n    //@ts-ignore\n    super(pattern, flags);\n    (pattern &&\n      pattern.entities &&\n      Symbol.iterator in pattern.entities &&\n      ((!entities && (entities = pattern.entities)) || entities === pattern.entities)) ||\n      Object.freeze(\n        Object.assign((entities = (entities && Symbol.iterator in entities && [...entities]) || []), {\n          flags,\n          meta: Matcher.metaEntitiesFrom(entities),\n          identities: Matcher.identityEntitiesFrom(entities),\n        }),\n      );\n\n    /** @type {MatcherEntities} */\n    this.entities = entities;\n    this.state = state;\n    this.exec = this.exec;\n    this.capture = this.capture;\n\n    ({DELIMITER: this.DELIMITER = Matcher.DELIMITER, UNKNOWN: this.UNKNOWN = Matcher.UNKNOWN} = new.target);\n  }\n\n  /** @param {MatcherExecArray} match */\n  capture(match) {\n    // @ts-ignore\n    if (match === null) return null;\n\n    // @ts-ignore\n    match.matcher = this;\n    match.capture = {};\n\n    //@ts-ignore\n    for (\n      let i = 0, entity;\n      match[++i] === undefined ||\n      void (\n        (entity = this.entities[(match.entity = i - 1)]) == null ||\n        (typeof entity === 'function'\n          ? entity(match[0], i, match, this.state)\n          : (match.capture[(match.identity = entity)] = match[0]))\n      );\n\n    );\n\n    return match;\n  }\n\n  /**\n   * @param {string} source\n   */\n  exec(source) {\n    const match = /** @type {MatcherExecArray} */ (super.exec(source));\n    match == null || this.capture(match);\n    return match;\n  }\n\n  /** @returns {entity is MatcherMetaEntity} */\n  static isMetaEntity(entity) {\n    return typeof entity === 'string' && entity.endsWith('?');\n  }\n\n  /** @returns {entity is MatcherIdentityEntity} */\n  static isIdentityEntity(entity) {\n    return typeof entity === 'string'\n      ? entity !== '' && entity.trim() === entity && !entity.endsWith('?')\n      : typeof entity === 'symbol';\n  }\n\n  static metaEntitiesFrom(entities) {\n    return /** @type {MatcherEntitySet<MatcherMetaEntity>} */ (new Set([...entities].filter(Matcher.isMetaEntity)));\n  }\n\n  static identityEntitiesFrom(entities) {\n    return /** @type {MatcherEntitySet<MatcherIdentityEntity>} */ (new Set(\n      [...entities].filter(Matcher.isIdentityEntity),\n    ));\n  }\n\n  /**\n   * @param {MatcherPatternFactory} factory\n   * @param {MatcherFlags} [flags]\n   * @param {PropertyDescriptorMap} [properties]\n   */\n  static define(factory, flags, properties) {\n    /** @type {MatcherEntities} */\n    const entities = [];\n    entities.flags = '';\n    const pattern = factory(entity => {\n      if (entity !== null && entity instanceof Matcher) {\n        entities.push(...entity.entities);\n\n        !entity.flags || (entities.flags = entities.flags ? Matcher.flags(entities.flags, entity.flags) : entity.flags);\n\n        return entity.source;\n      } else {\n        entities.push(((entity != null || undefined) && entity) || undefined);\n      }\n    });\n    entities.meta = Matcher.metaEntitiesFrom(entities);\n    entities.identities = Matcher.identityEntitiesFrom(entities);\n    flags = Matcher.flags('g', flags == null ? pattern.flags : flags, entities.flags);\n    const matcher = new ((this && (this.prototype === Matcher.prototype || this.prototype instanceof RegExp) && this) ||\n      Matcher)(pattern, flags, entities);\n\n    properties && Object.defineProperties(matcher, properties);\n\n    return matcher;\n  }\n\n  static flags(...sources) {\n    let flags, iterative, sourceFlags;\n    flags = '';\n    for (const source of sources) {\n      sourceFlags =\n        (!!source &&\n          (typeof source === 'string'\n            ? source\n            : typeof source === 'object' &&\n              typeof source.flags !== 'string' &&\n              typeof source.source === 'string' &&\n              source.flags)) ||\n        undefined;\n      if (!sourceFlags) continue;\n      for (const flag of sourceFlags)\n        (flag === 'g' || flag === 'y' ? iterative || !(iterative = true) : flags.includes(flag)) || (flags += flag);\n    }\n    return flags;\n  }\n\n  static get sequence() {\n    const {raw} = String;\n    const {replace} = Symbol;\n\n    /**\n     * @param {TemplateStringsArray} template\n     * @param  {...any} spans\n     * @returns {string}\n     */\n    const sequence = (template, ...spans) =>\n      sequence.WHITESPACE[replace](raw(template, ...spans.map(sequence.span)), '');\n    // const sequence = (template, ...spans) =>\n    //   sequence.WHITESPACE[replace](sequence.COMMENTS[replace](raw(template, ...spans.map(sequence.span)), ''), '');\n\n    /**\n     * @param {any} value\n     * @returns {string}\n     */\n    sequence.span = value =>\n      (value &&\n        // TODO: Don't coerce to string here?\n        (typeof value !== 'symbol' && `${value}`)) ||\n      '';\n\n    sequence.WHITESPACE = /^\\s+|\\s*\\n\\s*|\\s+$/g;\n    // sequence.COMMENTS = /(?:^|\\n)\\s*\\/\\/.*(?=\\n)|\\n\\s*\\/\\/.*(?:\\n\\s*)*$/g;\n\n    Object.defineProperty(Matcher, 'sequence', {value: Object.freeze(sequence), enumerable: true, writable: false});\n    return sequence;\n  }\n\n  static get join() {\n    const {sequence} = this;\n\n    const join = (...values) =>\n      values\n        .map(sequence.span)\n        .filter(Boolean)\n        .join('|');\n\n    Object.defineProperty(Matcher, 'join', {value: Object.freeze(join), enumerable: true, writable: false});\n\n    return join;\n  }\n\n  static get matchAll() {\n    /** @template {RegExp} T @type {(string: MatcherText, matcher: T) => MatcherIterator<T> } */\n    // const matchAll = (string, matcher) => new MatcherState(string, matcher);\n    const matchAll = (() =>\n      Function.call.bind(\n        // String.prototype.matchAll || // TODO: Uncomment eventually\n        {\n          /**\n           * @this {string}\n           * @param {RegExp | string} pattern\n           */\n          *matchAll() {\n            const matcher =\n              arguments[0] &&\n              (arguments[0] instanceof RegExp\n                ? Object.setPrototypeOf(RegExp(arguments[0].source, arguments[0].flags || 'g'), arguments[0])\n                : RegExp(arguments[0], 'g'));\n            const string = String(this);\n\n            if (!(matcher.flags.includes('g') || matcher.flags.includes('y'))) return void (yield matcher.exec(string));\n\n            for (\n              let match, lastIndex = -1;\n              lastIndex <\n              ((match = matcher.exec(string)) ? (lastIndex = matcher.lastIndex + (match[0].length === 0)) : lastIndex);\n              yield match, matcher.lastIndex = lastIndex\n            );\n          },\n        }.matchAll,\n      ))();\n\n    Object.defineProperty(Matcher, 'matchAll', {value: Object.freeze(matchAll), enumerable: true, writable: false});\n\n    return matchAll;\n  }\n}\n\n// Well-known identities for meaningful debugging which are\n//   Strings but could possible be changed to Symbols\n//\n//   TODO: Revisit Matcher.UNKOWN\n//\n\nexport const {\n  /** Identity for delimiter captures (like newlines) */\n  DELIMITER = (Matcher.DELIMITER = 'DELIMITER?'),\n  /** Identity for unknown captures */\n  UNKNOWN = (Matcher.UNKNOWN = 'UNKNOWN?'),\n} = Matcher;\n","﻿/// <reference path=\"./types.d.ts\" />\n\nimport {countLineBreaks} from '../../tokenizer/lib/core.js';\nimport {Matcher} from './matcher.js';\nimport {TokenizerState} from './state.js';\n\nexport const {createTokenFromMatch, createMatcherInstance, createMatcherTokenizer, createMatcherMode} = (() => {\n  const {RegExp, Object, String} = globalThis;\n\n  /**\n   * @template {Matcher} T\n   * @template {{}} U\n   * @param {T} matcher\n   * @param {TokenizerState<T, U>} [state]\n   * @returns {TokenMatcher<U>}\n   */\n  const createMatcherInstance = (matcher, state) =>\n    Object.defineProperty(\n      ((state || (state = Object.create(null))).matcher =\n        (matcher && matcher instanceof RegExp && createMatcherClone(matcher)) || RegExp(matcher, 'g')),\n      'state',\n      {value: state},\n    );\n\n  /**\n   * @template {Matcher} T\n   * @template {T} U\n   * @template {{}} V\n   * @type {(matcher: T & V, instance?: U) => U & V}\n   * @param {T} param0\n   * @param {U} [param1]\n   * @returns {U}\n   */\n  const createMatcherClone = ({constructor: {prototype}, source, flags, lastIndex, ...properties}, instance) => (\n    (instance = Object.assign(instance || RegExp(source, flags || 'g'), properties)),\n    prototype && Object.setPrototypeOf(instance, prototype),\n    instance\n  );\n\n  /** @type {(value: any) => string} */\n  const createString = String;\n\n  /**\n   * @type {<M extends MatchArray, T extends {}>(init: MatchResult<M>) => Token<T>}\n   * @param {MatchResult<MatchArray>} param0\n   */\n  const createTokenFromMatch = ({0: text, identity, capture, index}) => ({\n    type: (identity && (identity.description || identity)) || 'text',\n    text,\n    lineBreaks: countLineBreaks(text),\n    lineInset: (capture && capture.inset) || '',\n    offset: index,\n    capture,\n  });\n\n  class Tokenizer {\n    /**\n     * @template {Matcher} T\n     * @template {{}} U\n     * @param {string} string\n     * @param {U} properties\n     */\n    tokenize(\n      string,\n      properties,\n      USE_ITERATOR = properties && 'USE_ITERATOR' in properties\n        ? !!properties.USE_ITERATOR\n        : properties && 'USE_GENERATOR' in properties\n        ? !properties.USE_GENERATOR\n        : !true,\n    ) {\n      return !!USE_ITERATOR ? this.TokenIterator(string, properties) : this.TokenGenerator(string, properties);\n    }\n    /**\n     * @template {Matcher} T\n     * @template {{}} U\n     * @param {string} string\n     * @param {U} properties\n     */\n    TokenIterator(string, properties) {\n      /** @type {{createToken: typeof createTokenFromMatch, initializeState: <V>(state: V) => V & TokenizerState<T, U>}} */\n      const createToken = (this && this.createToken) || createTokenFromMatch;\n      [string] = Object.keys({[string]: null});\n      const state = new TokenizerState({\n        ...TokenizerState.defaults,\n        ...((typeof properties === 'object' && properties) || undefined),\n        source: string,\n        initialize: this.initializeState && (() => void this.initializeState(state)),\n        finalize: this.finalizeState && (() => void this.finalizeState(state)),\n        createToken: match => createToken(match, state),\n      });\n\n      /** @type {TokenMatcher<U>} */\n      const matcher = createMatcherInstance(this.matcher, state);\n      matcher.exec = matcher.exec;\n      return state;\n    }\n\n    /** @template {Matcher} T @template {{}} U */\n    *TokenGenerator() {\n      /** @type {{createToken: typeof createTokenFromMatch, initializeState: <V>(state: V) => V & TokenizerState<T, U>}} */\n      const createToken = (this && this.createToken) || createTokenFromMatch;\n      /** @type {string} */\n      const string = createString(Object.keys({[arguments[0]]: 1})[0]);\n      /** @type {TokenMatcher<U>} */\n      const matcher = createMatcherInstance(this.matcher, arguments[1] || {});\n\n      /** @type {TokenizerState<T, U>} */\n      const state = matcher.state;\n      this.initializeState && this.initializeState(state);\n      matcher.exec = matcher.exec;\n\n      for (\n        let match, capturedToken, retainedToken, index = 0;\n        // BAIL on first failed/empty match\n        ((match = matcher.exec(string)) !== null && match[0] !== '') ||\n        //   BUT first yield a nextToken if present\n        (retainedToken !== undefined && (yield retainedToken), (state.nextToken = undefined));\n\n      ) {\n        if ((capturedToken = createToken(match, state)) === undefined) continue;\n\n        // HOLD back one grace token\n        //   until createToken(…) !== undefined (ie new token)\n        //   set the incremental token index for this token\n        //   and keep it referenced directly on the state\n        (state.nextToken = capturedToken).index = index++;\n\n        //   THEN yield a previously held token\n        if (retainedToken !== undefined) yield retainedToken;\n\n        //   THEN finally clear the nextToken reference\n        retainedToken = capturedToken;\n        state.nextToken = undefined;\n      }\n\n      this.finalizeState && this.finalizeState(state);\n    }\n  }\n\n  const tokenizerPropertyDescriptors = Object.getOwnPropertyDescriptors(\n    Object.freeze(Object.freeze(Tokenizer).prototype),\n  );\n\n  /** @type { {<T extends Matcher, U extends {} = {}>(sourceText: string, initialState?: Partial<TokenizerState<undefined, U>): IterableIterator<Token<U>>} } */\n  const createMatcherTokenizer = instance =>\n    Object.defineProperties(\n      instance,\n      tokenizerPropertyDescriptors,\n      // TODO: iteratorMode ? iteratorProperties : generatorProperties,\n    );\n\n  /**\n   * @param {Matcher} matcher\n   * @param {any} [options]\n   */\n  const createMatcherMode = (matcher, options) => {\n    const tokenizer = createMatcherTokenizer({\n      createToken: createTokenFromMatch,\n      /** @type {(state: {}) =>  void} */\n      initializeState: undefined,\n      finalizeState: undefined,\n      matcher: Object.freeze(createMatcherInstance(matcher)),\n    });\n\n    const mode = {syntax: 'matcher', tokenizer};\n    options &&\n      ({\n        syntax: mode.syntax = mode.syntax,\n        aliases: mode.aliases,\n        preregister: mode.preregister,\n        createToken: tokenizer.createToken = tokenizer.createToken,\n        initializeState: tokenizer.initializeState,\n        finalizeState: tokenizer.finalizeState,\n        ...mode.overrides\n      } = options);\n\n    Object.freeze(tokenizer);\n\n    return mode;\n  };\n\n  Object.freeze(createTokenFromMatch);\n  Object.freeze(createMatcherInstance);\n  Object.freeze(createMatcherTokenizer);\n  Object.freeze(createMatcherMode);\n\n  return {createTokenFromMatch, createMatcherInstance, createMatcherTokenizer, createMatcherMode};\n})();\n\nexport const TokenMatcher = (() => {\n  /**\n   * Safely updates the match to reflect the captured identity.\n   *\n   * NOTE: fault always sets match.flatten to false\n   *\n   * @template T @param {string} identity @param {T} match @returns {T}\n   */\n  const capture = (identity, match) => {\n    match.capture[(match.identity = identity)] = match[0];\n    (match.fault = identity === 'fault') && (match.flatten = false);\n    return match;\n  };\n\n  /**\n   * Safely mutates matcher state to open a new context.\n   *\n   * @param {string} text - Text of the intended { type = \"opener\" } token\n   * @param {State} state - Matcher state\n   * @returns {undefined | string} - String when context is **not** open\n   */\n  const open = (text, state) => {\n    const {\n      contexts,\n      context: parentContext,\n      context: {depth: index, goal: initialGoal},\n      groups,\n      initializeContext,\n    } = state;\n    const group = initialGoal.groups[text];\n\n    if (!group) return initialGoal.type || 'sequence';\n    groups.splice(index, groups.length, group);\n    groups.closers.splice(index, groups.closers.length, group.closer);\n\n    parentContext.contextCount++;\n\n    const goal = group.goal === undefined ? initialGoal : group.goal;\n\n    const nextContext = {\n      id: `${parentContext.id} ${\n        goal !== initialGoal ? `\\n${goal[Symbol.toStringTag]} ${group[Symbol.toStringTag]}` : group[Symbol.toStringTag]\n      }`,\n      number: ++contexts.count,\n      depth: index + 1,\n      parentContext,\n      goal,\n      group,\n      state,\n    };\n\n    typeof initializeContext === 'function' && initializeContext(nextContext);\n\n    state.nextContext = contexts[index] = nextContext;\n  };\n\n  /**\n   * Safely mutates matcher state to close the current context.\n   *\n   * @param {string} text - Text of the intended { type = \"closer\" } token\n   * @param {State} state - Matcher state\n   * @returns {undefined | string} - String when context is **not** closed\n   */\n  const close = (text, state) => {\n    const groups = state.groups;\n    const index = groups.closers.lastIndexOf(text);\n\n    if (index === -1 || index !== groups.length - 1) return 'fault';\n\n    groups.closers.splice(index, groups.closers.length);\n    groups.splice(index, groups.length);\n    state.nextContext = state.context.parentContext;\n  };\n\n  /**\n   * Safely mutates matcher state to skip ahead.\n   *\n   * TODO: Finish implementing forward helper\n   *\n   * @param {string | RegExp} search\n   * @param {Match} match\n   * @param {State} state\n   * @param {number} [delta]\n   */\n  const forward = (search, match, state, delta) => {\n    if (typeof search === 'string' && search.length) {\n      state.nextOffset = match.input.indexOf(search, match.index + match[0].length) + (0 + delta || 0);\n    } else if (search != null && typeof search === 'object') {\n      // debugger;\n      search.lastIndex = match.index + match[0].length;\n      const matched = search.exec(match.input);\n      // console.log(...matched, {matched});\n      if (!matched || matched[1] !== undefined) {\n        if (delta === false) return false;\n        state.nextOffset = search.lastIndex;\n        state.nextFault = true;\n        return 'fault';\n      } else {\n        if (delta === false) return true;\n        state.nextOffset = search.lastIndex + (0 + delta || 0);\n      }\n    } else {\n      throw new TypeError(`forward invoked with an invalid search argument`);\n    }\n  };\n\n  class TokenMatcher extends Matcher {}\n\n  /** @type {import('../experimental/common/types').Goal|symbol} */\n  TokenMatcher.prototype.goal = undefined;\n\n  Object.defineProperty(TokenMatcher, 'capture', {\n    value: capture,\n    enumerable: true,\n    writable: false,\n  });\n\n  Object.defineProperty(TokenMatcher, 'open', {value: open, enumerable: true, writable: false});\n\n  Object.defineProperty(TokenMatcher, 'close', {value: close, enumerable: true, writable: false});\n\n  Object.defineProperty(TokenMatcher, 'forward', {\n    value: forward,\n    enumerable: true,\n    writable: false,\n  });\n\n  Object.freeze(capture);\n  Object.freeze(open);\n  Object.freeze(close);\n  Object.freeze(forward);\n  Object.freeze(TokenMatcher);\n\n  return TokenMatcher;\n})();\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport {Matcher} from './matcher.js';\n\nconst RegExpClass = /^(?:\\[(?=.*(?:[^\\\\](?:\\\\\\\\)*|)\\]$)|)((?:\\\\.|[^\\\\\\n\\[\\]]*)*)\\]?$/;\n\nexport class RegExpRange extends RegExp {\n  /**\n   * @param {string|RegExp} source\n   * @param {string} [flags]\n   */\n  constructor(source, flags) {\n    /** @type {string} */\n    let range;\n\n    range = (source && typeof source === 'object' && source instanceof RegExp\n      ? (flags === undefined && (flags = source.flags), source.source)\n      : (typeof source === 'string' ? source : (source = `${source || ''}`)).trim() &&\n        (source = RegExpClass[Symbol.replace](source, '[$1]'))\n    ).slice(1, -1);\n\n    if (!range || !RegExpClass.test(range)) {\n      throw TypeError(`Invalid Regular Expression class range: ${range}`);\n    }\n\n    typeof flags === 'string' || (flags = `${flags || ''}` || '');\n\n    flags.includes('u') ||\n      //@ts-ignore\n      !(source.includes('\\\\p{') || source.includes('\\\\u')) ||\n      (flags += 'u');\n\n    //@ts-ignore\n    super(source, flags);\n\n    // this.arguments = [...arguments];\n\n    Object.defineProperty(this, 'range', {value: range, enumerable: true, writable: false});\n  }\n\n  /** @type {string} */\n  //@ts-ignore\n  get range() {\n    return `^`;\n  }\n\n  toString() {\n    return this.range;\n  }\n\n  /**\n   * @param {TemplateStringsArray} strings\n   * @param {... any[]} values\n   */\n  static define(strings, ...values) {\n    let source = String.raw(strings, ...values);\n    let flags;\n    // @ts-ignore\n    return (\n      RegExpRange.ranges[source] ||\n      Object.freeze(\n        (RegExpRange.ranges[source] = (flags = Matcher.flags(\n          ...values.map(value => (value instanceof RegExpRange ? value : undefined)),\n        ))\n          ? new (this || RegExpRange)(source, flags)\n          : new (this || RegExpRange)(source)),\n      )\n    );\n  }\n}\n\n/** @type {{[name: string]: RegExpRange}} */\nRegExpRange.ranges = {};\n\nglobalThis.RegExpRange = RegExpRange;\n","﻿// @ts-check\n\n/**\n * @typedef {Readonly<{symbol: symbol, description: string}>} Definition\n * @extends {Map<string|symbol, Definition>}\n */\nexport class SymbolMap extends Map {\n  /**\n   * @param {*} description\n   * @param {symbol} [symbol]\n   * @returns {symbol}\n   */\n  define(description, symbol) {\n    /** @type {Definition} */ let definition;\n\n    description = ((arguments.length > 0 && typeof description !== 'symbol') || undefined) && String(description);\n\n    if (description === undefined) {\n      throw new TypeError(\n        `Symbols.define invoked with a description (${\n          description != null ? typeof arguments[0] : arguments[0]\n        }) that is not non-coercible to a valid key.`,\n      );\n    }\n\n    definition = super.get(description);\n\n    if (symbol != null) {\n      if (typeof symbol !== 'symbol') {\n        throw new TypeError(\n          `Symbols.define invoked with an invalid symbol (${symbol == null ? arguments[1] : typeof arguments[1]}).`,\n        );\n      }\n\n      if (!definition) {\n        definition = super.get(symbol);\n      } else if (definition.symbol !== symbol) {\n        throw new ReferenceError('Symbols.define invoked with a description argument that is not unique.');\n      }\n\n      if (definition && definition.description !== description) {\n        throw new ReferenceError('Symbols.define invoked with a symbol argument that is not unique.');\n      }\n    }\n\n    if (!definition) {\n      definition = Object.freeze({symbol: symbol || Symbol(description), description: description});\n      super.set(definition.symbol, definition);\n      super.set(definition.description, definition);\n    }\n\n    return definition.symbol;\n  }\n\n  /** @param {symbol | string} key @returns {string} */\n  describe(key) {\n    return (super.get(key) || SymbolMap.undefined).description;\n  }\n}\n\nObject.defineProperty(SymbolMap, 'undefined', {value: Object.freeze(Object.create(null)), writable: false});\n\nObject.defineProperties(\n  Object.setPrototypeOf(\n    SymbolMap.prototype,\n    Object.create(Object.prototype, {\n      get: Object.getOwnPropertyDescriptor(Map.prototype, 'get'),\n      has: Object.getOwnPropertyDescriptor(Map.prototype, 'has'),\n      set: Object.getOwnPropertyDescriptor(Map.prototype, 'set'),\n    }),\n  ),\n  {get: {writable: false}, set: {writable: false}},\n);\n","﻿//@ts-check\nimport {countLineBreaks} from '../../../tokenizer/lib/core.js';\nimport {createMatcherMode, TokenMatcher} from '../../lib/token-matcher.js';\nimport {RegExpRange} from '../../lib/range.js';\nimport {SymbolMap} from './helpers/symbol-map.js';\n\n/// Helpers\n/** @typedef {<T extends {}>(options?: T) => MatcherPatternFactory} PatternFactory */\n\n/**\n * @template {symbol} G\n * @template {string} K\n * @param {G} goal\n * @param {(constructor: typeof TokenMatcher) => Record<G|K, PatternFactory> } factory\n */\nexport const createMatcher = (goal, factory) =>\n  TokenMatcher.define(factory(TokenMatcher)[goal](), 'gu', {goal: {value: goal, enumerable: true, writable: false}});\n\nexport const createMode = ({matcher, ...options}) => createMatcherMode(matcher, {...defaults.mode, ...options});\n\n/** @param {State} state */\n// TODO: Document initializeState\nexport const initializeState = state => {\n  /** @type {Groups} state */\n  (state.groups = []).closers = [];\n  state.lineOffset = state.lineIndex = 0;\n  state.totalCaptureCount = state.totalTokenCount = 0;\n\n  /** @type {Contexts} */\n  const contexts = (state.contexts = Array(100));\n  const context = initializeContext({\n    id: `«${state.matcher.goal.name}»`,\n    number: (contexts.count = state.totalContextCount = 1),\n    depth: 0,\n    parentContext: undefined,\n    goal: state.matcher.goal,\n    //@ts-ignore\n    group: (state.groups.root = Object.freeze({})),\n    state,\n    ...(state.USE_CONSTRUCTS === true ? {currentConstruct: new Construct()} : {}),\n  });\n  state.firstTokenContext = state.nextTokenContext = state.lastContext = state.context = contexts[-1] = context;\n  state.lastTokenContext = undefined;\n  state.initializeContext = initializeContext;\n};\n\n/** @param {State} state */\n// TODO: Document finalizeState\nexport const finalizeState = state => {\n  const isValidState =\n    state.firstTokenContext === state.nextTokenContext &&\n    state.nextToken === undefined &&\n    state.nextOffset === undefined;\n\n  const {\n    flags: {debug = false} = {},\n    options: {console: {log = console.log, warn = console.warn} = console} = {},\n    error = (state.error = !isValidState ? 'Unexpected end of tokenizer state' : undefined),\n  } = state;\n\n  // if (!debug && error) throw Error(error);\n\n  // Finalize latent token artifacts\n  state.nextTokenContext = void (state.lastTokenContext = state.nextTokenContext);\n\n  // Finalize tokenization artifacts\n  error || (state.context = state.contexts = state.groups = undefined);\n\n  // Output to console when necessary\n  debug && (error ? warn : log)(`[tokenizer]: ${error || 'done'} — %O`, state);\n};\n\n/** @param {Match} match @param {State} state @returns {Token}*/\nexport const createToken = (match, state) => {\n  let currentGoal,\n    // goalName,\n    currentGoalType,\n    contextId,\n    contextNumber,\n    contextDepth,\n    contextGroup,\n    parentContext,\n    tokenReference,\n    tokenContext,\n    nextToken,\n    text,\n    type,\n    fault,\n    punctuator,\n    offset,\n    lineInset,\n    lineBreaks,\n    isOperator,\n    isDelimiter,\n    isComment,\n    isWhitespace,\n    flatten,\n    fold,\n    columnNumber,\n    lineNumber,\n    tokenNumber,\n    captureNumber,\n    hint;\n\n  const {\n    context: currentContext,\n    nextContext,\n    lineIndex,\n    lineOffset,\n    nextOffset,\n    nextFault,\n    lastToken,\n    lastTrivia,\n    lastAtom,\n  } = state;\n\n  /* Capture */\n  ({\n    0: text,\n    capture: {inset: lineInset},\n    identity: type,\n    flatten,\n    fault,\n    punctuator,\n    index: offset,\n  } = match);\n\n  if (!text) return;\n\n  ({\n    id: contextId,\n    number: contextNumber,\n    depth: contextDepth,\n    goal: currentGoal,\n    group: contextGroup,\n    parentContext,\n  } = tokenContext = (type === 'opener' && nextContext) || currentContext);\n\n  currentGoalType = currentGoal.type;\n\n  if (nextOffset != null) {\n    state.nextOffset = undefined;\n    if (nextOffset > offset) {\n      text = match.input.slice(offset, nextOffset);\n      state.matcher.lastIndex = nextOffset;\n    }\n  } else if (nextFault != null) {\n    state.nextFault = undefined;\n    if (nextFault === true) {\n      fault = true;\n      flatten = false;\n      type = 'fault';\n      punctuator = undefined;\n      // console.log({state: {...state}, match, nextFault});\n    }\n  }\n\n  // nextOffset != null\n  //   ? ((state.nextOffset = undefined),\n  //     nextOffset > offset && ((text = match.input.slice(offset, nextOffset)), (state.matcher.lastIndex = nextOffset)))\n  //   : nextFault != null &&\n  //     ((state.nextFault = undefined),\n  //     fault || (nextFault === true && ((fault = true), (flatten = false), (type = 'fault'))));\n\n  lineBreaks = (text === '\\n' && 1) || countLineBreaks(text);\n  (isOperator = type === 'operator' || type === 'delimiter' || type === 'breaker' || type === 'combinator') ||\n    (isDelimiter = type === 'closer' || type === 'opener') ||\n    (isWhitespace = type === 'whitespace' || type === 'break' || type === 'inset');\n\n  (isComment = type === 'comment' || punctuator === 'comment')\n    ? (type = 'comment')\n    : type || (type = (!isDelimiter && !fault && currentGoalType) || 'text');\n\n  if (lineBreaks) {\n    state.lineIndex += lineBreaks;\n    state.lineOffset = offset + (text === '\\n' ? 1 : text.lastIndexOf('\\n'));\n  }\n\n  /* Flattening / Token Folding */\n\n  flatten === false ||\n    flatten === true ||\n    (flatten = fault !== true && (isDelimiter !== true || currentGoal.fold === true) && currentGoal.flatten === true);\n\n  captureNumber = ++tokenContext.captureCount;\n  state.totalCaptureCount++;\n\n  if (\n    fault !== true && // type ! 'fault' &&\n    (fold = flatten) && // fold only if flatten is allowed\n    lastToken != null &&\n    ((lastToken.contextNumber === contextNumber && lastToken.fold === true) ||\n      (type === 'closer' && flatten === true)) && // never fold across contexts\n    (lastToken.type === type ||\n      (currentGoal.fold === true && (lastToken.type === currentGoalType || lastToken.punctuator === currentGoalType)))\n  ) {\n    lastToken.captureCount++;\n    lastToken.text += text;\n    lineBreaks && (lastToken.lineBreaks += lineBreaks);\n  } else {\n    // The generator retains this new as state.nextToken\n    //   which means tokenContext is state.nextTokenContext\n    //   and the fact that we are returning a token here will\n    //   yield the current state.nextToken so we need to also\n    //   set state.lastTokenContext to match\n    //\n    //   TODO: Add parity tests for tokenizer's token/context states\n    state.lastTokenContext = state.nextTokenContext;\n    state.nextTokenContext = tokenContext;\n\n    /* Token Creation */\n    flatten = false;\n    columnNumber = 1 + (offset - lineOffset || 0);\n    lineNumber = 1 + (lineIndex || 0);\n\n    tokenNumber = ++tokenContext.tokenCount;\n    state.totalTokenCount++;\n\n    // hint = `${(isDelimiter ? type : currentGoalType && `in-${currentGoalType}`) ||\n    hint = `${\n      currentGoalType\n        ? isDelimiter && currentGoal.opener === text\n          ? `${type}`\n          : `in-${currentGoalType}`\n        : isDelimiter\n        ? type\n        : ''\n    }\\n\\n${contextId} #${tokenNumber}\\n(${lineNumber}:${columnNumber})`;\n\n    tokenReference = isWhitespace || isComment ? 'lastTrivia' : 'lastAtom';\n\n    nextToken = tokenContext[tokenReference] = state[tokenReference] = tokenContext.lastToken = state.lastToken = {\n      text,\n      type,\n      offset,\n      punctuator,\n      hint,\n      lineOffset,\n      lineBreaks,\n      lineInset,\n      columnNumber,\n      lineNumber,\n      captureNumber,\n      captureCount: 1,\n      tokenNumber,\n      contextNumber,\n      contextDepth,\n\n      isWhitespace,\n      isOperator,\n      isDelimiter,\n      isComment,\n\n      // FIXME: Nondescript\n      fault,\n      fold,\n      flatten,\n\n      goal: currentGoal,\n      group: contextGroup,\n      state,\n      context: tokenContext,\n    };\n  }\n  /* Context */\n  !nextContext ||\n    ((state.nextContext = undefined), nextContext === currentContext) ||\n    ((state.lastContext = currentContext),\n    currentContext === nextContext.parentContext\n      ? (state.totalContextCount++,\n        // tokenReference === 'lastAtom'\n        //   ? ((nextContext.firstAtom = nextToken), (nextContext.firstTrivia = undefined))\n        //   : ((nextContext.firstAtom = undefined), (nextContext.firstTrivia = nextToken)),\n        (nextContext.precedingAtom = lastAtom),\n        (nextContext.precedingTrivia = lastTrivia),\n        (nextContext.precedingToken = lastToken))\n      : ((parentContext.nestedContextCount += currentContext.nestedContextCount + currentContext.contextCount),\n        (parentContext.nestedCaptureCount += currentContext.nestedCaptureCount + currentContext.captureCount),\n        (parentContext.nestedTokenCount += currentContext.nestedTokenCount + currentContext.tokenCount)),\n    (state.context = nextContext));\n\n  return nextToken;\n};\n\nexport const initializeContext = (assign =>\n  /**\n   * @template {Partial<Context>} T\n   * @template {{}} U\n   * @param {T | Context} context\n   * @param {U} [properties]\n   * @returns {Context & T & U}\n   */\n  (context, properties) => {\n    //@ts-ignore\n    return (\n      assign(context, stats, properties),\n      context.goal &&\n        context.goal.initializeContext &&\n        //@ts-ignore\n        context.goal.initializeContext(context),\n      context\n    );\n  })(Object.assign);\n\nconst symbolMap = new SymbolMap();\n\n/** @type {SymbolMap['define']} */\nexport const defineSymbol = (description, symbol) => symbolMap.define(description, symbol);\n\n/** @type {SymbolMap['describe']} */\nexport const describeSymbol = symbol => symbolMap.describe(symbol);\n\nexport const generateDefinitions = ({groups = {}, goals = {}, identities = {}, symbols = {}, tokens = {}}) => {\n  const FaultGoal = generateDefinitions.FaultGoal;\n\n  const punctuators = Object.create(null);\n\n  for (const opener of Object.getOwnPropertyNames(groups)) {\n    const {[opener]: group} = groups;\n    'goal' in group && (group.goal = goals[group.goal] || FaultGoal);\n    'parentGoal' in group && (group.parentGoal = goals[group.parentGoal] || FaultGoal);\n    Object.freeze(group);\n  }\n\n  for (const symbol of Object.getOwnPropertySymbols(goals)) {\n    // @ts-ignore\n    const {[symbol]: goal} = goals;\n\n    goal.symbol === symbol || (goal.symbol = symbol);\n    goal.name = describeSymbol(symbol).replace(/Goal$/, '');\n    symbols[`${goal.name}Goal`] = goal.symbol;\n    goal[Symbol.toStringTag] = `«${goal.name}»`;\n    goal.tokens = tokens[symbol] = {};\n    goal.groups = [];\n\n    if (goal.punctuators) {\n      for (const punctuator of (goal.punctuators = [...goal.punctuators]))\n        punctuators[punctuator] = !(goal.punctuators[punctuator] = true);\n      Object.freeze(Object.setPrototypeOf(goal.punctuators, punctuators));\n    } else {\n      goal.punctuators = punctuators;\n    }\n\n    if (goal.closers) {\n      for (const closer of (goal.closers = [...goal.closers])) punctuators[closer] = !(goal.closers[closer] = true);\n      Object.freeze(Object.setPrototypeOf(goal.closers, punctuators));\n    } else {\n      goal.closers = generateDefinitions.Empty;\n    }\n\n    if (goal.openers) {\n      const overrides = {...goal.openers};\n      for (const opener of (goal.openers = [...goal.openers])) {\n        const group = (goal.groups[opener] = {...groups[opener], ...overrides[opener]});\n        typeof group.goal === 'symbol' && (group.goal = goals[group.goal] || FaultGoal);\n        typeof group.parentGoal === 'symbol' && (group.parentGoal = goals[group.goal] || FaultGoal);\n        punctuators[opener] = !(goal.openers[opener] = true);\n        GoalSpecificTokenRecord(goal, group.opener, 'opener', {group});\n        GoalSpecificTokenRecord(goal, group.closer, 'closer', {group});\n        group.description || (group.description = `${group.opener}…${group.closer}`);\n        group[Symbol.toStringTag] = `‹${group.opener}›`;\n      }\n      Object.freeze(Object.setPrototypeOf(goal.openers, punctuators));\n    } else {\n      goal.closers = generateDefinitions.Empty;\n    }\n\n    // if (goal.punctuation)\n    Object.freeze(Object.setPrototypeOf((goal.punctuation = {...goal.punctuation}), null));\n\n    Object.freeze(goal.groups);\n    Object.freeze(goal.tokens);\n    Object.freeze(goal);\n  }\n\n  Object.freeze(punctuators);\n  Object.freeze(goals);\n  Object.freeze(groups);\n  Object.freeze(identities);\n  Object.freeze(symbols);\n\n  return Object.freeze({groups, goals, identities, symbols, tokens});\n\n  // if (keywords) {\n  //   for (const [identity, list] of entries({})) {\n  //     for (const keyword of list.split(/\\s+/)) {\n  //       keywords[keyword] = identity;\n  //     }\n  //   }\n\n  //   keywords[Symbol.iterator] = Array.prototype[Symbol.iterator].bind(Object.getOwnPropertyNames(keywords));\n  //   freeze(keywords);\n  // }\n\n  /**\n   * Creates a symbolically mapped goal-specific token record\n   *\n   * @template {{}} T\n   * @param {Goal} goal\n   * @param {string} text\n   * @param {type} type\n   * @param {T} properties\n   */\n  function GoalSpecificTokenRecord(goal, text, type, properties) {\n    const symbol = defineSymbol(`‹${goal.name} ${text}›`);\n    return (goal.tokens[text] = goal.tokens[symbol] = tokens[symbol] = {symbol, text, type, goal, ...properties});\n  }\n};\n\n// generateDefinitions.Empty = Object.freeze(new class Empty extends Array{});\ngenerateDefinitions.Empty = Object.freeze({[Symbol.iterator]: (iterator => iterator).bind([][Symbol.iterator])});\n\nexport const FaultGoal = (generateDefinitions.FaultGoal = {symbol: defineSymbol('FaultGoal'), type: 'fault'});\ngenerateDefinitions({goals: {[FaultGoal.symbol]: FaultGoal}});\n\n/**\n * @template {string} K\n * @template {string} I\n * @param {{[i in I]: K[]}} mappings\n */\nexport const Keywords = mappings => {\n  /** @type {{[i in I]: ReadonlyArray<K>}} */\n  //@ts-ignore\n  const identities = {};\n\n  /** @type {{[k in K]: I}} */\n  //@ts-ignore\n  const keywords = {...Keywords.prototype};\n\n  for (const identity in mappings) {\n    identities[identity] = Object.freeze([...mappings[identity]]);\n    for (const keyword of mappings[identity]) {\n      keywords[keyword] = identity;\n    }\n  }\n\n  Object.setPrototypeOf(keywords, identities);\n  Object.freeze(identities);\n  Object.freeze(keywords);\n\n  return keywords;\n};\n\nKeywords.prototype = {\n  [Symbol.iterator]() {\n    return Object.getOwnPropertyNames(this)[Symbol.iterator]();\n  },\n};\n\nexport const Construct = class Construct extends Array {\n  constructor() {\n    super(...arguments);\n    this.text = arguments.length ? this.join(' ') : '';\n    this.last = arguments.length ? this[this.length - 1] : '';\n  }\n\n  add(text) {\n    this.length === 0 ? (this.text = text) : (this.text += ` ${text}`);\n    super.push((this.last = text));\n  }\n  set(text) {\n    this.previousText = this.text;\n    text === '' || text == null\n      ? ((this.last = this.text = ''), this.length === 0 || super.splice(0, this.length))\n      : this.length === 0\n      ? super.push((this.last = this.text = text))\n      : super.splice(0, this.length, (this.last = this.text = text));\n  }\n  clone() {\n    const clone = new Construct(...this);\n    clone.text = this.text;\n    clone.last = this.last;\n    return clone;\n  }\n};\n\n/**\n * @template {string} K\n * @template {{[k in K]: (range: typeof RegExpRange.define, ranges: Record<K, RegExpRange>) => RegExpRange}} T\n * @param {T} factories\n */\nexport const Ranges = factories => {\n  /** @type {PropertyDescriptorMap} */\n  const descriptors = {\n    ranges: {\n      get() {\n        return ranges;\n      },\n      enumerable: true,\n      configurable: false,\n    },\n  };\n\n  // TODO: Revisit once unicode classes are stable\n  const safeRange = (strings, ...values) => {\n    try {\n      return RegExpRange.define(strings, ...values);\n    } catch (exception) {}\n  };\n\n  for (const property in factories) {\n    descriptors[property] = {\n      get() {\n        const value = factories[property](safeRange, ranges);\n        if (value === undefined) throw new RangeError(`Failed to define: ${factories[property]}`);\n        Object.defineProperty(ranges, property, {value, enumerable: true, configurable: false});\n        return value;\n      },\n      enumerable: true,\n      configurable: true,\n    };\n  }\n\n  /** @type {{ranges: typeof ranges} & Record<K, RegExpRange>} */\n  const ranges = Object.create(null, descriptors);\n\n  return ranges;\n};\n\n/// Internal\n\nconst defaults = {\n  mode: {initializeState, finalizeState, createToken},\n};\n\n/** @typedef {typeof stats} ContextStats */\nconst stats = {\n  captureCount: 0,\n  contextCount: 0,\n  tokenCount: 0,\n  nestedCaptureCount: 0,\n  nestedContextCount: 0,\n  nestedTokenCount: 0,\n};\n\n/// Ambient\n\n/** @typedef {import('./types').Match} Match */\n/** @typedef {import('./types').Groups} Groups */\n/** @typedef {import('./types').Group} Group */\n/** @typedef {import('./types').Goal} Goal */\n/** @typedef {import('./types').Context} Context */\n/** @typedef {import('./types').Contexts} Contexts */\n/** @typedef {import('./types').State} State */\n/** @typedef {import('./types').Token} Token */\n/** @typedef {Goal['type']} type */\n/** @typedef {{symbol: symbol, text: string, type: type, goal?: Goal, group?: Group}} token */\n","﻿import {Ranges} from '../../packages/matcher/experimental/common/helpers.js';\n\nexport const ECMAScriptRanges = Ranges({\n  NullCharacter: range => range`\\0`,\n  BinaryDigit: range => range`01`,\n  DecimalDigit: range => range`0-9`,\n  ControlLetter: range => range`A-Za-z`,\n  HexLetter: range => range`A-Fa-f`,\n  HexDigit: (range, {DecimalDigit, HexLetter}) => range`${DecimalDigit}${HexLetter}`,\n  GraveAccent: range => range`${'`'}`,\n  ZeroWidthNonJoiner: range => range`\\u200c`,\n  ZeroWidthJoiner: range => range`\\u200d`,\n  ZeroWidthNoBreakSpace: range => range`\\ufeff`,\n  CombiningGraphemeJoiner: range => range`\\u034f`,\n  Whitespace: (range, {ZeroWidthNoBreakSpace}) => range`\\s${ZeroWidthNoBreakSpace}`,\n  IdentifierStart: (range, {UnicodeIDStart}) => range`_$${UnicodeIDStart}`,\n  IdentifierPart: (range, {UnicodeIDContinue, ZeroWidthNonJoiner, ZeroWidthJoiner, CombiningGraphemeJoiner}) =>\n    range`$${UnicodeIDContinue}${ZeroWidthNonJoiner}${ZeroWidthJoiner}${CombiningGraphemeJoiner}`,\n  UnicodeIDStart: range =>\n    range`\\p{ID_Start}` ||\n    range`A-Za-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376-\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e-\\u066f\\u0671-\\u06d3\\u06d5\\u06e5-\\u06e6\\u06ee-\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4-\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f-\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc-\\u09dd\\u09df-\\u09e1\\u09f0-\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f-\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32-\\u0a33\\u0a35-\\u0a36\\u0a38-\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2-\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0-\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f-\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32-\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c-\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99-\\u0b9a\\u0b9c\\u0b9e-\\u0b9f\\u0ba3-\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60-\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0-\\u0ce1\\u0cf1-\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32-\\u0e33\\u0e40-\\u0e46\\u0e81-\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2-\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065-\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae-\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5-\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a-\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7c6\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd-\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5-\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab67\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc`,\n  UnicodeIDContinue: range =>\n    range`\\p{ID_Continue}` ||\n    range`0-9A-Z_a-z\\xaa\\xb5\\xb7\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0300-\\u0374\\u0376-\\u0377\\u037a-\\u037d\\u037f\\u0386-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u0483-\\u0487\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u0591-\\u05bd\\u05bf\\u05c1-\\u05c2\\u05c4-\\u05c5\\u05c7\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0610-\\u061a\\u0620-\\u0669\\u066e-\\u06d3\\u06d5-\\u06dc\\u06df-\\u06e8\\u06ea-\\u06fc\\u06ff\\u0710-\\u074a\\u074d-\\u07b1\\u07c0-\\u07f5\\u07fa\\u07fd\\u0800-\\u082d\\u0840-\\u085b\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u08d3-\\u08e1\\u08e3-\\u0963\\u0966-\\u096f\\u0971-\\u0983\\u0985-\\u098c\\u098f-\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bc-\\u09c4\\u09c7-\\u09c8\\u09cb-\\u09ce\\u09d7\\u09dc-\\u09dd\\u09df-\\u09e3\\u09e6-\\u09f1\\u09fc\\u09fe\\u0a01-\\u0a03\\u0a05-\\u0a0a\\u0a0f-\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32-\\u0a33\\u0a35-\\u0a36\\u0a38-\\u0a39\\u0a3c\\u0a3e-\\u0a42\\u0a47-\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a59-\\u0a5c\\u0a5e\\u0a66-\\u0a75\\u0a81-\\u0a83\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2-\\u0ab3\\u0ab5-\\u0ab9\\u0abc-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ad0\\u0ae0-\\u0ae3\\u0ae6-\\u0aef\\u0af9-\\u0aff\\u0b01-\\u0b03\\u0b05-\\u0b0c\\u0b0f-\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32-\\u0b33\\u0b35-\\u0b39\\u0b3c-\\u0b44\\u0b47-\\u0b48\\u0b4b-\\u0b4d\\u0b56-\\u0b57\\u0b5c-\\u0b5d\\u0b5f-\\u0b63\\u0b66-\\u0b6f\\u0b71\\u0b82-\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99-\\u0b9a\\u0b9c\\u0b9e-\\u0b9f\\u0ba3-\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd0\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55-\\u0c56\\u0c58-\\u0c5a\\u0c60-\\u0c63\\u0c66-\\u0c6f\\u0c80-\\u0c83\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbc-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5-\\u0cd6\\u0cde\\u0ce0-\\u0ce3\\u0ce6-\\u0cef\\u0cf1-\\u0cf2\\u0d00-\\u0d03\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4e\\u0d54-\\u0d57\\u0d5f-\\u0d63\\u0d66-\\u0d6f\\u0d7a-\\u0d7f\\u0d82-\\u0d83\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2-\\u0df3\\u0e01-\\u0e3a\\u0e40-\\u0e4e\\u0e50-\\u0e59\\u0e81-\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0edc-\\u0edf\\u0f00\\u0f18-\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e-\\u0f47\\u0f49-\\u0f6c\\u0f71-\\u0f84\\u0f86-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1049\\u1050-\\u109d\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u135d-\\u135f\\u1369-\\u1371\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176c\\u176e-\\u1770\\u1772-\\u1773\\u1780-\\u17d3\\u17d7\\u17dc-\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u19d0-\\u19da\\u1a00-\\u1a1b\\u1a20-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1aa7\\u1ab0-\\u1abd\\u1b00-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1bf3\\u1c00-\\u1c37\\u1c40-\\u1c49\\u1c4d-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1cd0-\\u1cd2\\u1cd4-\\u1cfa\\u1d00-\\u1df9\\u1dfb-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u203f-\\u2040\\u2054\\u2071\\u207f\\u2090-\\u209c\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d7f-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2de0-\\u2dff\\u3005-\\u3007\\u3021-\\u302f\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u3099-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua62b\\ua640-\\ua66f\\ua674-\\ua67d\\ua67f-\\ua6f1\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7c6\\ua7f7-\\ua827\\ua840-\\ua873\\ua880-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f7\\ua8fb\\ua8fd-\\ua92d\\ua930-\\ua953\\ua960-\\ua97c\\ua980-\\ua9c0\\ua9cf-\\ua9d9\\ua9e0-\\ua9fe\\uaa00-\\uaa36\\uaa40-\\uaa4d\\uaa50-\\uaa59\\uaa60-\\uaa76\\uaa7a-\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaef\\uaaf2-\\uaaf6\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab67\\uab70-\\uabea\\uabec-\\uabed\\uabf0-\\uabf9\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33-\\ufe34\\ufe4d-\\ufe4f\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff10-\\uff19\\uff21-\\uff3a\\uff3f\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc`,\n});\n","﻿//@ts-check\nimport {\n  generateDefinitions,\n  defineSymbol,\n  Keywords,\n  Construct,\n} from '../../packages/matcher/experimental/common/helpers.js';\n\nexport const {\n  ECMAScriptGoal,\n  ECMAScriptCommentGoal,\n  ECMAScriptRegExpGoal,\n  ECMAScriptRegExpClassGoal,\n  ECMAScriptStringGoal,\n  ECMAScriptTemplateLiteralGoal,\n  ECMAScriptDefinitions,\n} = (() => {\n  // Avoids TypeScript \"always …\" style errors\n  const DEBUG_CONSTRUCTS = Boolean(false);\n\n  const identities = {\n    UnicodeIDStart: 'ECMAScript.UnicodeIDStart',\n    UnicodeIDContinue: 'ECMAScript.UnicodeIDContinue',\n    HexDigits: 'ECMAScript.HexDigits',\n    CodePoint: 'ECMAScript.CodePoint',\n    ControlEscape: 'ECMAScript.ControlEscape',\n    ContextualWord: 'ECMAScript.ContextualWord',\n    RestrictedWord: 'ECMAScript.RestrictedWord',\n    FutureReservedWord: 'ECMAScript.FutureReservedWord',\n    Keyword: 'ECMAScript.Keyword',\n  };\n\n  const goals = {};\n  const symbols = {};\n\n  const ECMAScriptGoal = (goals[(symbols.ECMAScriptGoalSymbol = defineSymbol('ECMAScriptGoal'))] = {\n    type: undefined,\n    flatten: undefined,\n    fold: undefined,\n    openers: ['{', '(', '[', \"'\", '\"', '`', '/', '/*', '//'],\n    // TODO: Properly fault on invalid closer\n    closers: ['}', ')', ']'],\n    /** @type {ECMAScript.Keywords} */\n    // @ts-ignore\n    keywords: Keywords({\n      // TODO: Let's make those constructs (this.new.target borks)\n      // [identities.MetaProperty]: 'new.target import.meta',\n      [identities.Keyword]: [\n        ...['await', 'break', 'case', 'catch', 'class', 'const', 'continue'],\n        ...['debugger', 'default', 'delete', 'do', 'else', 'export', 'extends'],\n        ...['finally', 'for', 'function', 'if', 'import', 'in', 'instanceof'],\n        ...['let', 'new', 'return', 'super', 'switch', 'this', 'throw', 'try'],\n        ...['typeof', 'var', 'void', 'while', 'with', 'yield'],\n      ],\n      [identities.RestrictedWord]: ['interface', 'implements', 'package', 'private', 'protected', 'public'],\n      [identities.FutureReservedWord]: ['enum'],\n      // NOTE: This is purposely not aligned with the spec\n      [identities.ContextualWord]: ['arguments', 'async', 'as', 'from', 'of', 'static', 'get', 'set'],\n    }),\n\n    punctuation: {\n      '=>': 'combinator',\n      '?': 'delimiter',\n      ':': 'delimiter',\n      ',': 'delimiter',\n      ';': 'breaker',\n    },\n  });\n\n  const ECMAScriptCommentGoal = (goals[\n    (symbols.ECMAScriptCommentGoalSymbol = defineSymbol('ECMAScriptCommentGoal'))\n  ] = {\n    type: 'comment',\n    flatten: true,\n    fold: true,\n    spans: {\n      // This faults when match[1] === ''\n      '//': /.*?(?=\\n|($))/g,\n      // This faults when match[1] === ''\n      '/*': /[^]*?(?=\\*\\/|($))/g,\n    },\n  });\n\n  const ECMAScriptRegExpGoal = (goals[(symbols.ECMAScriptRegExpGoalSymbol = defineSymbol('ECMAScriptRegExpGoal'))] = {\n    type: 'pattern',\n    flatten: undefined,\n    fold: undefined,\n    openers: ['(', '{', '['],\n    closers: [],\n    opener: '/',\n    closer: '/',\n    punctuators: ['+', '*', '?', '|', '^', '.', '?=', '?:', '?!'],\n    punctuation: {\n      '[': 'combinator',\n      ']': 'combinator',\n      '(': 'combinator',\n      ')': 'combinator',\n      '{': 'combinator',\n      '}': 'combinator',\n    },\n    spans: {\n      // This faults when match[1] === ''\n      '{': /\\s*(?:\\d+\\s*,\\s*\\d+|\\d+\\s*,|\\d+|,\\s*\\d+)\\s*}|()/g,\n    },\n  });\n\n  const ECMAScriptRegExpClassGoal = (goals[\n    (symbols.ECMAScriptRegExpClassGoal = defineSymbol('ECMAScriptRegExpClassGoal'))\n  ] = {\n    type: 'pattern',\n    flatten: undefined,\n    fold: undefined,\n    openers: [],\n    closers: [']'],\n    opener: '[',\n    closer: ']',\n    punctuators: ['\\\\', '^', '-'],\n    punctuation: {\n      '[': 'pattern',\n      ']': 'combinator',\n      '(': 'pattern',\n      ')': 'pattern',\n      '{': 'pattern',\n      '}': 'pattern',\n    },\n  });\n\n  ECMAScriptRegExpGoal.openers['['] = {\n    goal: symbols.ECMAScriptRegExpClassGoal,\n    parentGoal: symbols.ECMAScriptRegExpGoalSymbol,\n  };\n\n  const ECMAScriptStringGoal = (goals[(symbols.ECMAScriptStringGoalSymbol = defineSymbol('ECMAScriptStringGoal'))] = {\n    type: 'quote',\n    flatten: true,\n    fold: true,\n    spans: {\n      // This faults when match[1] === '\\n' or ''\n      \"'\": /(?:[^'\\\\\\n]+?(?=\\\\[^]|')|\\\\[^])*?(?='|($|\\n))/g,\n      // This faults when match[1] === '\\n' or ''\n      '\"': /(?:[^\"\\\\\\n]+?(?=\\\\[^]|\")|\\\\[^])*?(?=\"|($|\\n))/g,\n    },\n  });\n\n  const ECMAScriptTemplateLiteralGoal = (goals[\n    (symbols.ECMAScriptTemplateLiteralGoalSymbol = defineSymbol('ECMAScriptTemplateLiteralGoal'))\n  ] = {\n    type: 'quote',\n    flatten: true,\n    fold: false,\n    openers: ['${'],\n    opener: '`',\n    closer: '`',\n    punctuation: {\n      '${': 'opener',\n    },\n    spans: {\n      // '`': /(?:[^\\\\`$]+?(?=\\\\.|`|\\${)|\\\\.)*?(?:`|\\$(?={|($)))/g,\n      // This faults when match[1] === ''\n      '`': /(?:[^\\\\`$]+?(?=\\\\.|`|\\$\\{)|\\\\.)*?(?=`|\\$\\{|($))/g,\n    },\n  });\n\n  {\n    const operativeKeywords = new Set('await delete typeof void yield'.split(' '));\n    const declarativeKeywords = new Set('export import default async function class const let var'.split(' '));\n    const constructiveKeywords = new Set(\n      'await async function class await delete typeof void yield this new'.split(' '),\n    );\n\n    /**\n     * Determines if the capture is a valid keyword, identifier or undefined\n     * based on matcher state (ie lastAtom, context, intent) and subset\n     * of ECMAScript keyword rules of significant.\n     *\n     * TODO: Refactor or extensively test captureKeyword\n     * TODO: Document subset of ECMAScript keyword rules of significant\n     *\n     * @param {string} text - Matched by /\\b(‹text›)\\b(?=[^\\s$_:]|\\s+[^:]|$)\n     * @param {State} state\n     * @param {string} [intent]\n     */\n    const captureKeyword = (text, {lastAtom: pre, lineIndex, context}, intent) => {\n      //                              (a) WILL BE ‹fault› UNLESS  …\n      switch (intent || (intent = context.intent)) {\n        //  DESTRUCTURING INTENT  (ie Variable/Class/Function declarations)\n        case 'destructuring':\n        //  DECLARATION INTENT  (ie Variable/Class/Function declarations)\n        case 'declaration':\n          return (\n            //                        (b)   WILL BE ‹idenfitier›\n            //                              AFTER ‹.›  (as ‹operator›)\n            (pre !== undefined && pre.text === '.' && 'identifier') ||\n            //                        (c)   WILL BE ‹keyword›\n            //                              IF DECLARATIVE AND …\n            (declarativeKeywords.has(text) &&\n              //                      (c1)  NOT AFTER ‹keyword› …\n              (pre === undefined ||\n                pre.type !== 'keyword' ||\n                //                          UNLESS IS DIFFERENT\n                (pre.text !== text &&\n                  //                        AND NOT ‹export› NOR ‹import›\n                  !(text === 'export' || text === 'import') &&\n                  //                  (c2)  FOLLOWS ‹export› OR ‹default›\n                  (pre.text === 'export' ||\n                    pre.text === 'default' ||\n                    //                (c3)  IS ‹function› AFTER ‹async›\n                    (pre.text === 'async' && text === 'function')))) &&\n              'keyword')\n          );\n        default:\n          return (\n            //                        (b)   WILL BE ‹idenfitier› …\n            (((pre !== undefined &&\n              //                      (b1)  AFTER ‹.›  (as ‹operator›)\n              pre.text === '.') ||\n              //                      (b2)  OR ‹await› (not as ‹keyword›)\n              (text === 'await' && context.awaits === false) ||\n              //                      (b3)  OR ‹yield› (not as ‹keyword›)\n              (text === 'yield' && context.yields === false)) &&\n              'identifier') ||\n            //                        (c)   WILL BE ‹keyword› …\n            ((pre === undefined ||\n              //                      (c1)  NOT AFTER ‹keyword›\n              pre.type !== 'keyword' ||\n              //                      (c2)  UNLESS OPERATIVE\n              operativeKeywords.has(pre.text) ||\n              //                      (c3)  OR ‹if› AFTER ‹else›\n              (text === 'if' && pre.text === 'else') ||\n              //                      (c4)  OR ‹default› AFTER ‹export›\n              (text === 'default' && pre.text === 'export') ||\n              //                      (c5)  NOT AFTER ‹async›\n              //                            EXCEPT ‹function›\n              ((pre.text !== 'async' || text === 'function') &&\n                //                    (c6)  AND NOT AFTER ‹class›\n                //                          EXCEPT ‹extends›\n                (pre.text !== 'class' || text === 'extends') &&\n                //                    (c7)  AND NOT AFTER ‹for›\n                //                          EXCEPT ‹await› (as ‹keyword›)\n                (pre.text !== 'for' || text === 'await') &&\n                //                    (c6)  NOT AFTER ‹return›\n                //                          AND IS DIFFERENT\n                //                          AND IS NOT ‹return›\n                (pre.text !== 'return'\n                  ? pre.text !== text\n                  : text !== 'return'\n                  ? //                (c7)  OR AFTER ‹return›\n                    //                      AND IS CONSTRUCTIVE\n                    constructiveKeywords.has(text)\n                  : //                (c8)  OR AFTER ‹return›\n                    //                      AND IS ‹return›\n                    //                      WHEN ON NEXT LINE\n                    pre.lineNumber < 1 + lineIndex))) &&\n              'keyword')\n          );\n      }\n    };\n\n    const EmptyConstruct = Object.freeze(new Construct());\n    const initializeContext = context => {\n      if (context.state['USE_CONSTRUCTS'] !== true) return;\n      context.parentContext == null || context.parentContext.currentConstruct == null\n        ? (context.currentConstruct == null && (context.currentConstruct = EmptyConstruct),\n          (context.parentConstruct = context.openingConstruct = EmptyConstruct))\n        : (context.currentConstruct == null && (context.currentConstruct = new Construct()),\n          (context.parentConstruct = context.parentContext.currentConstruct),\n          context.parentContext.goal === ECMAScriptGoal && context.parentConstruct.add(context.group.description),\n          (context.openingConstruct = context.parentConstruct.clone()),\n          DEBUG_CONSTRUCTS === true && console.log(context));\n    };\n\n    goals[symbols.ECMAScriptRegExpGoalSymbol].initializeContext = goals[\n      symbols.ECMAScriptStringGoalSymbol\n    ].initializeContext = goals[symbols.ECMAScriptTemplateLiteralGoalSymbol].initializeContext = initializeContext;\n\n    /** @param {Context} context */\n    goals[symbols.ECMAScriptGoalSymbol].initializeContext = context => {\n      context.captureKeyword = captureKeyword;\n      context.state['USE_CONSTRUCTS'] === true && initializeContext(context);\n    };\n  }\n\n  return {\n    ECMAScriptGoal,\n    ECMAScriptCommentGoal,\n    ECMAScriptRegExpGoal,\n    ECMAScriptRegExpClassGoal,\n    ECMAScriptStringGoal,\n    ECMAScriptTemplateLiteralGoal,\n    ECMAScriptDefinitions: generateDefinitions({\n      symbols,\n      identities,\n      goals,\n      groups: {\n        ['{']: {opener: '{', closer: '}'},\n        ['(']: {opener: '(', closer: ')'},\n        ['[']: {opener: '[', closer: ']'},\n        ['//']: {\n          opener: '//',\n          closer: '\\n',\n          goal: symbols.ECMAScriptCommentGoalSymbol,\n          parentGoal: symbols.ECMAScriptGoalSymbol,\n          description: '‹comment›',\n        },\n        ['/*']: {\n          opener: '/*',\n          closer: '*/',\n          goal: symbols.ECMAScriptCommentGoalSymbol,\n          parentGoal: symbols.ECMAScriptGoalSymbol,\n          description: '‹comment›',\n        },\n        ['/']: {\n          opener: '/',\n          closer: '/',\n          goal: symbols.ECMAScriptRegExpGoalSymbol,\n          parentGoal: symbols.ECMAScriptGoalSymbol,\n          description: '‹pattern›',\n        },\n        [\"'\"]: {\n          opener: \"'\",\n          closer: \"'\",\n          goal: symbols.ECMAScriptStringGoalSymbol,\n          parentGoal: symbols.ECMAScriptGoalSymbol,\n          lookAhead: /(?:[^'\\\\\\n]+?(?=\\\\.|')|\\\\.)*?(?:'|$)/g,\n          description: '‹string›',\n        },\n        ['\"']: {\n          opener: '\"',\n          closer: '\"',\n          goal: symbols.ECMAScriptStringGoalSymbol,\n          parentGoal: symbols.ECMAScriptGoalSymbol,\n          description: '‹string›',\n        },\n        ['`']: {\n          opener: '`',\n          closer: '`',\n          goal: symbols.ECMAScriptTemplateLiteralGoalSymbol,\n          parentGoal: symbols.ECMAScriptGoalSymbol,\n          description: '‹template›',\n        },\n        ['${']: {\n          opener: '${',\n          closer: '}',\n          goal: symbols.ECMAScriptGoalSymbol,\n          parentGoal: symbols.ECMAScriptTemplateLiteralGoalSymbol,\n          description: '‹span›',\n        },\n      },\n    }),\n  };\n})();\n\n/** @typedef {import('./types').State} State */\n/** @typedef {import('./types').Context} Context */\n\n/**\n * @typedef {'await'|'break'|'case'|'catch'|'class'|'const'|'continue'|'debugger'|'default'|'delete'|'do'|'else'|'export'|'extends'|'finally'|'for'|'function'|'if'|'import'|'in'|'instanceof'|'new'|'return'|'super'|'switch'|'this'|'throw'|'try'|'typeof'|'var'|'void'|'while'|'with'|'yield'} ECMAScript.Keyword\n * @typedef {'interface'|'implements'|'package'|'private'|'protected'|'public'} ECMAScript.RestrictedWord\n * @typedef {'enum'} ECMAScript.FutureReservedWord\n * @typedef {'arguments'|'async'|'as'|'from'|'of'|'static'} ECMAScript.ContextualKeyword\n * @typedef {Record<ECMAScript.Keyword|ECMAScript.RestrictedWord|ECMAScript.FutureReservedWord|ECMAScript.ContextualKeyword, symbol>} ECMAScript.Keywords\n */\n","﻿import {ECMAScriptRanges} from './es-ranges.js';\nimport {\n  // TODO: Always import expected goals even if not directly referenced\n  ECMAScriptGoal,\n  ECMAScriptCommentGoal,\n  ECMAScriptRegExpGoal,\n  ECMAScriptRegExpClassGoal,\n  ECMAScriptStringGoal,\n  ECMAScriptTemplateLiteralGoal,\n} from './es-definitions.js';\nimport {TokenMatcher} from '../../packages/matcher/lib/token-matcher.js';\n\nDUMMY: async () => {\n  /* prettier-ignore */ // Make sure this block never lints\n  {\n    Identifiers: {\n      $\\u0032; \\u0024\\u0032; this.new.target;\n    }\n\n    Solidus: {\n                        // [x] ExpressionStart never divide\n      ( ([              /([(regexp)])/g / [] ] ) );\n      ( [] /( [         /([(regexp)])/g / [] ] ) );\n      ( ([]) /( [       /([(regexp)])/g / [] ] ) );\n      ( [] /* */ /( [   /([(regexp)])/g / [] ] ) );\n      ( []/( [/*/*//*/*//([(regexp)])/g / [] ] ) );\n\n                        // [x] Literals always divide (never ASI)\n      ( []              /([(divisor)])/g / [] );\n      ( ([])            /([(divisor)])/g / [] );\n      ( []/*/*//**//*/*//([(divisor)])/g / [] );\n\n      a = b             // [x] Identifiers always divide (never ASI)\n                        /(divisor)/g.exec(c).map(d);\n\n                        // [x] Declaration (ASI) then ExpressionStart\n      function ƒ () {}  /(regexp)/g.exec(c).map(d);\n\n\n      async () => {}    // [x] Curly+LineBreak is ASI\n                        /(regexp)/g.exec(c).map(d);\n      async () => {}    /* [x] and with Multiline Comment */\n                        /(regexp)/g.exec(c).map(d);\n\n      async () => ({})  // [x] Parenthsized Expression (no ASI)\n                        /(divisor)/g.exec(c).map(d);\n\n      async ()          // [x] Function calls always in Expression\n                        /(divisor)/g.exec(c).map(d);\n      async ()          /(divisor)/g.exec(c).map(d);\n\n      async () =>       // [x] Arrow Function Body is Expression\n                        /(regexp)/g.exec(c).map(d);\n\n                        // [ ] ObjectLiteral is \"a literal\"\n      const x = {}      /(divisor)/g.exec(c).map(d);\n\n                        // [ ] Function/ClassExpression is \"an expression\"\n      const y = function ƒ () {}\n                        /(divisor)/g.exec(c).map(d);\n\n                        // Keyword always regexp (regardless of ASI)\n      return await/*/\\*//(regexp)/g.exec(c).map(d);\n\n      (function () {\n                        // Recursively operative Keywords\n                        void    void\n                        typeof  typeof\n                        delete  this\n\n        (async function () {\n                        // Recursively operative Keywords\n                        await   await\n                        ('')\n        });\n\n        (function* () {\n                        // Recursively operative Keywords\n                        yield   yield\n                        ('')\n        });\n\n                        return  new     class {}\n                        return\n                        return\n                        return  async   function () {}\n\n                        // [ ] Non-Keywords\n                        async\n                        async   ('')\n      });\n\n      // Matt Austin's\n      Function(\"arg=`\", \"/*body`){});({x: this/**/\");\n      (function(arg=`/*``*/){/*body`){});({x: this/**/})\n    }\n\n    Strings: {\n      '@@'            // [x] Not a ‹fault›\n\n      '\\\n      a\\a'            // [x] ‹quote›•‹comment›\n\n      \"\\\n      \\\\n\\\\b\"/**/     // [x] ‹quote›•‹comment›•‹comment›\n    }\n\n    Numerals: {\n      0, -0, 1, -1, +1.1, 0.1, 0.1e3\n      0b01, 0x0123456789abcdef\n      NaN, Infinity, -Infinity\n      // 1_1 // [ ] Proposal Numeric Separators\n    }\n\n    RegExp: {\n      /[^[\\]]/g;\n      /{(.)}{{1,}|{}}/g;\n      /(?:[^'\\\\\\n]+?(?=\\\\.|')|\\\\.)*?(?:'|$)/g;\n      /(?:[^\\\\`$]+?(?=\\\\.|`|\\${)|\\\\.)*?(?:`|$|\\$(?={))/g;\n    }\n  }\n};\n\n/** @type {TokenMatcher} */\nexport const matcher = (ECMAScript =>\n  TokenMatcher.define(\n    // Matcher generator for this matcher instance\n    entity =>\n      TokenMatcher.join(\n        entity(ECMAScript.Break()),\n        entity(ECMAScript.Whitespace()),\n        entity(ECMAScript.Escape()),\n        entity(ECMAScript.Comment()),\n        entity(ECMAScript.StringLiteral()),\n        entity(ECMAScript.Opener()),\n        entity(ECMAScript.Closer()),\n        entity(ECMAScript.Solidus()),\n        entity(ECMAScript.Operator()),\n        entity(ECMAScript.Keyword()),\n        entity(ECMAScript.Number()),\n        entity(ECMAScript.Identifier()),\n\n        // Defines how to address non-entity character(s):\n        entity(\n          ECMAScript.Fallthrough({\n            type: 'fault',\n            flatten: true,\n          }),\n        ),\n      ),\n    // RegExp flags for this matcher instance\n    'gu',\n    // Property descriptors for this matcher instance\n    {\n      goal: {value: ECMAScriptGoal, enumerable: true, writable: false},\n    },\n  ))({\n  Fallthrough: ({fallthrough = '.', type, flatten} = {}) =>\n    TokenMatcher.define(\n      (typeof fallthrough === 'string' || (fallthrough = '.'), type && typeof type === 'string')\n        ? entity => TokenMatcher.sequence/* regexp */ `(\n            ${fallthrough}\n            ${entity((text, entity, match, state) => {\n              TokenMatcher.capture(\n                type !== 'fault'\n                  ? type || state.context.goal.type || 'sequence'\n                  : state.context.goal !== ECMAScriptGoal\n                  ? state.context.goal.type || 'sequence'\n                  : 'fault',\n                match,\n              );\n              typeof flatten === 'boolean' && (match.flatten = flatten);\n            })}\n          )`\n        : entity => `${fallthrough}`,\n    ),\n  Break: ({lf = true, crlf = false} = {}) =>\n    TokenMatcher.define(\n      entity => TokenMatcher.sequence/* regexp */ `(\n        ${TokenMatcher.join(lf && '\\\\n', crlf && '\\\\r\\\\n')}\n        ${entity((text, entity, match, state) => {\n          match.format = 'whitespace';\n          TokenMatcher.capture(\n            (state.context.group != null && state.context.group.closer === '\\n' && TokenMatcher.close(text, state)) ||\n              // NOTE: ‹break› takes precedence over ‹closer›\n              'break',\n            match,\n          );\n          match.flatten = false;\n        })}\n      )`,\n    ),\n  Whitespace: () =>\n    TokenMatcher.define(\n      entity => TokenMatcher.sequence/* regexp */ `(\n        \\s+\n        ${entity((text, entity, match, state) => {\n          match.format = 'whitespace';\n          TokenMatcher.capture((match.flatten = state.lineOffset !== match.index) ? 'whitespace' : 'inset', match); // , text\n        })}\n      )`,\n    ),\n  Escape: ({\n    IdentifierStartCharacter = RegExp(TokenMatcher.sequence/* regexp */ `[${ECMAScriptRanges.IdentifierStart}]`, 'u'),\n    IdentifierPartSequence = RegExp(TokenMatcher.sequence/* regexp */ `[${ECMAScriptRanges.IdentifierPart}]+`, 'u'),\n    fromUnicodeEscape = (fromCodePoint => text => fromCodePoint(parseInt(text.slice(2), 16)))(String.fromCodePoint),\n  } = {}) =>\n    TokenMatcher.define(\n      entity => TokenMatcher.sequence/* regexp */ `(\n        \\\\u[${ECMAScriptRanges.HexDigit}][${ECMAScriptRanges.HexDigit}][${ECMAScriptRanges.HexDigit}][${\n        ECMAScriptRanges.HexDigit\n      }]\n        ${entity((text, entity, match, state) => {\n          match.format = 'escape';\n          TokenMatcher.capture(\n            state.context.goal.type ||\n              (state.context.goal === ECMAScriptGoal &&\n              state.lastToken != null &&\n              (state.lastToken.type === 'identifier'\n                ? IdentifierPartSequence.test(fromUnicodeEscape(text))\n                : IdentifierStartCharacter.test(fromUnicodeEscape(text)))\n                ? ((match.flatten = true), 'identifier')\n                : 'escape'),\n            match,\n          );\n        })}\n      )|(\n        \\\\f|\\\\n|\\\\r|\\\\t|\\\\v|\\\\c[${ECMAScriptRanges.ControlLetter}]\n        |\\\\x[${ECMAScriptRanges.HexDigit}][${ECMAScriptRanges.HexDigit}]\n        |\\\\u\\{[${ECMAScriptRanges.HexDigit}]*\\}\n        |\\\\[^]\n        ${entity((text, entity, match, state) => {\n          TokenMatcher.capture(state.context.goal.type || 'escape', match);\n          match.capture[ECMAScriptGoal.keywords[text]] = text;\n        })}\n      )`,\n    ),\n  Comment: () =>\n    TokenMatcher.define(\n      entity => TokenMatcher.sequence/* regexp */ `(\n        //|/\\*|\\*/\n        ${entity((text, entity, match, state) => {\n          match.format = 'punctuator';\n          TokenMatcher.capture(\n            state.context.goal.openers && state.context.goal.openers[text]\n              ? TokenMatcher.open(text, state) ||\n                  (state.nextContext.goal.spans != null &&\n                    state.nextContext.goal.spans[text] &&\n                    (TokenMatcher.forward(state.nextContext.goal.spans[text], match, state),\n                    (match[match.format] = state.nextContext.goal.type || 'comment')),\n                  // (match.flatten = true),\n                  'opener')\n              : state.context.group && state.context.group.closer === text\n              ? TokenMatcher.close(text, state) ||\n                (state.context.goal === ECMAScriptCommentGoal && (match[match.format] = ECMAScriptCommentGoal.type),\n                'closer')\n              : (text.length === 1 || ((state.nextOffset = match.index + 1), (text = match[0] = text[0])),\n                (((match.punctuator = state.context.goal.punctuation && state.context.goal.punctuation[text]) ||\n                  (state.context.goal.punctuators && state.context.goal.punctuators[text] === true)) &&\n                  'punctuator') ||\n                  state.context.goal.type ||\n                  'sequence'),\n            match,\n          );\n        })}\n      )`,\n    ),\n  StringLiteral: () =>\n    TokenMatcher.define(\n      entity => TokenMatcher.sequence/* regexp */ `(\n        \"|'|${'`'}\n        ${entity((text, entity, match, state) => {\n          match.format = 'punctuator';\n          TokenMatcher.capture(\n            state.context.goal === ECMAScriptGoal\n              ? TokenMatcher.open(text, state) ||\n                  // Safely fast forward to end of string\n                  (state.nextContext.goal.spans != null &&\n                    state.nextContext.goal.spans[text] &&\n                    TokenMatcher.forward(state.nextContext.goal.spans[text], match, state),\n                  (match.punctuator =\n                    (state.nextContext.goal.punctuation && state.nextContext.goal.punctuation[text]) ||\n                    state.nextContext.goal.type ||\n                    'quote'),\n                  // (match.flatten = true),\n                  'opener')\n              : state.context.group.closer === text\n              ? TokenMatcher.close(text, state) || ((match.punctuator = state.context.goal.type || 'quote'), 'closer')\n              : state.context.goal.type || 'quote',\n            match,\n          );\n        })}\n      )`,\n    ),\n  Opener: () =>\n    TokenMatcher.define(\n      entity => TokenMatcher.sequence/* regexp */ `(\n        \\$\\{|\\{|\\(|\\[\n        ${entity((text, entity, match, state) => {\n          match.format = 'punctuator';\n          TokenMatcher.capture(\n            state.context.goal.punctuators != null && state.context.goal.punctuators[text] === true\n              ? (match.punctuator =\n                  (state.context.goal.punctuation && state.context.goal.punctuation[text]) || 'combinator')\n              : state.context.goal.openers != null &&\n                state.context.goal.openers[text] === true &&\n                (state.context.goal.spans == null ||\n                  state.context.goal.spans[text] == null ||\n                  // Check if conditional span faults\n                  TokenMatcher.forward(state.context.goal.spans[text], match, state, false))\n              ? TokenMatcher.open(text, state) ||\n                ((match.punctuator =\n                  (state.context.goal.punctuation && state.context.goal.punctuation[text]) || state.context.goal.type),\n                'opener')\n              : // If it is passive sequence we keep only on character\n                (text.length === 1 || ((state.nextOffset = match.index + 1), (text = match[0] = text[0])),\n                state.context.goal.type || 'sequence'),\n            match,\n          );\n        })}\n      )`,\n    ),\n  Closer: () =>\n    TokenMatcher.define(\n      entity => TokenMatcher.sequence/* regexp */ `(\n        \\}|\\)|\\]\n        ${entity((text, entity, match, state) => {\n          match.format = 'punctuator';\n          TokenMatcher.capture(\n            state.context.goal.punctuators && state.context.goal.punctuators[text] === true\n              ? (match.punctuator = 'combinator')\n              : state.context.group.closer === text ||\n                (state.context.goal.closers && state.context.goal.closers[text] === true)\n              ? TokenMatcher.close(text, state) ||\n                ((match.punctuator =\n                  (state.context.goal.punctuation && state.context.goal.punctuation[text]) || state.context.goal.type),\n                'closer')\n              : state.context.goal.type || 'sequence',\n            match,\n          );\n        })}\n      )`,\n    ),\n  Solidus: () =>\n    // TODO: Refine the necessary criteria for RegExp vs Div\n    // TEST: [eval('var g;class x {}/1/g'), eval('var g=class x {}/1/g')]\n    TokenMatcher.define(\n      entity => TokenMatcher.sequence/* regexp */ `(\n        \\/=|\\/\n        ${entity((text, entity, match, state) => {\n          match.format = 'punctuator';\n          TokenMatcher.capture(\n            state.context.goal === ECMAScriptRegExpGoal\n              ? (text.length === 1 || ((state.nextOffset = match.index + 1), (text = match[0] = text[0])),\n                (match.punctuator = state.context.goal.type || 'sequence'),\n                state.context.group.closer !== ']'\n                  ? TokenMatcher.close(text, state) /* fault? */ || 'closer'\n                  : match.punctuator)\n              : state.context.goal !== ECMAScriptGoal\n              ? state.context.goal.type || 'sequence'\n              : state.lastAtom === undefined ||\n                state.lastAtom.type === 'delimiter' ||\n                state.lastAtom.type === 'breaker' ||\n                state.lastAtom.text === '=>' ||\n                (state.lastAtom.type === 'operator'\n                  ? state.lastAtom.text !== '++' && state.lastAtom.text !== '--'\n                  : state.lastAtom.type === 'closer'\n                  ? state.lastAtom.text === '}'\n                  : state.lastAtom.type === 'opener' || state.lastAtom.type === 'keyword')\n              ? TokenMatcher.open(text, state) ||\n                ((match.punctuator =\n                  (state.nextContext.goal.punctuation && state.nextContext.goal.punctuation[text]) ||\n                  state.nextContext.goal.type ||\n                  'pattern'),\n                'opener')\n              : (match.punctuator = 'operator'),\n            match,\n          );\n        })}\n      )`,\n    ),\n  Operator: () =>\n    TokenMatcher.define(\n      entity => TokenMatcher.sequence/* regexp */ `(\n        ,|;|\\.\\.\\.|\\.|:|\\?${\n          // We're including non-conflicting RegExp atoms here\n          '[:=!]?'\n        }\n        |\\+\\+|--|=>\n        |\\+=|-=|\\*\\*=|\\*=\n        |&&|&=|&|\\|\\||\\|=|\\||%=|%|\\^=|\\^|~=|~\n        |<<=|<<|<=|<|>>>=|>>>|>>=|>>|>=|>\n        |!==|!=|!|===|==|=\n        |\\+|-|\\*\\*|\\*\n        ${entity((text, entity, match, state) => {\n          match.format = 'punctuator';\n          TokenMatcher.capture(\n            state.context.goal === ECMAScriptGoal\n              ? (text === '*' && state.lastAtom && state.lastAtom.text === 'function' && 'keyword') ||\n                  (ECMAScriptGoal.punctuation[text] || 'operator')\n              : state.context.goal.punctuators && state.context.goal.punctuators[text] === true\n              ? (match.punctuator =\n                  (state.context.goal.punctuation && state.context.goal.punctuation[text]) || 'punctuation')\n              : (text.length === 1 || ((state.nextOffset = match.index + 1), (text = match[0] = text[0])),\n                state.context.goal.type || 'sequence'),\n            match,\n          );\n        })}\n      )`,\n    ),\n  Keyword: () =>\n    TokenMatcher.define(\n      entity => TokenMatcher.sequence/* regexp */ `\\b(\n        ${TokenMatcher.join(...ECMAScriptGoal.keywords).replace(/\\./g, '\\\\.')}\n        ${entity((text, entity, match, state) => {\n          match.format = 'identifier';\n          TokenMatcher.capture(\n            (match.flatten = state.context.goal !== ECMAScriptGoal)\n              ? state.context.goal.type || 'sequence'\n              : state.lastAtom != null && state.lastAtom.text === '.'\n              ? 'identifier'\n              : state.context.captureKeyword === undefined\n              ? 'keyword'\n              : state.context.captureKeyword(text, state) || 'fault',\n            match,\n          );\n        })}\n      )\\b(?=[^\\s$_:]|\\s+[^:]|$)`,\n    ),\n  Identifier: ({\n    RegExpFlags = new RegExp(\n      /\\w/g[Symbol.replace](\n        /*regexp*/ `^(?:g|i|m|s|u|y)+$`,\n        /*regexp*/ `$&(?=[^$&]*$)`, // interleaved\n      ),\n    ),\n  } = {}) =>\n    TokenMatcher.define(\n      entity => TokenMatcher.sequence/* regexp */ `(\n        [${ECMAScriptRanges.IdentifierStart}][${ECMAScriptRanges.IdentifierPart}]*\n        ${entity((text, entity, match, state) => {\n          match.format = 'identifier';\n          TokenMatcher.capture(\n            state.context.goal !== ECMAScriptGoal\n              ? (([text] = text.split(/\\b/, 2)),\n                (state.nextOffset = match.index + text.length),\n                (match[0] = text),\n                // identity\n                state.context.goal.type || 'sequence')\n              : state.lastToken != null && state.lastToken.punctuator === 'pattern' && RegExpFlags.test(text)\n              ? ((match.flatten = true), (match.punctuator = ECMAScriptRegExpGoal.type), 'closer')\n              : ((match.flatten = true), 'identifier'),\n            match,\n          );\n        })}\n      )`,\n      `${ECMAScriptRanges.IdentifierStart}${ECMAScriptRanges.IdentifierPart}`.includes('\\\\p{') ? 'u' : '',\n    ),\n  Number: ({\n    NumericSeparator,\n    Digits = NumericSeparator\n      ? Digit => TokenMatcher.sequence/* regexp */ `[${Digit}][${Digit}${TokenMatcher.escape(NumericSeparator)}]*`\n      : Digit => TokenMatcher.sequence/* regexp */ `[${Digit}]+`,\n    DecimalDigits = Digits(ECMAScriptRanges.DecimalDigit),\n    HexDigits = Digits(ECMAScriptRanges.HexDigit),\n    BinaryDigits = Digits(ECMAScriptRanges.BinaryDigit),\n  } = {}) =>\n    TokenMatcher.define(\n      entity => TokenMatcher.sequence/* regexp */ `\\b(\n        ${DecimalDigits}\\.${DecimalDigits}[eE]${DecimalDigits}\n        |\\.${DecimalDigits}[eE]${DecimalDigits}\n        |0[xX]${HexDigits}\n        |0[bB]${BinaryDigits}\n        |${DecimalDigits}\\.${DecimalDigits}\n        |\\.${DecimalDigits}\n        |${DecimalDigits}\n        ${entity((text, entity, match, state) => {\n          match.format = 'number';\n          TokenMatcher.capture(state.context.goal.type || 'number', match); // , text\n        })}\n      )\\b`,\n    ),\n});\n","﻿//@ts-check\n\nimport {matcher} from './es-matcher.js';\nimport {initializeState, finalizeState, createToken} from '../../packages/matcher/experimental/common/helpers.js';\nimport {createMatcherMode} from '../../packages/matcher/lib/token-matcher.js';\n\nexport const mode = createMatcherMode(matcher, {\n  USE_CONSTRUCTS: false,\n\n  syntax: 'ecmascript',\n  aliases: ['es', 'js', 'javascript'],\n\n  preregister: parser => {\n    parser.unregister('es');\n    parser.unregister('ecmascript');\n  },\n\n  initializeState: state => {\n    state.USE_CONSTRUCTS = mode.USE_CONSTRUCTS === true;\n    initializeState(state);\n  },\n\n  finalizeState: state => {\n    finalizeState(state);\n  },\n\n  createToken: (log => (match, state) => {\n    // let construct;\n    // const lastAtom = state.lastAtom;\n    const token = createToken(match, state);\n\n    if (state.USE_CONSTRUCTS === true && token !== undefined) {\n      const {type, text, context = state.nextTokenContext} = token;\n      if (token.goal === matcher.goal) {\n        switch (type) {\n          case 'inset':\n          case 'whitespace':\n          case 'opener':\n          // if (context.currentConstruct.last === '=>') {\n          // } else\n          // if (text === '{') {\n          //   if (context.openingConstruct[context.openingConstruct.length - 2] === '(…)') {\n          //     [\n          //       ,\n          //       context.openingConstruct.block,\n          //     ] = /((?:(?:async |)function (?:\\* |)(?:\\S+ |)|(?:while|for|if|else|catch|switch|with) |)\\(…\\) \\{…\\})?$/.exec(\n          //       context.openingConstruct.text,\n          //     );\n          //     log('%s\\t%o', text, {...context.openingConstruct});\n          //   } else {\n          //     // log('%s\\t%o', text, [...context.openingConstruct.text]);\n          //   }\n          // }\n          case 'closer':\n            break;\n          case 'number':\n          case 'identifier':\n            context.currentConstruct.add(`‹${type}›`);\n            break;\n          case 'combinator': // ie ‹=>›\n          case 'delimiter':\n          case 'breaker':\n          case 'operator':\n            switch (text) {\n              case ',':\n              case ';':\n                context.currentConstruct.add(text);\n                context.currentConstruct.set('');\n                break;\n              case '=>':\n              case '.':\n                context.currentConstruct.add(text);\n                break;\n              case ':':\n                if (context.currentConstruct.length === 1) {\n                  context.currentConstruct.add(text);\n                  break;\n                }\n              default:\n                context.currentConstruct.set(text);\n                break;\n            }\n            break;\n          case 'break':\n            context.currentConstruct.last !== undefined &&\n              (context.currentConstruct.last === 'return' ||\n                context.currentConstruct.last === 'throw' ||\n                context.currentConstruct.last === 'break' ||\n                context.currentConstruct.last === 'continue' ||\n                context.currentConstruct.last === 'yield' ||\n                context.currentConstruct.last === '{…}') &&\n              context.currentConstruct.set('');\n            break;\n          case 'keyword':\n            switch (text) {\n              case 'for':\n              case 'if':\n              case 'do':\n              case 'while':\n              case 'with':\n                context.currentConstruct.set(text);\n                break;\n              default:\n                context.currentConstruct.add(text);\n            }\n            break;\n        }\n        token.construct = context.currentConstruct.text;\n        // typeof log === 'function' &&\n        //   ((type === 'opener' && (text === '/' || text === '{')) ||\n        //     // Semi\n        //     text === ';' ||\n        //     // Arrow Function\n        //     text === '=>') &&\n        //   log(\n        //     '%s\\t%o\\n\\t%o\\n\\t%o',\n        //     text,\n        //     type === 'breaker'\n        //       ? context.currentConstruct.previousText\n        //       : type === 'opener'\n        //       ? token.context.openingConstruct.text\n        //       : token.construct,\n        //     lastAtom,\n        //     token,\n        //   );\n      }\n      token.isDelimiter || context.currentConstruct == null\n        ? context.openingConstruct == null ||\n          context.openingConstruct.length === 0 ||\n          (token.hint = `${token.hint}\\n\\n${context.openingConstruct.text}`)\n        : context.currentConstruct.length > 0\n        ? (token.hint = `${token.hint}\\n\\n${context.currentConstruct.text}`)\n        : context.currentConstruct.previousText &&\n          (token.hint = `${token.hint}\\n\\n${context.currentConstruct.previousText}\\n…`);\n    }\n    return token;\n  })(\n    /** @type {Console['log']} */\n    // null && //\n    //@ts-ignore\n    (console.internal || console).log,\n  ),\n});\n\n/** @typedef {import('./types').State} State */\n","﻿import {mode} from './es-mode.js';\n\n// mode.USE_CONSTRUCTS = true;\nimport.meta.url.includes('standalone.js') && (mode.USE_CONSTRUCTS = true);\n\nexport const {syntax, tokenizer} = mode;\n"],"names":[],"mappings":"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"}