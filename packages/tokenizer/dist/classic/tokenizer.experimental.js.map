{"version":3,"file":"tokenizer.experimental.js","sources":["../../../packages/tokenizer/lib/experimental/contextualizer.js","../../../packages/tokenizer/lib/experimental/contexts.js","../../../packages/tokenizer/lib/experimental/synthesizer.js","../../../packages/tokenizer/lib/experimental/tokenizer.js","../../../packages/tokenizer/lib/experimental/parser.js","../../../packages/tokenizer/tokenizer.experimental.js","../../../packages/grammars/common/helpers.js","../../../packages/grammars/css/css-grammar.js","../../../packages/grammars/html/html-grammar.js","../../../packages/grammars/markdown/markdown-grammar.js","../../../packages/grammars/common/patterns.js","../../../packages/grammars/javascript/javascript-grammar.js","../../../packages/grammars/typescript/typescript-grammar.js","../../../packages/grammars/javascript/javascript-extended-grammar.js","../../../packages/tokenizer/tokenizer.experimental.extended.js"],"sourcesContent":["﻿/** Shared context state handler for token generator instances  */\nexport class Contextualizer {\n  constructor(tokenizer) {\n    // Local contextualizer state\n    let definitions, context;\n\n    // Tokenizer mode\n    const {defaults = {}, mode = defaults.mode, initializeContext} = tokenizer;\n\n    if (!mode) throw Error(`Contextualizer constructed without a mode`);\n\n    const prime = next => (\n      definitions !== next &&\n        next &&\n        ((context = mappings.get((definitions = next))) ||\n          ((context = this.contextualize(definitions)),\n          initializeContext && apply(initializeContext, tokenizer, [context]))),\n      (next != null && context) || ((definitions = mode), (context = root))\n    );\n\n    Object.defineProperties(this, {\n      mode: {value: mode, writable: false},\n      prime: {value: prime, writable: false},\n    });\n\n    // Eagerly contextualize \"root\" definitions on first use\n    if (!(context = mappings.get((definitions = mode)))) {\n      const {\n        // Parent goal\n        syntax,\n        matcher = (mode.matcher = (defaults && defaults.matcher) || undefined),\n        quotes,\n        punctuators = (mode.punctuators = {aggregators: {}}),\n        punctuators: {aggregators = (punctuators.aggregators = {})},\n        patterns = (mode.patterns = {maybeKeyword: null}),\n        patterns: {\n          maybeKeyword = (patterns.maybeKeyword =\n            (defaults && defaults.patterns && defaults.patterns.maybeKeyword) || undefined),\n        },\n        spans: {['(spans)']: spans} = (mode.spans = {}),\n      } = mode;\n\n      context = {syntax, goal: syntax, mode, punctuators, aggregators, matcher, quotes, spans};\n\n      initializeContext && apply(initializeContext, tokenizer, [context]);\n\n      mappings.set(mode, context);\n    }\n\n    const root = context;\n  }\n\n  contextualize(definitions) {\n    const mode = this.mode;\n\n    const {\n      // Parent goal\n      syntax = (definitions.syntax = mode.syntax),\n\n      // Lexical goal\n      goal = (definitions.goal = syntax),\n\n      // Assumes shared parent and unrelated production lexicons\n      punctuators = (definitions.punctuators = goal === syntax ? mode.punctuators : {}),\n      aggregators = (definitions.aggregate =\n        (punctuators && punctuators.aggregators) || (punctuators.aggregators = {})),\n\n      // Contextual identity\n      punctuator,\n      closer,\n\n      // Contextual grammar\n      spans,\n      matcher = (definitions.matcher = mode.matcher),\n      quotes = (definitions.quotes = mode.quotes),\n      forming = (definitions.forming = goal === mode.syntax),\n    } = definitions;\n\n    const context = {mode, syntax, goal, punctuator, punctuators, aggregators, closer, spans, matcher, quotes, forming};\n\n    mappings.set(definitions, context);\n    return context;\n  }\n\n  /** @deprecate Historical convenience sometimes used cautiously */\n  normalize({\n    syntax,\n    goal = syntax,\n    quote,\n    comment,\n    closure,\n    span,\n    grouping = comment || closure || span || undefined,\n    punctuator,\n    spans = (grouping && grouping.spans) || undefined,\n    matcher = (grouping && grouping.matcher) || undefined,\n    quotes = (grouping && grouping.quotes) || undefined,\n    punctuators = {aggregators: {}},\n    opener = quote || (grouping && grouping.opener) || undefined,\n    closer = quote || (grouping && grouping.closer) || undefined,\n    hinter,\n    open = (grouping && grouping.open) || undefined,\n    close = (grouping && grouping.close) || undefined,\n  }) {\n    return {syntax, goal, punctuator, spans, matcher, quotes, punctuators, opener, closer, hinter, open, close};\n  }\n}\n\nObject.freeze(Object.freeze(Contextualizer.prototype).constructor);\n\nconst mappings = new WeakMap();\nconst {apply} = Reflect;\n","﻿import {Contextualizer} from './contextualizer.js';\n\n/** Private context state handler for token generator instances */\nexport class Contexts {\n  /** @param {Tokenizer} tokenizer */\n  constructor(tokenizer) {\n    ({\n      syntax: this.syntax,\n      syntax: this.goal,\n      syntax: (this.hints = new Hints()).top,\n      [Definitions]: this.definitions = (this.contextualizer.mode[Definitions] = {}),\n    } = (this.contextualizer =\n      // TODO: Undo if concurrent parsing shows side-effects\n      tokenizer.contextualizer || (tokenizer.contextualizer = new Contextualizer(tokenizer))).mode);\n    (this.stack = [(this.root = this.contextualizer.prime(null))]).hints = [(this.hint = this.hints.toString())];\n  }\n\n  /**\n   * @param {Token} nextToken\n   * @param {TokenizerState} state\n   * @param {TokenizerContext} context\n   */\n  close(nextToken, state, context) {\n    const childContext = context;\n    let after, parentToken;\n    const {stack, hints, syntax, contextualizer} = this;\n\n    const childIndex = stack.length - 1;\n    const childDefinitions = childIndex && stack[childIndex];\n\n    // TODO: Handle childContext.closer !== childDefinitions.closer\n    if (childDefinitions) {\n      const {hinter, punctuator} = childDefinitions;\n      stack.pop();\n      stack.includes(childDefinitions) || hints.delete(hinter);\n      (punctuator === 'opener' && (nextToken.punctuator = 'closer')) ||\n        (punctuator && (nextToken.punctuator = punctuator));\n      nextToken.type = 'punctuator';\n      after = childDefinitions.close && childDefinitions.close(nextToken, state, childContext);\n    }\n\n    const parentIndex = stack.length - 1;\n    const parentDefinitions = stack[parentIndex];\n    const parentHint = stack.hints[parentIndex];\n\n    // TODO: Verify coherent goal, context, and hints\n    (parentDefinitions &&\n      (this.hint = parentHint) &&\n      (context = contextualizer.prime(parentDefinitions)) &&\n      (this.goal = context.goal || syntax)) ||\n      ((this.goal = (context = contextualizer.prime(null)).goal || syntax) && (this.hint = stack.hints[0] || syntax));\n    parentToken = (nextToken.parent && nextToken.parent.parent) || undefined;\n\n    return {context, after, parentToken};\n  }\n\n  /**\n   * @param {Token} nextToken\n   * @param {TokenizerState} state\n   * @param {TokenizerContext} context\n   */\n  open(nextToken, state, context) {\n    let childDefinitions, parentToken, after;\n    let {punctuator, text} = nextToken;\n    const parentContext = context;\n    const {definitions, stack, hints, hint, syntax, contextualizer} = this;\n    const hinter = punctuator ? `${syntax}-${punctuator}` : hint;\n    const contextID = `${hinter},${text}`;\n    const definedDefinitions = definitions[contextID];\n    const {\n      mode: {matchers, comments, spans, closures},\n    } = parentContext;\n\n    if (punctuator === 'span' && parentContext.spans) {\n      const span = parentContext.spans.get(text);\n      punctuator = nextToken.punctuator = 'span';\n      childDefinitions =\n        definedDefinitions ||\n        contextualizer.normalize({\n          syntax,\n          goal: syntax,\n          span,\n          matcher: span.matcher || (matchers && matchers.span) || undefined,\n          spans: (spans && spans[text]) || undefined,\n          hinter,\n          punctuator,\n        });\n    } else if (parentContext.punctuator !== 'quote') {\n      if (punctuator === 'quote') {\n        childDefinitions =\n          definedDefinitions ||\n          contextualizer.normalize({\n            syntax,\n            goal: punctuator,\n            quote: text,\n            matcher: (matchers && matchers.quote) || undefined,\n            spans: (spans && spans[text]) || undefined,\n            hinter,\n            punctuator,\n          });\n      } else if (punctuator === 'comment') {\n        const comment = comments.get(text);\n        childDefinitions =\n          definedDefinitions ||\n          contextualizer.normalize({\n            syntax,\n            goal: punctuator,\n            comment,\n            matcher: comment.matcher || (matchers && matchers.comment) || undefined,\n            hinter,\n            punctuator,\n          });\n      } else if (punctuator === 'closure') {\n        const closure = (definedDefinitions && definedDefinitions.closure) || closures.get(text);\n        punctuator = nextToken.punctuator = 'opener';\n        closure &&\n          (childDefinitions =\n            definedDefinitions ||\n            contextualizer.normalize({\n              syntax,\n              goal: syntax,\n              closure,\n              matcher: closure.matcher || (matchers && matchers.closure) || undefined,\n              hinter,\n              punctuator,\n            }));\n      }\n    }\n\n    if (childDefinitions) {\n      (contextID && definitions[contextID]) || (definitions[contextID] = childDefinitions);\n      const childIndex = stack.push(childDefinitions) - 1;\n      hints.add(hinter);\n      this.goal = (childDefinitions && childDefinitions.goal) || syntax;\n      this.hint = stack.hints[childIndex] = `${hints.toString()} in-${this.goal}`;\n      parentToken = nextToken;\n      context = contextualizer.prime(childDefinitions);\n      nextToken.type = 'punctuator';\n      after = childDefinitions.open && childDefinitions.open(nextToken, state, context);\n    }\n\n    return {context, after, parentToken};\n  }\n}\n\nObject.freeze(Object.freeze(Contexts.prototype).constructor);\n\nconst Definitions = Symbol('[definitions]');\n\nconst Hints = Object.freeze(\n  Object.defineProperties(\n    class Hints extends Set {\n      toString() {\n        return `${(this.root && ` ${this.root}`) || ''}${(this.top && ` ${this.top}`) || ''}${(this.size &&\n          ` ${this.join(' ')}`) ||\n          ''}`.trim();\n      }\n    }.prototype,\n    {join: Object.getOwnPropertyDescriptor(Array.prototype, 'join')},\n  ),\n).constructor;\n\n/** @typedef {import('./types').Contextualizer} Contextualizer */\n/** @typedef {import('./types').Token} Token */\n/** @typedef {import('./types').Tokenizer} Tokenizer */\n/** @typedef {import('./types').TokenizerState} TokenizerState */\n/** @typedef {import('./types').TokenizerContext} TokenizerContext */\n","﻿export class TokenSynthesizer {\n  constructor(context) {\n    const {\n      mode: {\n        keywords,\n        patterns: {\n          maybeIdentifier,\n          maybeKeyword,\n          segments: {\n            [SEGMENT]: matchSegment = context.mode.patterns.segments &&\n              (context.mode.patterns.segments[SEGMENT] = createSegmenter(context.mode.patterns.segments)),\n          } = (context.mode.patterns.segments = false),\n        } = (context.mode.patterns = false),\n      },\n      punctuators,\n      aggregators,\n      forming = (context.forming = true),\n      wording = (context.wording = keywords || maybeIdentifier ? true : false),\n      [PUNCTUATOR]: matchPunctuator = (context[PUNCTUATOR] = createPunctuator(context)),\n      [AGGREGATOR]: matchAggregator = (context[AGGREGATOR] = createAggregator(context)),\n    } = context;\n\n    this.create = next => {\n      const {text, type, hint, previous, parent, last} = next;\n      type === 'sequence'\n        ? ((next.punctuator =\n            (previous &&\n              (aggregators[text] || (!(text in aggregators) && (aggregators[text] = matchAggregator(text))))) ||\n            (punctuators[text] || (!(text in punctuators) && (punctuators[text] = matchPunctuator(text)))) ||\n            undefined) &&\n            (next.type = 'punctuator')) ||\n          (matchSegment &&\n            (next.type = matchSegment(text)) &&\n            (next.hint = `${(hint && `${hint} `) || ''}${next.type}`)) ||\n          (next.type = 'sequence')\n        : type === 'whitespace'\n        ? // ? (next.breaks = text.match(LineEndings).length - 1)\n          (next.breaks = countLineBreaks(text))\n        : forming && wording\n        ? text &&\n          (((!maybeKeyword || maybeKeyword.test(text)) &&\n            (keywords && keywords.includes(text)) &&\n            (!last || last.punctuator !== 'nonbreaker' || (previous && previous.breaks > 0)) &&\n            (next.type = 'keyword')) ||\n            (maybeIdentifier && maybeIdentifier.test(text) && (next.type = 'identifier')))\n        : (next.type = 'text');\n\n      previous && (previous.next = next) && (parent || (next.parent = previous.parent));\n\n      return next;\n    };\n  }\n}\n\nObject.freeze(Object.freeze(TokenSynthesizer.prototype).constructor);\n\nconst PUNCTUATOR = Symbol('[punctuator]');\nconst AGGREGATOR = Symbol('[aggregator]');\nconst SEGMENT = Symbol('[segment]');\n\n/** @param {string} text */\nconst countLineBreaks = text => {\n  let breaks = 0;\n  for (let index = -1; (index = text.indexOf('\\n', index + 1)) > -1; breaks++);\n  return breaks;\n};\n\nconst createSegmenter = segments => {\n  const sources = [];\n  const names = [];\n  for (const name of Object.getOwnPropertyNames(segments)) {\n    const segment = segments[name];\n    if (segment && segment.source && !/\\\\\\d/.test(segment.source)) {\n      names.push(name);\n      sources.push(segment.source.replace(/\\\\?\\((.)/g, (m, a) => (m[0] !== '\\\\' && a !== '?' && '(?:') || m));\n    }\n  }\n  const length = names.length;\n  if (!length) return false;\n  const matcher = new RegExp(`(${sources.join('|)|(')}|)`, 'u');\n  return text => {\n    const match = matcher.exec(text);\n    if (match[0]) for (let i = 1, n = length; n--; i++) if (match[i]) return names[i - 1];\n  };\n};\n\nconst createPunctuator = ({mode: {operators, nonbreakers, comments, closures, breakers}, quotes, spans}) => {\n  return text =>\n    (operators && operators.includes(text) && 'operator') ||\n    (closures && closures.includes(text) && 'closure') ||\n    (breakers && breakers.includes(text) && 'breaker') ||\n    (nonbreakers && nonbreakers.includes(text) && 'nonbreaker') ||\n    (comments && comments.includes(text) && 'comment') ||\n    (quotes && quotes.includes(text) && 'quote') ||\n    (spans && spans.includes(text) && 'span') ||\n    false;\n};\n\nconst createAggregator = ({mode: {assigners, combinators}}) => {\n  return text =>\n    (assigners && assigners.includes(text) && 'assigner') ||\n    (combinators && combinators.includes(text) && 'combinator') ||\n    false;\n};\n","﻿import {Contexts} from './contexts.js';\nimport {TokenSynthesizer} from './synthesizer.js';\n\n/** Tokenizer for a single mode (language) */\nexport class Tokenizer {\n  constructor(mode, defaults) {\n    this.mode = mode;\n    this.defaults = defaults || this.constructor.defaults || undefined;\n  }\n\n  initializeContext(context) {\n    context.createToken || (context.createToken = new TokenSynthesizer(context).create);\n    return context;\n  }\n\n  /** Token generator from source using tokenizer.mode (or defaults.mode) */\n  *tokenize(source, state = {}) {\n    let done, context;\n    let previousToken, lastToken, parentToken;\n    let {match, index = 0, flags} = state;\n    const contexts = (state.contexts = new Contexts(this));\n    const {tokenize = (state.tokenize = text => [{text}])} = state;\n    const rootContext = (context = state.lastContext = contexts.root);\n    const top = {type: 'top', text: '', offset: index};\n\n    done = !(state.source = source);\n\n    while (!done) {\n      const {closer, matcher, createToken, forming = true} = context;\n\n      // Current contextual hint (syntax or hint)\n      const hint = contexts.hint;\n\n      while (state.lastContext === (state.lastContext = context)) {\n        let nextToken;\n\n        const lastIndex = (state.index > -1 && state.index) || 0;\n\n        matcher.lastIndex = lastIndex;\n        match = state.match = matcher.exec(source);\n        done = index === (index = state.index = matcher.lastIndex) || !match;\n\n        if (done) break;\n\n        // Current contextual match\n        const {0: text, 1: whitespace, 2: sequence, index: offset} = match;\n\n        // Current quasi-contextual fragment\n        const pre = source.slice(lastIndex, offset);\n        pre &&\n          ((nextToken = createToken({\n            type: 'pre',\n            text: pre,\n            offset: lastIndex,\n            previous: previousToken,\n            parent: parentToken,\n            hint,\n            last: lastToken,\n          })),\n          yield (previousToken = nextToken));\n\n        // Current contextual fragment\n        const type = (whitespace && 'whitespace') || (sequence && 'sequence') || 'text';\n        nextToken = createToken({\n          type,\n          text,\n          offset,\n          previous: previousToken,\n          parent: parentToken,\n          hint,\n          last: lastToken,\n        });\n\n        let after;\n\n        // Current contextual punctuator (from sequence)\n        const closing =\n          closer && (closer.test ? closer.test(text) : closer === text || (whitespace && whitespace.includes(closer)));\n\n        // Update context\n        (closing && ({context, after, parentToken = top} = contexts.close(nextToken, state, context))) ||\n          (nextToken.punctuator &&\n            context.punctuator !== 'comment' &&\n            ({context, after, parentToken = top} = contexts.open(nextToken, state, context)));\n\n        // Current contextual tail token (yield from sequence)\n        yield (previousToken = nextToken);\n\n        // Next reference to last contextual sequence token\n        nextToken && !whitespace && forming && (lastToken = nextToken);\n\n        if (after) {\n          let tokens, createToken, nextIndex;\n          let hintTokenType, hintPrefix, hintSuffix;\n\n          if (after.syntax) {\n            const {syntax, offset, index} = after;\n            const body = index > offset && source.slice(offset, index - 1);\n            if (body && body.length > 0) {\n              (tokens = tokenize(body, {options: {sourceType: syntax}}, this.defaults)), (nextIndex = index);\n              hintSuffix = `${syntax}-in-${rootContext.syntax}`;\n              createToken = token => ((token.hint = `${(token.hint && `${token.hint} `) || ''}${hintSuffix}`), token);\n            }\n          } else if (after.length) {\n            hintTokenType = 'code';\n            hintPrefix = contexts.hint ? `${contexts.hint} ` : '';\n            createToken = token =>\n              context.createToken(((token.hint = `${hintPrefix}${token.type || hintTokenType}`), token));\n            (tokens = after).end > state.index && (nextIndex = after.end);\n          }\n\n          if (tokens) {\n            for (const next of tokens) {\n              previousToken && ((next.previous = previousToken).next = next);\n              createToken && createToken(next);\n              yield (previousToken = next);\n            }\n            nextIndex > state.index && (state.index = nextIndex);\n          }\n        }\n      }\n    }\n    flags && flags.debug && console.info('[Tokenizer.tokenize‹state›]: %o', state);\n  }\n}\n\nObject.freeze(Object.freeze(Tokenizer.prototype).constructor);\n","import {Tokenizer} from './tokenizer.js';\n\nexport const TOKENIZERS = 'tokenizers';\nexport const MAPPINGS = 'mappings';\nexport const MODES = 'modes';\n\nconst none = {\n  syntax: 'markup',\n  matcher: /([\\s\\n]+)|(\\\\(?:(?:\\\\\\\\)*\\\\|[^\\\\\\s])?|\\/\\/+|\\/\\*+|\\*+\\/|\\(|\\)|\\[|\\]|,|;|\\.\\.\\.|\\.|\\b:\\/\\/\\b|::|:|\\?|`|\"|'|\\$\\{|\\{|\\}|=>|<\\/|\\/>|\\++|\\-+|\\*+|&+|\\|+|=+|!={0,3}|<{1,3}=?|>{1,2}=?)|[+\\-*/&|^%<>~!]=?/g,\n};\n\nconst define = (instance, property, value, options) => {\n  if (!instance.hasOwnProperty(property))\n    return (\n      Object.defineProperty(instance, property, {\n        value,\n        writable: (options && options.writable === true) || false,\n        configurable: (options && options.configurable === true) || false,\n        enumerable: !options || options.enumerable === true,\n      }),\n      value\n    );\n};\n\nexport class Parser {\n  /** @param {string} source @param {{sourceType?: string}} [state] */\n  tokenize(source, state = {}) {\n    const {\n      options: {\n        sourceType,\n        mode = (state.options.mode = (sourceType && this.get(sourceType)) || none),\n      } = (state.options = {}),\n    } = state;\n    let tokenizer = mode && this[TOKENIZERS].get(mode);\n    if (!source || !mode) return [];\n    !tokenizer && this[TOKENIZERS].set(mode, (tokenizer = new Tokenizer(mode)));\n    state.parser = this;\n    state.tokenize = (this.hasOwnProperty('tokenize') && this.tokenize) || (this.tokenize = this.tokenize.bind(this));\n    return tokenizer.tokenize(source, state);\n  }\n\n  get [TOKENIZERS]() {\n    return define(this, TOKENIZERS, new WeakMap());\n  }\n  get [MAPPINGS]() {\n    return define(this, MAPPINGS, Object.create(null));\n  }\n\n  get [MODES]() {\n    return define(this, MODES, Object.create(null));\n  }\n\n  get(id = 'default') {\n    const {[MAPPINGS]: mappings, [MODES]: modes} = this;\n    if (id in modes) return modes[id];\n    let mapping = mappings[id];\n    !mapping || mapping.syntax === id || (mapping = mappings[mapping.syntax]);\n    if (mapping && mapping.factory) {\n      const {syntax, factory, options} = mapping;\n      if (options.requires && options.requires.length > 0) {\n        const list = [];\n        for (const id of options.requires) id in modes || this.get(id) || list.push(id);\n        if (list.length) {\n          list.length > 1 && list.push(list.splice(-2, 2).join(' and '));\n          throw Error(`Cannot initialize \"${syntax}\" which requires the list mode(s): ${list.join(', ')}`);\n        }\n      }\n      return (mapping.mode = modes[id] = factory(options, modes));\n    }\n  }\n\n  /** @param {ModeFactory | Mode} mode @param {ModeOptions} [options] */\n  register(mode, options) {\n    if (!this[MAPPINGS]) return;\n\n    const {[MAPPINGS]: mappings, [MODES]: modes} = this;\n    const factory = typeof mode === 'function' && mode;\n    const {syntax, aliases = (options.aliases = [])} = ({syntax: options.syntax = mode.syntax} = options = {\n      syntax: undefined,\n      ...factory.defaults,\n      ...options,\n    });\n\n    if (!syntax || typeof syntax !== 'string') {\n      throw TypeError(`Cannot register \"${syntax}\" since it not valid string'`);\n    }\n\n    if (mappings[syntax]) {\n      if (factory ? factory === mappings[syntax].factory : mode === modes[syntax]) return;\n      throw ReferenceError(`Cannot register \"${syntax}\" since it is already registered`);\n    }\n\n    if (aliases && aliases.length > 0) {\n      for (const alias of aliases) {\n        if (!alias || typeof alias !== 'string')\n          throw TypeError(`Cannot register \"${syntax}\" since it's alias \"${alias}\" not valid string'`);\n        else if (mappings[alias])\n          throw ReferenceError(`Cannot register \"${syntax}\" since it's alias \"${alias}\" is already registered`);\n      }\n    }\n\n    const mapping = factory ? {syntax, factory, options} : {syntax, mode, options};\n    const descriptor = {value: mapping, writable: false};\n\n    for (const id of [syntax, ...aliases]) {\n      Object.defineProperty(mappings, id, descriptor);\n    }\n  }\n\n  /** @param {string} mode @param {string[]} requires */\n  requires(mode, requires) {\n    const missing = [];\n    for (const mode of requires) {\n      mode in this[MAPPINGS] || missing.push(`\"${mode}\"`);\n    }\n    if (!missing.length) return;\n    throw Error(`Cannot initialize \"${mode}\" which requires the missing mode(s): ${missing.join(', ')}`);\n  }\n}\n\n/**\n * @typedef { Partial<{syntax: string, matcher: RegExp, [name:string]: Set | Map | {[name:string]: Set | Map | RegExp} }> } Mode\n * @typedef { {[name: string]: Mode} } Modes\n * @typedef { {[name: string]: {syntax: string} } } Mappings\n * @typedef { {aliases?: string[], syntax: string} } ModeOptions\n * @typedef { (options: ModeOptions, modes: Modes) => Mode } ModeFactory\n */\n","export * from './lib/experimental/parser.js';\nexport * from './lib/experimental/tokenizer.js';\nimport {Parser} from './lib/experimental/parser.js';\n\nexport default Object.assign(new Parser(), {MODULE_URL: import.meta.url});\n","﻿/// Helpers\nexport const InspectSymbol = Symbol.for('nodejs.util.inspect.custom');\n\nexport const Null = Object.freeze(Object.create(null));\n\nexport const raw = String.raw;\n\nexport const RegExpFlags = /^\\/((?:g(?=[^g]*$)|i(?=[^i]*$)|m(?=[^m]*$)|s(?=[^s]*$)|u(?=[^u]*$)|y(?=[^y]*$))+)$|/;\n\nclass SequenceExpression extends RegExp {}\n\n/**\n * Create a sequence match expression from patterns.\n *\n * @type  {{(strings: TemplateStringsArray, ... patterns: pattern[]): sequence, (...patterns: pattern[]): sequence}}\n */\nexport const sequence = (...patterns) => (\n  patterns.length > 1 &&\n    (patterns.flags = RegExpFlags.exec(patterns[patterns.length - 1]).pop()) &&\n    (patterns[patterns.length - 1] = ''),\n  new SequenceExpression(Reflect.apply(raw, null, patterns.map(p => (p && p.source) || p || '')), patterns.flags || 'g')\n);\n\nclass IdentifierExpression extends RegExp {}\n\n/**\n * Create a maybeIdentifier test (ie [<first>][<other>]*) expression.\n *\n * @type {{(first: pattern, other: pattern, flags?: string, boundary?: unknown): pattern.identifier}}\n */\nexport const identifier = (first, other = first, flags = 'u', boundary = /yg/.test(flags) && '\\\\b') =>\n  new IdentifierExpression(`${boundary || '^'}[${first}][${other}]*${boundary || '$'}`, flags);\n\n/**\n * Create a sequence pattern from patterns.\n *\n * @param  {...Pattern} patterns\n */\nexport const all = (...patterns) => patterns.map(p => (p && p.exec ? p.source : p)).join('|');\n\n/// Symbols\n\nexport class Symbols extends Set {\n  static from(...sources) {\n    const Species = this || Symbols;\n    const symbols = (sources.length && Species.split(...sources)) || [];\n    return new Species(symbols);\n  }\n\n  static split(...sources) {\n    const Species = this || Symbols;\n    const symbols = [];\n    // TODO: Replace with sources.flat() for non-legacy\n    for (const source of [].concat(...sources)) {\n      source &&\n        (typeof source === 'string'\n          ? symbols.push(...source.split(/ +/))\n          : Symbol.iterator in source\n          ? symbols.push(...Species.split(...source))\n          : source['(symbols)'] && typeof source['(symbols)'] === 'string'\n          ? symbols.push(...Species.split(source['(symbols)']))\n          : null);\n    }\n    return symbols;\n  }\n\n  static inspect(symbol, depth, {stylize = String, compact = false} = {}) {\n    const type = typeof symbol;\n    return `${stylize(\n      type === 'symbol'\n        ? `Symbol(${symbol.description || ''})`\n        : type === 'string'\n        ? JSON.stringify(symbol).slice(1, -1)\n        : `${symbol}`,\n      type,\n    )}`;\n  }\n\n  get includes() {\n    Object.defineProperty(Symbols.prototype, 'includes', Object.getOwnPropertyDescriptor(Set.prototype, 'has'));\n    return this.has;\n  }\n  set includes(value) {\n    this.includes = (this.includes, value);\n  }\n\n  get(symbol) {\n    if (this.has(symbol)) return symbol;\n  }\n\n  [InspectSymbol](depth, {stylize = String, compact = false} = {}) {\n    try {\n      const depth = arguments[0] + 1;\n      const options = arguments[1];\n      let Species = (this && this.constructor) || Symbols;\n      const {inspect = (Species = Closures).inspect} = Species;\n      return `${(this && this.constructor && this.constructor.name) || 'Symbols'} ‹${Array.from(this.values())\n        .map(symbol => Species.inspect(symbol, depth, options))\n        .join('|')}›`;\n    } catch (exception) {\n      return super.toString(this);\n    }\n  }\n}\n/// Closures\n\nexport class Closure extends String {\n  constructor(opener, closer = opener) {\n    if (!opener || !closer) throw Error(`Cannot construct closure from \"${opener}\" … \"${closer}\"`);\n    super(`${opener}…${closer}`);\n    this.opener = opener;\n    this.closer = closer;\n  }\n\n  [InspectSymbol](depth, {stylize = String, compact = false} = {}) {\n    try {\n      const depth = arguments[0] + 1;\n      const options = arguments[1];\n      return `${(this && this.constructor && this.constructor.name) || 'Closure'} ‹${Closures.inspect(this)}›`;\n    } catch (exception) {\n      return `${this}`;\n    }\n  }\n}\n\nexport class Closures extends Map {\n  static get splitter() {\n    Object.defineProperty(Closures, 'splitter', {value: / *?([^ ]+…[^ ]+|[^ …]+) *?/});\n  }\n\n  static from(...sources) {\n    const Species = this || Closures;\n    const closures = (sources.length && Species.split(...sources)) || [];\n    return new Species(closures);\n  }\n  static split(...sources) {\n    const Species = this || Closures;\n    const Member = Species.Element || Closure;\n    const closures = [];\n    // TODO: Replace with sources.flat() for non-legacy\n    for (const source of [].concat(...sources)) {\n      if (!source) continue;\n      switch (typeof source) {\n        case 'object':\n          source instanceof Member\n            ? closures.push([source.opener, source])\n            : source instanceof Species\n            ? closures.push(...source)\n            : source['(closures)'] && typeof source['(closures)'] === 'string'\n            ? closures.push(...Closures.split(source['(closures)']))\n            : null;\n          break;\n        case 'string': {\n          for (const pair of source.split(Species.splitter || Closures.splitter)) {\n            if (!pair) continue;\n            const [opener, closer] = pair.split('…');\n            const closure = new Member(opener, closer);\n            closures.push([opener, closure]);\n          }\n          break;\n        }\n      }\n    }\n    return closures;\n  }\n\n  static inspect(closure, depth, {stylize = String, compact = false} = {}) {\n    let opener, openerType, closer, closerType;\n    return closure && 'opener' in closure && 'closer' in closure\n      ? `${stylize(\n          (openerType = typeof (opener = closure.opener)) === 'string' ? JSON.stringify(opener).slice(1, -1) : opener,\n          openerType,\n        )}\\u{25CC}${stylize(\n          (closerType = typeof (closer = closure.closer)) === 'string' ? JSON.stringify(closer).slice(1, -1) : closer,\n          closerType,\n        )}`\n      : stylize(`${closure}`, typeof closure);\n  }\n\n  get includes() {\n    Object.defineProperty(Closures.prototype, 'includes', Object.getOwnPropertyDescriptor(Map.prototype, 'has'));\n    return this.has;\n  }\n\n  set includes(value) {\n    this.includes = (this.includes, value);\n  }\n\n  [InspectSymbol](depth, {stylize = String, compact = false} = {}) {\n    try {\n      const depth = arguments[0] + 1;\n      const options = arguments[1];\n      let Species = (this && this.constructor) || Closures;\n      const {inspect = (Species = Closures).inspect} = Species;\n      return `${(this && this.constructor && this.constructor.name) || 'Closures'} ‹${Array.from(this.values())\n        .map(closure => Species.inspect(closure, depth, options))\n        .join('|')}›`;\n    } catch (exception) {\n      return super.toString(this);\n    }\n  }\n}\n\n/// TRAVERSING\n\nexport const previousTextFrom = (token, matcher) => {\n  const text = [];\n  if (matcher != null) {\n    if (matcher.test)\n      do token.text && text.push(token.text), (token = token.previous);\n      while (!token.text || !matcher.test(token.text));\n    else if (matcher.includes)\n      do token.text && text.push(token.text), (token = token.previous);\n      while (!token.text || !matcher.includes(token.text));\n    text.length && text.reverse();\n  }\n  return text.join('');\n};\n\n/// INDENTS\n\nexport const indenter = (indenting, tabs = 2) => {\n  let source = indenting;\n  const indent = new RegExp(raw`(?:\\t|${' '.repeat(tabs)})`, 'g');\n  const space = indent.source;\n  source = source.replace(/\\\\?(?=[\\(\\)\\:\\?\\[\\]])/g, '\\\\');\n  const [, lead, tail] = /^(\\s*.*?)(\\s*?)$/.exec(source);\n  return new RegExp(`^${lead.replace(indent, space)}(?:${tail.replace(indent, `${space}?`)})?`, 'm');\n};\n\n/** @typedef {string | RegExp} pattern */\n/** @typedef {SequenceExpression} sequence */\n/** @typedef {IdentifierExpression} pattern.identifier */\n","import {Symbols, Closures} from '../common/helpers.js';\n\nexport const css = Object.defineProperties(\n  ({syntax} = css.defaults) => ({\n    syntax,\n    comments: Closures.from('/*…*/'),\n    closures: Closures.from('{…} (…) […]'),\n    quotes: Symbols.from(`' \"`),\n    assigners: Symbols.from(`:`),\n    combinators: Symbols.from('> :: + :'),\n    nonbreakers: Symbols.from(`-`),\n    breakers: Symbols.from(', ;'),\n    matcher: /([\\s\\n]+)|(\\\\(?:(?:\\\\\\\\)*\\\\|[^\\\\\\s])?|\\/\\*|\\*\\/|\\(|\\)|\\[|\\]|\"|'|\\{|\\}|,|;|\\.|\\b:\\/\\/\\b|::\\b|:(?!active|after|any|any-link|backdrop|before|checked|default|defined|dir|disabled|empty|enabled|first|first-child|first-letter|first-line|first-of-type|focus|focus-visible|focus-within|fullscreen|host|hover|in-range|indeterminate|invalid|lang|last-child|last-of-type|left|link|matches|not|nth-child|nth-last-child|nth-last-of-type|nth-of-type|only-child|only-of-type|optional|out-of-range|read-only|required|right|root|scope|target|valid|visited))/g,\n    matchers: {\n      quote: /(\\n)|(\\\\(?:(?:\\\\\\\\)*\\\\|[^\\\\\\s])?|\\*\\/|`|\"|'|\\$\\{)/g,\n      comment: /(\\n)|(\\*\\/|\\b(?:[a-z]+\\:\\/\\/|\\w[\\w\\+\\.]*\\w@[a-z]+)\\S+|@[a-z]+)/gi,\n    },\n  }),\n  {\n    defaults: {value: {syntax: 'css'}},\n  },\n);\n","import {Closures, Symbols, raw} from '../common/helpers.js';\n\nexport const html = Object.defineProperties(\n  ({syntax} = html.defaults) => {\n    const html = {\n      syntax,\n      keywords: Symbols.from('DOCTYPE doctype'),\n      comments: Closures.from('<!--…-->'),\n      closures: Closures.from('<%…%> <!…> <…/> </…> <…>'),\n      quotes: [],\n      patterns: {\n        maybeKeyword: /^[a-z](\\w*)$/i,\n        closeTag: /<\\/\\w[^<>{}]*?>/g,\n        // maybeIdentifier: /^(?:(?:[a-z][\\-a-z]*)?[a-z]+\\:)?(?:[a-z][\\-a-z]*)?[a-z]+$/,\n      },\n      matcher: /([\\s\\n]+)|(\"|'|=|&#x?[a-f0-9]+;|&[a-z]+;|\\/?>|<%|%>|<!--|-->|<[\\/\\!]?(?=[a-z]+\\:?[a-z\\-]*[a-z]|[a-z]+))/gi,\n      matchers: {\n        quote: /(\\n)|(\\\\(?:(?:\\\\\\\\)*\\\\|[^\\\\\\s])|\"|')/g,\n        comment: /(\\n)|(-->)/g,\n      },\n    };\n\n    const DOCTAGS = Symbols.from('SCRIPT STYLE');\n    const TAG = /^[a-z]+$/i;\n    // TODO: Check if custom/namespace tags ever need special close logic\n    // const TAGLIKE = /^(?:(?:[a-z][\\-a-z]*)?[a-z]+\\:)?(?:[a-z][\\-a-z]*)?[a-z]+$/i;\n\n    const HTMLTagClosure = html.closures.get('<');\n\n    HTMLTagClosure.patterns = html.patterns;\n\n    HTMLTagClosure.close = (next, state, context) => {\n      const parent = next && next.parent;\n      const first = parent && parent.next;\n      const tag = first && first.text && TAG.test(first.text) && first.text.toUpperCase();\n\n      if (tag && DOCTAGS.includes(tag)) {\n        let {source, index} = state;\n        const $$matcher = html.patterns.closeTag;\n\n        let match;\n        $$matcher.lastIndex = index;\n\n        // TODO: Check if `<script>`…`</SCRIPT>` is still valid!\n        const $$closer = new RegExp(raw`^<\\/(?:${first.text.toLowerCase()}|${tag})\\b`);\n\n        let syntax = (tag === 'STYLE' && 'css') || '';\n\n        if (!syntax) {\n          const openTag = source.slice(parent.offset, index);\n          const match = /\\stype=.*?\\b(.+?)\\b/.exec(openTag);\n          syntax = tag === 'SCRIPT' && (!match || !match[1] || /^module$|javascript/i.test(match[1])) ? 'es' : '';\n        }\n\n        while ((match = $$matcher.exec(source))) {\n          if ($$closer.test(match[0])) {\n            if (syntax) {\n              return {offset: index, index: match.index, syntax};\n            } else {\n              const offset = index;\n              const text = source.slice(offset, match.index - 1);\n              state.index = match.index;\n              return [{text, offset, previous: next, parent}];\n            }\n          }\n        }\n      }\n    };\n    HTMLTagClosure.quotes = Symbols.from(`' \"`);\n    HTMLTagClosure.closer = /\\/?>/;\n\n    return html;\n  },\n  {\n    defaults: {value: {syntax: 'html', aliases: ['htm']}},\n  },\n);\n","import {previousTextFrom, indenter, Closures, sequence, all, raw} from '../common/helpers.js';\n\nexport const markdown = Object.defineProperties(\n  ({syntax} = defaults, {html}) => {\n    const EMBEDDED = true;\n    const matcher = ((...matchers) => {\n      let matcher = matchers[matchers.length - 1];\n      try {\n        matchers.push(\n          (matcher = sequence`${all(\n            sequence`(${markdown.WHITESPACE})`,\n            sequence`(${all(\n              markdown.ESCAPES,\n              markdown.ENTITIES,\n              markdown.RULES,\n              markdown.BLOCKS,\n              markdown.INLINES,\n              markdown.TYPOGRAPHS,\n              markdown.TAGS,\n              markdown.BRACKETS,\n              markdown.FENCES,\n              markdown.SPANS,\n            )})`,\n            markdown.INDICIES,\n            markdown.DECIMAL,\n            markdown.EXPONENTIAL,\n            markdown.FRAGMENTS,\n          )}${'/gim'}`),\n        );\n        return matcher;\n      } catch (exception) {\n        matchers.push(exception.message.replace(/.*Invalid regular expression: /, ''));\n        console.warn(exception);\n      }\n      matcher.matchers = matchers;\n      return matcher;\n    })(\n      /(^\\s+|\\n)|(&#x?[a-f0-9]+;|&[a-z]+;|(?:```+|\\~\\~\\~+|(?:--+|==+)(?=\\s*$)|(?:\\#{1,6}|\\-|\\b\\d+\\.|\\b[a-z]\\.|\\b[ivx]+\\.)(?=\\s+\\S*))|–|—|\"|'|=|\\/>|<%|%>|<!--|-->|<[\\/\\!]?(?=[a-z]+\\:?[a-z\\-]*[a-z]|[a-z]+)|<|>|\\(|\\)|\\[|\\]|__?|([*~`])\\3?\\b|(?:\\b|\\b\\B|\\B)([*~`])\\4?)|\\b[^\\n\\s\\[\\]\\(\\)\\<\\>&]*[^\\n\\s\\[\\]\\(\\)\\<\\>&_]\\b|[^\\n\\s\\[\\]\\(\\)\\<\\>&]+(?=__?\\b)|\\\\./gim,\n      sequence`(${markdown.WHITESPACE})|(${markdown.ENTITIES}|(?:${markdown.FENCES}|(?:${markdown.RULES})(?=\\s*$)|(?:${\n        markdown.BLOCKS\n      })(?=\\s+\\S*))|${markdown.TYPOGRAPHS}|${markdown.TAGS}|${markdown.BRACKETS}|${markdown.INLINES})|${\n        markdown.FRAGMENTS\n      }|${markdown.ESCAPES}${'/gim'}`,\n    );\n\n    const mode = {\n      syntax,\n      comments: Closures.from('<!--…-->'),\n      quotes: [],\n      closures: Closures.from(html.closures, markdown.CLOSURES),\n      operators: html.operators,\n      matcher: matcher,\n      spans: Closures.from('``…`` `…`'),\n      matchers: {comment: /(\\n)|(-->)/g},\n    };\n\n    const open = (parent, state, grouper) => {\n      const {source, index: start} = state;\n      const fence = parent.text;\n      const fencing = previousTextFrom(parent, '\\n');\n      const indenting = fencing.slice(fencing.indexOf('\\n') + 1, -fence.length) || '';\n      let end = source.indexOf(`\\n${fencing}`, start);\n      const INDENT = (indenting && indenter(indenting)) || /^/m;\n      const CLOSER = new RegExp(raw`^${INDENT.source.slice(1) || ''}${fence}`, 'mg');\n\n      CLOSER.lastIndex = start;\n      let closerMatch = CLOSER.exec(source);\n      if (closerMatch && closerMatch.index >= start) {\n        end = closerMatch.index;\n      } else {\n        const FENCE = new RegExp(raw`^[\\>\\|\\s]*${fence}`, 'mg');\n        FENCE.lastIndex = start;\n        const fenceMatch = FENCE.exec(source);\n        if (fenceMatch && fenceMatch.index >= start) {\n          end = fenceMatch.index;\n        } else return;\n      }\n\n      if (end > start) {\n        let offset = start;\n        let text, head, lines;\n\n        const body = source.slice(start, end) || '';\n        const tokens = [];\n        tokens.end = end;\n        if (!EMBEDDED) {\n          text = body;\n          tokens.push({text, type: 'code', offset, parent});\n          offset += body.length;\n        } else {\n          [head, ...lines] = body.split(/\\r?(\\n)\\r?/g);\n          if (head) {\n            tokens.push({text: head, type: 'comment', offset, parent}), (offset += head.length);\n          }\n          for (const line of lines) {\n            if (line === '\\n') {\n              text = line;\n              tokens.push({text, type: 'whitespace', offset, parent}), (offset += text.length);\n            } else {\n              const [indent] = INDENT.exec(line) || '';\n              const inset = (indent && indent.length) || 0;\n              if (inset) {\n                for (const text of indent.split(/(\\s+)/g)) {\n                  if (!text) continue;\n                  const type = (text.trim() && 'sequence') || 'whitespace';\n                  tokens.push({text, type, offset, parent});\n                  offset += text.length;\n                }\n                text = line.slice(inset) || '';\n              } else {\n                text = line;\n              }\n              if (text) {\n                tokens.push({text, type: 'code', offset, parent}), (offset += text.length);\n              }\n            }\n          }\n        }\n\n        if (tokens.length) {\n          const last = tokens[tokens.length - 1];\n          if (!last.text) tokens.pop();\n          return tokens;\n        }\n      }\n    };\n\n    {\n      const quotes = html.closures.get('<').quotes;\n      for (const opener of ['```', '~~~']) {\n        const FenceClosure = mode.closures.get(opener);\n        if (FenceClosure) {\n          FenceClosure.matcher = new RegExp(raw`/(\\s*\\n)|(${opener}(?=\\s|$)|^(?:[\\s>|]*\\s)?\\s*)|.*$`, 'gm');\n          FenceClosure.quotes = quotes;\n          FenceClosure.open = open;\n        }\n      }\n    }\n\n    return mode;\n  },\n  {\n    defaults: {get: () => ({...markdown.DEFAULTS})},\n  },\n);\n\nDefinitions: {\n  Defaults: {\n    markdown.DEFAULTS = {syntax: 'markdown', aliases: ['md'], requires: ['html']};\n  }\n\n  markdown.BLOCK = '```…``` ~~~…~~~';\n  markdown.INLINE = '[…] (…) *…* **…** _…_ __…__ ~…~ ~~…~~';\n  markdown.CLOSURES = `${markdown.BLOCK} ${markdown.INLINE}`;\n  markdown.WHITESPACE = /^\\s+|\\s+$|\\n+/;\n  markdown.ESCAPES = /\\\\./;\n  markdown.ENTITIES = /&#x?[a-f0-9]+;|&[a-z]+;/;\n  markdown.FENCES = /(?:\\x60{3,}|\\x7E{3,})(?=\\b| |$)/;\n  markdown.RULES = /(?:[\\-]{2,}|[=]{2,})(?=\\s*$)/;\n  markdown.BLOCKS = /(?:\\#{1,6}|\\-|\\b\\d+\\.|\\b[a-z]\\.|\\b[ivx]+\\.)(?=\\s+\\S)/;\n  markdown.TYPOGRAPHS = /\\B[\\–](?=\\ )|\"|'|=/;\n  markdown.TAGS = /\\/>|<%|%>|<!--|-->|<[\\/\\!]?(?=[a-z]+\\:?[a-z\\-]*[a-z]|[a-z]+)/;\n  markdown.BRACKETS = /<|>|\\(|\\)|\\[|\\]/;\n  markdown.INLINES = /\\b([*~_])(?:\\3\\b(?=[^\\n]*[^\\n\\s\\\\]\\3\\3)|\\b(?=[^\\n]*[^\\n\\s\\\\]\\3))|(?:\\b|\\b\\B|\\B)([*~_])\\4?/;\n  markdown.SPANS = /(``?(?![`\\n]))[^\\n]*?[^\\\\`\\n]\\5/;\n  markdown.INDICIES = /\\b(?:[\\da-zA-Z]+\\.)+[\\da-zA-Z]+\\.?/;\n  markdown.DECIMAL = /[+\\-]?\\d+(?:,\\d{3})*(?:\\.\\d+)?|[+\\-]?\\d*\\.\\d+/;\n  markdown.EXPONENTIAL = /\\d+[eE]\\-?\\d+|\\d+\\.\\d+[eE]\\-?\\d+/;\n  markdown.FRAGMENTS = /\\b[^\\n\\s\\[\\]\\(\\)\\<\\>&`\"]*[^\\n\\s\\[\\]\\(\\)\\<\\>&_`\"]\\b|[^\\n\\s\\[\\]\\(\\)\\<\\>&`\"]+(?=__?\\b)/;\n}\n","import {raw} from './helpers.js';\n\nexport const patterns = {\n  /** Basic latin Keyword like symbol (inteded to be extended) */\n  // maybeKeyword: /^[a-z]+$/i,\n};\n\n/** Entities used to construct patterns. */\nexport const entities = {\n  es: {\n    IdentifierStart: raw`_$\\p{ID_Start}`,\n    IdentifierPart: raw`_$\\u200c\\u200d\\p{ID_Continue}\\u034f`,\n  },\n};\n\n/** Interoperability (for some browsers)  TODO: Simplify */\n(Ranges => {\n  const transforms = [];\n\n  if (!supports(raw`\\p{ID_Start}`, 'u')) {\n    const UnicodePropertyEscapes = /\\\\p{ *(\\w+) *}/g;\n    UnicodePropertyEscapes.replace = (m, propertyKey) => {\n      if (propertyKey in Ranges) return Ranges[propertyKey].toString();\n      throw RangeError(`Cannot rewrite unicode property \"${propertyKey}\"`);\n    };\n    transforms.push(expression => {\n      let flags = expression && expression.flags;\n      let source = expression && `${expression.source || expression || ''}`;\n      source &&\n        UnicodePropertyEscapes.test(source) &&\n        (source = source.replace(UnicodePropertyEscapes, UnicodePropertyEscapes.replace));\n      return (flags && new RegExp(source, flags)) || source;\n    });\n  }\n\n  if (!transforms.length) return;\n\n  for (const key in entities) {\n    const sources = entities[key];\n    const changes = {};\n    for (const id in sources) {\n      let source = sources[id];\n      if (!source || typeof source !== 'string') continue;\n      for (const transform of transforms) source = transform(source);\n      !source || source === sources[id] || (changes[id] = source);\n    }\n    Object.assign(sources, changes);\n  }\n\n  // prettier-ignore\n  function supports() {try {return !!RegExp(... arguments)} catch (e) { }}\n})({\n  ID_Start: raw`a-zA-Z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7b9\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab65\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc`,\n  ID_Continue: raw`a-zA-Z0-9\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7b9\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab65\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f`,\n});\n","import {Closures, Symbols, identifier, sequence, all} from '../common/helpers.js';\nimport {patterns, entities} from '../common/patterns.js';\n\nexport const javascript = Object.defineProperties(\n  ({syntax} = defaults) => ({\n    syntax,\n    comments: Closures.from(javascript.COMMENTS),\n    quotes: Symbols.from(javascript.QUOTES),\n    closures: Closures.from(javascript.CLOSURES),\n    spans: {'`': Closures.from(javascript.SPANS['`'])},\n    keywords: Symbols.from(javascript.KEYWORDS),\n    assigners: Symbols.from(javascript.ASSIGNERS),\n    combinators: Symbols.from(javascript.COMBINATORS),\n    nonbreakers: Symbols.from(javascript.NONBREAKERS),\n    operators: Symbols.from(javascript.OPERATORS),\n    breakers: Symbols.from(javascript.BREAKERS),\n    patterns: {\n      ...patterns,\n      maybeIdentifier: identifier(entities.es.IdentifierStart, entities.es.IdentifierPart),\n      maybeKeyword: /^[a-z][a-zA-Z]+$/,\n      segments: {\n        regexp: /^\\/(?![\\n*+/?])[^\\n]*[^\\\\\\n]\\//,\n      },\n    },\n    matcher: sequence`([\\s\\n]+)|(${all(\n      javascript.REGEXPS,\n      javascript.COMMENTS,\n      javascript.QUOTES,\n      javascript.CLOSURES,\n      ...javascript.PUNCTUATORS,\n    )})`,\n    matchers: {\n      \"'\": /(\\n)|(')|(\\\\.)/g,\n      '\"': /(\\n)|(\")|(\\\\.)/g,\n      '`': /(\\n)|(`|\\$\\{)|(\\\\.)/g,\n      quote: /(\\n)|(`|\"|'|\\$\\{)|(\\\\.)/g,\n      comment: /(\\n)|(\\*\\/|\\b(?:[a-z]+\\:\\/\\/|\\w[\\w+.]*\\w@[a-z]+)\\S+|@[a-z]+)/gi,\n    },\n  }),\n  {\n    defaults: {get: () => ({...javascript.DEFAULTS})},\n  },\n);\n\nDefinitions: {\n  Defaults: {\n    javascript.DEFAULTS = {syntax: 'javascript', aliases: ['javascript', 'es', 'js', 'ecmascript']};\n  }\n\n  javascript.REGEXPS = /\\/(?=[^*/\\n][^\\n]*\\/(?:[a-z]+\\b|)(?:[ \\t]+[^\\n\\s\\(\\[\\{\\w]|[.\\[;,]|[ \\t]*[)\\]};,\\n]|\\n|$))(?:[^\\\\\\/\\n\\t\\[]+|\\\\[^\\n]|\\[(?:\\\\[^\\n]|[^\\\\\\n\\t\\]]+)*?\\][+*]?\\??)*\\/(?:[a-z]+\\b|)/g;\n\n  javascript.COMMENTS = /\\/\\/|\\/\\*|\\*\\/|^\\#\\!.*\\n|<!--/g;\n  javascript.COMMENTS['(closures)'] = '//…\\n /*…*/ <!--…\\n';\n\n  javascript.QUOTES = /`|\"|'/g;\n  javascript.QUOTES['(symbols)'] = `' \" \\``;\n\n  javascript.CLOSURES = /\\{|\\}|\\(|\\)|\\[|\\]/g;\n  javascript.CLOSURES['(closures)'] = '{…} (…) […]';\n\n  javascript.SPANS = {'`': {['(closures)']: '${…}'}};\n\n  javascript.KEYWORDS = {\n    ['(symbols)']:\n      // 'abstract enum interface package namespace declare type module public protected ' +\n      'arguments as async await break case catch class export const continue private debugger default delete do else export extends finally for from function get if import in instanceof let new of return set static super switch this throw try typeof var void while with yield',\n  };\n\n  javascript.PUNCTUATORS = [\n    /,|;|\\.\\.\\.|\\.|\\:|\\?|=>/,\n    /\\+\\+|\\+=|\\+|--|-=|-|\\*\\*=|\\*\\*|\\*=|\\*|\\/=|\\//,\n    /&&|&=|&|\\|\\||\\|=|\\||\\%=|\\%|\\^=|\\^|~=|~/,\n    /<<=|<<|<=|<|>>>=|>>>|>>=|>>|>=|>/,\n    /!==|!=|!|===|==|=/,\n  ];\n\n  javascript.ASSIGNERS = {['(symbols)']: '= += -= *= /= **= %= &= |= <<= >>= >>>= ^= ~='};\n\n  javascript.COMBINATORS = {['(symbols)']: '=== == + - * / ** % & && | || ! !== != > < >= <= => >> << >>> ^ ~'};\n  javascript.NONBREAKERS = {['(symbols)']: '.'};\n  javascript.OPERATORS = {['(symbols)']: '++ -- ... ? :'};\n  javascript.BREAKERS = {['(symbols)']: ', ;'};\n}\n","﻿import {javascript} from '../javascript/javascript-grammar.js';\nimport {Symbols, sequence, raw, all} from '../common/helpers.js';\n\nexport const typescript = Object.defineProperties(\n  ({syntax} = typescript.defaults, {javascript}) => ({\n    ...javascript,\n    keywords: Symbols.from(typescript.KEYWORDS),\n  }),\n  {\n    defaults: {get: () => ({...typescript.DEFAULTS})},\n  },\n);\n\nDefinitions: {\n  Defaults: {\n    typescript.DEFAULTS = {syntax: 'typescript', aliases: ['ts'], requires: [javascript.defaults.syntax]};\n  }\n  typescript.KEYWORDS = {\n    ['(symbols)']: `abstract enum interface namespace declare type module private public protected ${\n      javascript.KEYWORDS['(symbols)']\n    }`,\n  };\n}\n","import {javascript} from './javascript-grammar.js';\nimport {Symbols, sequence, raw, all} from '../common/helpers.js';\n\nexport const mjs = Object.defineProperties(\n  ({syntax} = mjs.defaults, {javascript: {quotes, closures, spans, matchers}}) => ({\n    syntax,\n    keywords: Symbols.from('import export default'),\n    quotes,\n    closures,\n    spans,\n    matcher: javascript.extended.MJS,\n    matchers: {quote: matchers.quote, closure: javascript.extended.CLOSURE},\n  }),\n  {\n    defaults: {get: () => ({...mjs.DEFAULTS})},\n  },\n);\n\nexport const cjs = Object.defineProperties(\n  ({syntax} = cjs.defaults, {javascript: {quotes, closures, spans, matchers}}) => ({\n    syntax,\n    keywords: Symbols.from('import module exports require'),\n    quotes,\n    closures,\n    spans,\n    matcher: javascript.extended.CJS,\n    matchers: {quote: matchers.quote, closure: javascript.extended.CLOSURE},\n  }),\n  {\n    defaults: {get: () => ({...cjs.DEFAULTS})},\n  },\n);\n\nexport const esx = Object.defineProperties(\n  ({syntax} = esx.defaults, {javascript: {quotes, closures, spans, matchers}, mjs, cjs}) => ({\n    syntax,\n    keywords: Symbols.from(mjs.keywords, cjs.keywords),\n    quotes,\n    closures,\n    spans,\n    matcher: javascript.extended.ESX,\n    matchers: {quote: matchers.quote, closure: javascript.extended.CLOSURE},\n  }),\n  {\n    defaults: {get: () => ({...esx.DEFAULTS})},\n  },\n);\n\nDefinitions: {\n  Defaults: {\n    const requires = [javascript.defaults.syntax];\n\n    mjs.DEFAULTS = {syntax: 'mjs', aliases: ['esm'], requires};\n    cjs.DEFAULTS = {syntax: 'cjs', requires};\n    esx.DEFAULTS = {syntax: 'esx', requires: [...requires, 'cjs', 'mjs']};\n  }\n\n  const {REGEXPS, CLOSURES, extended = (javascript.extended = {})} = javascript;\n\n  // TODO: Undo $ matching once fixed\n  const QUOTES = (javascript.extended.QUOTES = /`|\"(?:[^\\\\\"]+|\\\\.)*(?:\"|$)|'(?:[^\\\\']+|\\\\.)*(?:'|$)/g);\n  const COMMENTS = (javascript.extended.COMMENTS = /\\/\\/.*(?:\\n|$)|\\/\\*[^]*?(?:\\*\\/|$)|^\\#\\!.*\\n|<!--/g);\n  const STATEMENTS = (javascript.extended.STATEMENTS = all(QUOTES, CLOSURES, REGEXPS, COMMENTS));\n  const BLOCKLEVEL = (javascript.extended.BLOCKLEVEL = sequence`([\\s\\n]+)|(${STATEMENTS})`);\n  const TOPLEVEL = (javascript.extended.TOPLEVEL = sequence`([\\s\\n]+)|(${STATEMENTS})`);\n  javascript.extended.CLOSURE = sequence`(\\n+)|(${STATEMENTS})`;\n  javascript.extended.MJS = sequence`${TOPLEVEL}|\\bexport\\b|\\bimport\\b`;\n  javascript.extended.CJS = sequence`${BLOCKLEVEL}|\\bexports\\b|\\bmodule.exports\\b|\\brequire\\b|\\bimport(?=\\(|\\.)`;\n  javascript.extended.ESX = sequence`${BLOCKLEVEL}|\\bexports\\b|\\bimport\\b|\\bmodule.exports\\b|\\brequire\\b`;\n}\n","export * from './tokenizer.experimental.js';\nimport {Parser} from './tokenizer.experimental.js';\nimport {modes} from './extensions/extensions.js';\n\nexport {modes};\nexport default (() => {\n  const experimentalExtendedParser = Object.assign(new Parser(), {MODULE_URL: import.meta.url});\n  for (const id in modes) experimentalExtendedParser.register(modes[id]);\n  return experimentalExtendedParser;\n})();\n"],"names":[],"mappings":"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"}