{"version":3,"file":"tokenizer.browser.es.js","sources":["../../packages/pseudom/pseudo.js","../../packages/pseudom/native.js","../../packages/pseudom/pseudom.js","../../packages/grammars/common/helpers.js","../../packages/grammars/common/patterns.js","../../packages/tokenizer/extensions/helpers.js","../../packages/tokenizer/extensions/dom.js","../../packages/tokenizer/lib/grouping.js","../../packages/tokenizer/lib/tokenizer.js","../../packages/tokenizer/lib/parser.js","../../packages/tokenizer/lib/experimental/contextualizer.js","../../packages/tokenizer/lib/experimental/contexts.js","../../packages/tokenizer/lib/experimental/synthesizer.js","../../packages/tokenizer/lib/experimental/tokenizer.js","../../packages/tokenizer/tokenizer.experimental.js","../../packages/grammars/css/css-grammar.js","../../packages/grammars/html/html-grammar.js","../../packages/grammars/markdown/markdown-grammar.js","../../packages/grammars/javascript/javascript-grammar.js","../../packages/grammars/typescript/typescript-grammar.js","../../packages/grammars/javascript/javascript-extended-grammar.js","../../packages/tokenizer/tokenizer.experimental.extended.js","../../packages/tokenizer/lib/api.js","../../packages/tokenizer/browser/experimental.extended.js","../../../modules/matcher/matcher.js","../../experimental/es/ranges.js","../../experimental/es/definitions.js","../../experimental/es/helpers.js","../../experimental/es/matcher.js","../../experimental/matcher/helpers.js","../../experimental/matcher/matcher.js","../../experimental/es/playground.js","../../packages/tokenizer/browser/experimental.es.extended.js"],"sourcesContent":["const {assign, defineProperty} = Object;\n\nexport const document = void null;\n\nexport class Node {\n  get children() {\n    return defineProperty(this, 'children', {value: new Set()}).children;\n  }\n  get childElementCount() {\n    return (this.hasOwnProperty('children') && this.children.size) || 0;\n  }\n  get textContent() {\n    return (this.hasOwnProperty('children') && this.children.size && [...this.children].join('')) || '';\n  }\n  set textContent(text) {\n    this.hasOwnProperty('children') && this.children.size && this.children.clear();\n    text && this.children.add(new String(text));\n  }\n  appendChild(element) {\n    return element && this.children.add(element), element;\n  }\n  append(...elements) {\n    if (elements.length) for (const element of elements) element && this.children.add(element);\n  }\n  removeChild(element) {\n    element && this.hasOwnProperty('children') && this.children.size && this.children.delete(element);\n    return element;\n  }\n  remove(...elements) {\n    if (elements.length && this.hasOwnProperty('children') && this.children.size)\n      for (const element of elements) element && this.children.delete(element);\n  }\n}\n\nexport class Element extends Node {\n  get innerHTML() {\n    return this.textContent;\n  }\n  set innerHTML(text) {\n    this.textContent = text;\n  }\n  get outerHTML() {\n    let classList;\n    let {className, tag, innerHTML, dataset} = this;\n\n    className &&\n      (className = className.trim()) &&\n      ({\n        [className]: classList = (className &&\n          (Element.classLists[className] = [...new Set(className.split(/\\s+/g))].join(' '))) ||\n          '',\n      } = Element.classLists || (Element.classLists = Object.create(null)));\n\n    const openTag = [tag];\n\n    classList && openTag.push(`class=\"${classList}\"`);\n\n    if (dataset)\n      for (const [key, value] of Object.entries(dataset))\n        value == null || !key.trim || openTag.push(`data-${key}=${JSON.stringify(`${value}`)}`);\n\n    return `<${openTag.join(' ')}>${innerHTML || ''}</${tag}>`;\n  }\n\n  toString() {\n    return this.outerHTML;\n  }\n  toJSON() {\n    return this.toString();\n  }\n}\n\nexport class DocumentFragment extends Node {\n  toString() {\n    return this.textContent;\n  }\n  toJSON() {\n    return (this.childElementCount && [...this.children]) || [];\n  }\n  [Symbol.iterator]() {\n    return ((this.childElementCount && this.children) || '')[Symbol.iterator]();\n  }\n}\n\nexport class Text extends String {\n  toString() {\n    return encodeEntities(super.toString());\n  }\n}\n\nexport const createElement = (tag, properties, ...children) => {\n  const element = assign(new Element(), {\n    tag,\n    className: (properties && properties.className) || '',\n    properties,\n  });\n  children.length && defineProperty(element, 'children', {value: new Set(children)});\n  return element;\n};\n\nexport const createText = (content = '') => new Text(content);\nexport const encodeEntity = entity => `&#${entity.charCodeAt(0)};`;\nexport const encodeEntities = string => string.replace(/[\\u00A0-\\u9999<>\\&]/gim, encodeEntity);\nexport const createFragment = () => new DocumentFragment();\n","export const {document, Element, Node, Text, DocumentFragment} =\n  'object' === typeof self && (self || 0).window === self && self;\n\nexport const {createElement, createText, createFragment} = {\n  createElement: (tag, properties, ...children) => {\n    const element = document.createElement(tag);\n    properties && Object.assign(element, properties);\n    if (!children.length) return element;\n    if (element.append) {\n      while (children.length > 500) element.append(...children.splice(0, 500));\n      children.length && element.append(...children);\n    } else if (element.appendChild) {\n      for (const child of children) element.appendChild(child);\n    }\n    return element;\n  },\n\n  createText: (content = '') => document.createTextNode(content),\n\n  createFragment: () => document.createDocumentFragment(),\n};\n","import * as pseudo from './pseudo.js';\nimport * as dom from './native.js';\nexport {encodeEntity, encodeEntities} from './pseudo.js';\n\n// TEST: Trace for ESM testing\ntypeof process === 'object' && console.info('[ESM]: %o', import.meta.url);\n\nexport const native = dom.document && dom;\nexport const {createElement, createText, createFragment} = native || pseudo;\nexport {pseudo};\n","﻿/// Helpers\nexport const InspectSymbol = Symbol.for('nodejs.util.inspect.custom');\n\nexport const Null = Object.freeze(Object.create(null));\n\nexport const raw = String.raw;\n\nexport const RegExpFlags = /^\\/((?:g(?=[^g]*$)|i(?=[^i]*$)|m(?=[^m]*$)|s(?=[^s]*$)|u(?=[^u]*$)|y(?=[^y]*$))+)$|/;\n\nclass SequenceExpression extends RegExp {}\n\n/**\n * Create a sequence match expression from patterns.\n *\n * @type  {{(strings: TemplateStringsArray, ... patterns: pattern[]): sequence, (...patterns: pattern[]): sequence}}\n */\nexport const sequence = (...patterns) => (\n  patterns.length > 1 &&\n    (patterns.flags = RegExpFlags.exec(patterns[patterns.length - 1]).pop()) &&\n    (patterns[patterns.length - 1] = ''),\n  new SequenceExpression(Reflect.apply(raw, null, patterns.map(p => (p && p.source) || p || '')), patterns.flags || 'g')\n);\n\nclass IdentifierExpression extends RegExp {}\n\n/**\n * Create a maybeIdentifier test (ie [<first>][<other>]*) expression.\n *\n * @type {{(first: pattern, other: pattern, flags?: string, boundary?: unknown): pattern.identifier}}\n */\nexport const identifier = (first, other = first, flags = 'u', boundary = /yg/.test(flags) && '\\\\b') =>\n  new IdentifierExpression(`${boundary || '^'}[${first}][${other}]*${boundary || '$'}`, flags);\n\n/**\n * Create a sequence pattern from patterns.\n *\n * @param  {...Pattern} patterns\n */\nexport const all = (...patterns) => patterns.map(p => (p && p.exec ? p.source : p)).join('|');\n\n/// Symbols\n\nexport class Symbols extends Set {\n  static from(...sources) {\n    const Species = this || Symbols;\n    const symbols = (sources.length && Species.split(...sources)) || [];\n    return new Species(symbols);\n  }\n\n  static split(...sources) {\n    const Species = this || Symbols;\n    const symbols = [];\n    // TODO: Replace with sources.flat() for non-legacy\n    for (const source of [].concat(...sources)) {\n      source &&\n        (typeof source === 'string'\n          ? symbols.push(...source.split(/ +/))\n          : Symbol.iterator in source\n          ? symbols.push(...Species.split(...source))\n          : source['(symbols)'] && typeof source['(symbols)'] === 'string'\n          ? symbols.push(...Species.split(source['(symbols)']))\n          : null);\n    }\n    return symbols;\n  }\n\n  static inspect(symbol, depth, {stylize = String, compact = false} = {}) {\n    const type = typeof symbol;\n    return `${stylize(\n      type === 'symbol'\n        ? `Symbol(${symbol.description || ''})`\n        : type === 'string'\n        ? JSON.stringify(symbol).slice(1, -1)\n        : `${symbol}`,\n      type,\n    )}`;\n  }\n\n  get includes() {\n    Object.defineProperty(Symbols.prototype, 'includes', Object.getOwnPropertyDescriptor(Set.prototype, 'has'));\n    return this.has;\n  }\n  set includes(value) {\n    this.includes = (this.includes, value);\n  }\n\n  get(symbol) {\n    if (this.has(symbol)) return symbol;\n  }\n\n  [InspectSymbol](depth, {stylize = String, compact = false} = {}) {\n    try {\n      const depth = arguments[0] + 1;\n      const options = arguments[1];\n      let Species = (this && this.constructor) || Symbols;\n      const {inspect = (Species = Closures).inspect} = Species;\n      return `${(this && this.constructor && this.constructor.name) || 'Symbols'} ‹${Array.from(this.values())\n        .map(symbol => Species.inspect(symbol, depth, options))\n        .join('|')}›`;\n    } catch (exception) {\n      return super.toString(this);\n    }\n  }\n}\n/// Closures\n\nexport class Closure extends String {\n  constructor(opener, closer = opener) {\n    if (!opener || !closer) throw Error(`Cannot construct closure from \"${opener}\" … \"${closer}\"`);\n    super(`${opener}…${closer}`);\n    this.opener = opener;\n    this.closer = closer;\n  }\n\n  [InspectSymbol](depth, {stylize = String, compact = false} = {}) {\n    try {\n      const depth = arguments[0] + 1;\n      const options = arguments[1];\n      return `${(this && this.constructor && this.constructor.name) || 'Closure'} ‹${Closures.inspect(this)}›`;\n    } catch (exception) {\n      return `${this}`;\n    }\n  }\n}\n\nexport class Closures extends Map {\n  static get splitter() {\n    Object.defineProperty(Closures, 'splitter', {value: / *?([^ ]+…[^ ]+|[^ …]+) *?/});\n  }\n\n  static from(...sources) {\n    const Species = this || Closures;\n    const closures = (sources.length && Species.split(...sources)) || [];\n    return new Species(closures);\n  }\n  static split(...sources) {\n    const Species = this || Closures;\n    const Member = Species.Element || Closure;\n    const closures = [];\n    // TODO: Replace with sources.flat() for non-legacy\n    for (const source of [].concat(...sources)) {\n      if (!source) continue;\n      switch (typeof source) {\n        case 'object':\n          source instanceof Member\n            ? closures.push([source.opener, source])\n            : source instanceof Species\n            ? closures.push(...source)\n            : source['(closures)'] && typeof source['(closures)'] === 'string'\n            ? closures.push(...Closures.split(source['(closures)']))\n            : null;\n          break;\n        case 'string': {\n          for (const pair of source.split(Species.splitter || Closures.splitter)) {\n            if (!pair) continue;\n            const [opener, closer] = pair.split('…');\n            const closure = new Member(opener, closer);\n            closures.push([opener, closure]);\n          }\n          break;\n        }\n      }\n    }\n    return closures;\n  }\n\n  static inspect(closure, depth, {stylize = String, compact = false} = {}) {\n    let opener, openerType, closer, closerType;\n    return closure && 'opener' in closure && 'closer' in closure\n      ? `${stylize(\n          (openerType = typeof (opener = closure.opener)) === 'string' ? JSON.stringify(opener).slice(1, -1) : opener,\n          openerType,\n        )}\\u{25CC}${stylize(\n          (closerType = typeof (closer = closure.closer)) === 'string' ? JSON.stringify(closer).slice(1, -1) : closer,\n          closerType,\n        )}`\n      : stylize(`${closure}`, typeof closure);\n  }\n\n  get includes() {\n    Object.defineProperty(Closures.prototype, 'includes', Object.getOwnPropertyDescriptor(Map.prototype, 'has'));\n    return this.has;\n  }\n\n  set includes(value) {\n    this.includes = (this.includes, value);\n  }\n\n  [InspectSymbol](depth, {stylize = String, compact = false} = {}) {\n    try {\n      const depth = arguments[0] + 1;\n      const options = arguments[1];\n      let Species = (this && this.constructor) || Closures;\n      const {inspect = (Species = Closures).inspect} = Species;\n      return `${(this && this.constructor && this.constructor.name) || 'Closures'} ‹${Array.from(this.values())\n        .map(closure => Species.inspect(closure, depth, options))\n        .join('|')}›`;\n    } catch (exception) {\n      return super.toString(this);\n    }\n  }\n}\n\n/// TRAVERSING\n\nexport const previousTextFrom = (token, matcher) => {\n  const text = [];\n  if (matcher != null) {\n    if (matcher.test)\n      do token.text && text.push(token.text), (token = token.previous);\n      while (!token.text || !matcher.test(token.text));\n    else if (matcher.includes)\n      do token.text && text.push(token.text), (token = token.previous);\n      while (!token.text || !matcher.includes(token.text));\n    text.length && text.reverse();\n  }\n  return text.join('');\n};\n\n/// INDENTS\n\nexport const indenter = (indenting, tabs = 2) => {\n  let source = indenting;\n  const indent = new RegExp(raw`(?:\\t|${' '.repeat(tabs)})`, 'g');\n  const space = indent.source;\n  source = source.replace(/\\\\?(?=[\\(\\)\\:\\?\\[\\]])/g, '\\\\');\n  const [, lead, tail] = /^(\\s*.*?)(\\s*?)$/.exec(source);\n  return new RegExp(`^${lead.replace(indent, space)}(?:${tail.replace(indent, `${space}?`)})?`, 'm');\n};\n\n/** @typedef {string | RegExp} pattern */\n/** @typedef {SequenceExpression} sequence */\n/** @typedef {IdentifierExpression} pattern.identifier */\n","import {raw} from './helpers.js';\n\nexport const patterns = {\n  /** Basic latin Keyword like symbol (inteded to be extended) */\n  // maybeKeyword: /^[a-z]+$/i,\n};\n\n/** Entities used to construct patterns. */\nexport const entities = {\n  es: {\n    IdentifierStart: raw`_$\\p{ID_Start}`,\n    IdentifierPart: raw`_$\\u200c\\u200d\\p{ID_Continue}\\u034f`,\n  },\n};\n\n/** Interoperability (for some browsers)  TODO: Simplify */\n(Ranges => {\n  const transforms = [];\n\n  if (!supports(raw`\\p{ID_Start}`, 'u')) {\n    const UnicodePropertyEscapes = /\\\\p{ *(\\w+) *}/g;\n    UnicodePropertyEscapes.replace = (m, propertyKey) => {\n      if (propertyKey in Ranges) return Ranges[propertyKey].toString();\n      throw RangeError(`Cannot rewrite unicode property \"${propertyKey}\"`);\n    };\n    transforms.push(expression => {\n      let flags = expression && expression.flags;\n      let source = expression && `${expression.source || expression || ''}`;\n      source &&\n        UnicodePropertyEscapes.test(source) &&\n        (source = source.replace(UnicodePropertyEscapes, UnicodePropertyEscapes.replace));\n      return (flags && new RegExp(source, flags)) || source;\n    });\n  }\n\n  if (!transforms.length) return;\n\n  for (const key in entities) {\n    const sources = entities[key];\n    const changes = {};\n    for (const id in sources) {\n      let source = sources[id];\n      if (!source || typeof source !== 'string') continue;\n      for (const transform of transforms) source = transform(source);\n      !source || source === sources[id] || (changes[id] = source);\n    }\n    Object.assign(sources, changes);\n  }\n\n  // prettier-ignore\n  function supports() {try {return !!RegExp(... arguments)} catch (e) { }}\n})({\n  ID_Start: raw`a-zA-Z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7b9\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab65\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc`,\n  ID_Continue: raw`a-zA-Z0-9\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7b9\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab65\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f`,\n});\n","export {patterns, entities} from '../../grammars/common/patterns.js';\nexport * from '../../grammars/common/helpers.js';\n\n/// <reference lib=\"esnext.asynciterable\" />\n\nconst VOID = Symbol('[[Void]]');\n\n/**\n * @template T\n * @typedef {Promise<T> | T} async\n */\n\n/**\n * @template T\n * @typedef {{next(): async<IteratorResult<async<T>>>}} iterator\n */\n\n/**\n * @template T\n * @typedef {iterator<T> | {[Symbol.iterator](): iterator<T>}  | {[Symbol.asyncIterator](): iterator<T>}} iterable\n */\n\n/**\n * @template T, U\n * @param {iterable<T>} iterable\n * @param {(value: T) => U} ƒ\n */\nexport async function each(iterable, ƒ) {\n  const iterator =\n    (iterable && ('next' in iterable && typeof iterable.next === 'function' && iterable)) ||\n    ((Symbol.asyncIterator in iterable && iterable[Symbol.asyncIterator]()) ||\n      (Symbol.iterator in iterable && iterable[Symbol.iterator]()));\n  try {\n    if (iterator || typeof iterator.next === 'function') {\n      let result, done;\n      while (!done && (result = await iterator.next())) {\n        await ƒ(await result.value);\n        done = result.done;\n      }\n    }\n  } finally {\n    iterator &&\n      iterable !== iterator &&\n      'return' in iterator &&\n      typeof iterator.return === 'function' &&\n      iterator.return();\n  }\n}\n","import * as pseudom from '../../pseudom/pseudom.js';\nexport {encodeEntity, encodeEntities} from '../../pseudom/pseudom.js';\nimport {each} from './helpers.js';\n\n/// RUNTIME\n\n/** Uses lightweight proxy objects that can be serialized into HTML text */\nconst HTML_MODE = true;\n\nconst supported = !!pseudom.native;\nconst native = !HTML_MODE && supported;\nconst implementation = native ? pseudom.native : pseudom.pseudo;\nconst {createElement: Element, createText: Text, createFragment: Fragment} = implementation;\nconst Template = template =>\n  !supported || Template.supported === false\n    ? false\n    : Template.supported === true\n    ? document.createElement('template')\n    : (Template.supported = !!(\n        (template = document.createElement('template')) && 'HTMLTemplateElement' === (template.constructor || '').name\n      )) && template;\n\n/// IMPLEMENTATION\n\nclass MarkupRenderer {\n  constructor(options) {\n    // TODO: Consider making Renderer a thing\n    const {factory, defaults} = new.target;\n\n    const {SPAN = 'span', LINE = 'span', CLASS = 'markup', REFLOW = true} = {\n      ...defaults,\n      ...options,\n    };\n\n    this.renderers = {\n      line: factory(LINE, {className: `${CLASS} ${CLASS}-line`}),\n      // indent: factory(SPAN, {className: `${CLASS} ${CLASS}-indent whitespace`}),\n      inset: factory(SPAN, {className: `${CLASS} inset whitespace`}),\n      break: factory(SPAN, {className: `${CLASS} break whitespace`}),\n      // break: Text,\n      // whitespace: factory(SPAN, {className: `${CLASS} whitespace`}),\n      whitespace: Text,\n      text: factory(SPAN, {className: CLASS}),\n\n      // variable: factory('var', {className: `${CLASS} variable`}),\n      fault: factory(SPAN, {className: `${CLASS} fault`}),\n      keyword: factory(SPAN, {className: `${CLASS} keyword`}),\n      identifier: factory(SPAN, {className: `${CLASS} identifier`}),\n      quote: factory(SPAN, {className: `${CLASS} quote`}),\n\n      operator: factory(SPAN, {className: `${CLASS} punctuator operator`}),\n      assigner: factory(SPAN, {className: `${CLASS} punctuator operator assigner`}),\n      combinator: factory(SPAN, {className: `${CLASS} punctuator operator combinator`}),\n      punctuation: factory(SPAN, {className: `${CLASS} punctuator punctuation`}),\n\n      breaker: factory(SPAN, {className: `${CLASS} punctuator breaker`}),\n      opener: factory(SPAN, {className: `${CLASS} punctuator opener`}),\n      closer: factory(SPAN, {className: `${CLASS} punctuator closer`}),\n      span: factory(SPAN, {className: `${CLASS} punctuator span`}),\n      pattern: factory(SPAN, {className: `${CLASS} pattern`}),\n      sequence: factory(SPAN, {className: `${CLASS} sequence`}),\n      literal: factory(SPAN, {className: `${CLASS} literal`}),\n      // indent: factory(SPAN, {className: `${CLASS} sequence indent`}),\n      comment: factory(SPAN, {className: `${CLASS} comment`}),\n      // code: factory(SPAN, {className: `${CLASS}`}),\n    };\n\n    this.reflows = REFLOW;\n  }\n\n  async render(tokens, fragment) {\n    let logs, template, first, elements;\n    try {\n      fragment || (fragment = Fragment());\n      logs = fragment.logs; // || (fragment.logs = []);\n      elements = this.renderer(tokens);\n      if ((first = await elements.next()) && 'value' in first) {\n        template = Template();\n        if (!native && template && 'textContent' in fragment) {\n          logs && logs.push(`render method = 'text' in template`);\n          const body = [first.value];\n          first.done || (await each(elements, element => body.push(element)));\n          template.innerHTML = body.join('');\n          fragment.appendChild(template.content);\n        } else if ('push' in fragment) {\n          logs && logs.push(`render method = 'push' in fragment`);\n          fragment.push(first.value);\n          first.done || (await each(elements, element => fragment.push(element)));\n        } else if ('append' in fragment) {\n          logs && logs.push(`render method = 'append' in fragment`);\n          fragment.append(first.value);\n          first.done || (await each(elements, element => fragment.append(element)));\n        }\n      }\n      return fragment;\n    } finally {\n      template && (template.innerHTML = '');\n      template = fragment = logs = elements = first = null;\n    }\n  }\n\n  *renderer(tokens) {\n    const {renderers, reflows} = this;\n    let renderedLine, LineInset, lineInset, lineText, lineBreak, insetHint;\n    const createLine = reflows\n      ? () => (renderedLine = renderers.line())\n      : () => (renderedLine = renderers.line('', 'no-reflow'));\n    const emit = (renderer, text, type, hint) => {\n      (renderedLine || createLine()).appendChild((renderedLine.lastChild = renderer(text, hint || type)));\n    };\n    const emitInset = (text, hint) => emit(renderers.inset, text, 'inset', hint);\n    const emitBreak = hint => emit(renderers.break, '\\n', 'break', hint);\n    const Lines = /^/gm;\n\n    for (const token of tokens) {\n      if (!token || !token.text) continue;\n\n      let {type = 'text', text, inset, punctuator, breaks, hint} = token;\n      let renderer =\n        (punctuator && (renderers[punctuator] || (type && renderers[type]) || renderers.operator)) ||\n        (type && renderers[type]) ||\n        (type !== 'whitespace' && type !== 'break' && renderers.text) ||\n        Text;\n\n      // Normlize inset for { type != 'inset', inset = /\\s+/ }\n      if (reflows && breaks && type !== 'break') {\n        LineInset = void (inset = inset || '');\n        insetHint = `${hint || ''} in-${type || ''}`;\n        for (const line of text.split(Lines)) {\n          (lineInset = line.startsWith(inset)\n            ? line.slice(0, inset.length)\n            : line.match(LineInset || (LineInset = RegExp(`^${inset.replace(/./g, '$&?')}`)))[0]) &&\n            emitInset(lineInset, insetHint);\n\n          (lineText = lineInset ? line.slice(lineInset.length) : line) &&\n            ((lineText === '\\n'\n              ? ((lineBreak = lineText), (lineText = ''))\n              : lineText.endsWith('\\n')\n              ? ((lineBreak = '\\n'), (lineText = lineText.slice(0, lineText.endsWith('\\r\\n') ? -2 : -1)))\n              : !(lineBreak = '')) && emit(renderer, lineText, type, hint),\n            lineBreak && (emitBreak(), (renderedLine = void (yield renderedLine))));\n        }\n      } else {\n        // TODO: See if pseudom children can be optimized for WBR/BR clones\n        emit(renderer, text, type, hint);\n        type === 'break'\n          ? (renderedLine = void (yield renderedLine))\n          : type === 'whitespace' || renderedLine.appendChild(Element('wbr'));\n      }\n    }\n    renderedLine && (yield renderedLine);\n  }\n\n  /**\n   * @param {string} tag\n   * @param {Partial<HTMLElement>} [properties]\n   * @param {boolean} [unflattened]\n   */\n  static factory(tagName, elementProperties) {\n    const [tag, properties] = arguments;\n    return Object.defineProperties(\n      (content, hint) => {\n        typeof content === 'string' && (content = Text(content));\n        const element = content != null ? Element(tag, properties, content) : Element(tag, properties);\n        element &&\n          (hint = typeof hint === 'string' && `${element.className || ''} ${hint}`.trim()) &&\n          ((element.className = hint.split(/&#x[\\da-f];/i, 1)[0]), (element.dataset = {hint: hint.slice(6).trim()}));\n        return element;\n      },\n      {\n        // flatten: {\n        //   value: !arguments[2] || (/\\bunflatten\\b/i.test(arguments[2]) ? false : /\\bflatten\\b/i.test(arguments[2])),\n        // },\n      },\n    );\n  }\n}\n\nMarkupRenderer.defaults = Object.freeze({\n  /** Tag name of the element to use for rendering a token. */\n  SPAN: 'span',\n  /** Tag name of the element to use for grouping tokens in a single line. */\n  LINE: 'span',\n  /** The class name of the element to use for rendering a token. */\n  CLASS: 'markup',\n  /** Enable renderer-side unpacking { inset } || { breaks > 0 } tokens */\n  REFLOW: true,\n});\n\n/// INTERFACE\n\nexport default new MarkupRenderer();\n","const {defineProperty} = Object;\n\nconst setProperty = (target, property, value, enumerable = true, configurable = true) =>\n  defineProperty(target, property, {value, enumerable, configurable}) && value;\n\n/** @typedef {import('./types').Grouping} Grouping */\n/** @typedef {import('./types').Tokenizer} Tokenizer */\n/** @typedef {import('./types').Token} Token */\n/** @typedef {import('./types')['Tokenizer']} TokenizerClass */\n/** @typedef {{[name: string]: Grouping}} Groupers */\n/** @typedef {(TokenizerClass)['createGrouper']} createGrouper */\n\nexport class Grouping {\n  /**\n   * @param {{syntax: string, groupers: Groupers, createGrouper: createGrouper}} options\n   */\n  constructor({syntax, groupers, createGrouper, contextualizer}) {\n    this.groupers = groupers;\n    this.groupings = [];\n    this.hints = new Set();\n    this.syntax = syntax;\n    this.goal = syntax;\n    this.hint = syntax;\n    this.contextualizer = contextualizer;\n    this.context = syntax;\n    this.create = createGrouper || Object;\n  }\n\n  /**\n   * @param {Token} next\n   * @param {Token} parent\n   * @param state\n   * @param context\n   */\n  close(next, state, context) {\n    let after, grouper, parent;\n    const {groupings, hints, syntax} = this;\n\n    const closed = groupings.pop();\n    grouper = closed;\n    groupings.includes(grouper) || hints.delete(grouper.hinter);\n\n    (closed.punctuator === 'opener' && (next.punctuator = 'closer')) ||\n      (closed.punctuator && (next.punctuator = closed.punctuator));\n\n    after = grouper.close && grouper.close(next, state, context);\n\n    const previousGrouper = (grouper = groupings[groupings.length - 1]);\n\n    this.goal = (previousGrouper && previousGrouper.goal) || syntax;\n    this.grouper = previousGrouper;\n\n    parent = (next.parent && next.parent.parent) || undefined;\n\n    return {after, grouper, closed, parent};\n  }\n\n  open(next, context) {\n    let opened, parent, grouper;\n\n    const {groupers, groupings, hints, hint, syntax} = this;\n    let {punctuator, text} = next;\n    const hinter = punctuator ? `${syntax}-${punctuator}` : hint;\n    const group = `${hinter},${text}`;\n\n    grouper = groupers[group];\n\n    const {\n      mode: {matchers, comments, spans, closures},\n    } = context;\n\n    if (context.spans && punctuator === 'span') {\n      const span = context.spans.get(text);\n      punctuator = next.punctuator = 'span';\n      opened =\n        grouper ||\n        this.create({\n          syntax,\n          goal: syntax,\n          span,\n          matcher: span.matcher || (matchers && matchers.span) || undefined,\n          spans: (spans && spans[text]) || undefined,\n          hinter,\n          punctuator,\n        });\n    } else if (context.punctuator !== 'quote') {\n      if (punctuator === 'quote') {\n        opened =\n          grouper ||\n          this.create({\n            syntax,\n            goal: punctuator,\n            quote: text,\n            matcher: (matchers && matchers.quote) || undefined,\n            spans: (spans && spans[text]) || undefined,\n            hinter,\n            punctuator,\n          });\n      } else if (punctuator === 'comment') {\n        const comment = comments.get(text);\n        opened =\n          grouper ||\n          this.create({\n            syntax,\n            goal: punctuator,\n            comment,\n            matcher: comment.matcher || (matchers && matchers.comment) || undefined,\n            hinter,\n            punctuator,\n          });\n      } else if (punctuator === 'closure') {\n        const closure = (grouper && grouper.closure) || closures.get(text);\n        punctuator = next.punctuator = 'opener';\n        closure &&\n          (opened =\n            grouper ||\n            this.create({\n              syntax,\n              goal: syntax,\n              closure,\n              matcher: closure.matcher || (matchers && matchers.closure) || undefined,\n              hinter,\n              punctuator,\n            }));\n      }\n    }\n\n    if (opened) {\n      groupers[group] || (groupers[group] = grouper = opened);\n      groupings.push(grouper), hints.add(hinter);\n      this.goal = (grouper && grouper.goal) || syntax;\n      parent = next;\n    }\n\n    return {grouper, opened, parent, punctuator};\n  }\n}\n","import {Grouping} from './grouping.js';\n\n/** Tokenizer for a single mode (language) */\nexport class Tokenizer {\n  constructor(mode, defaults) {\n    this.mode = mode;\n    this.defaults = defaults || this.constructor.defaults || undefined;\n  }\n\n  /** Token generator from source using tokenizer.mode (or defaults.mode) */\n  *tokenize(source, state = {}) {\n    let done;\n\n    // TODO: Consider supporting Symbol.species\n    const Species = this.constructor;\n\n    // Local context\n    const contextualizer = this.contextualizer || (this.contextualizer = Species.contextualizer(this));\n    let context = contextualizer.next().value;\n\n    const {mode, syntax, createGrouper = Species.createGrouper || Object} = context;\n\n    // Local grouping\n    const groupers = mode.groupers || (mode.groupers = {});\n    const grouping =\n      state.grouping ||\n      (state.grouping = new Grouping({\n        syntax: syntax || mode.syntax,\n        groupers,\n        createGrouper,\n        contextualizer,\n      }));\n\n    // Local matching\n    let {match, index = 0, flags} = state;\n\n    // Local tokens\n    let previousToken, lastToken, parentToken;\n    const top = {type: 'top', text: '', offset: index};\n\n    // let lastContext = context;\n    state.context = context;\n\n    state.source = source;\n\n    const tokenize = state.tokenize || (text => [{text}]);\n\n    while (!done) {\n      const {\n        mode: {syntax, matchers, comments, spans, closures},\n        punctuator: $$punctuator,\n        closer: $$closer,\n        spans: $$spans,\n        matcher: $$matcher,\n        token,\n        forming = true,\n      } = context;\n\n      // Current contextual hint (syntax or hint)\n      const hint = grouping.hint;\n\n      while (state.context === (state.context = context)) {\n        let next;\n\n        // state.lastToken = lastToken;\n\n        const lastIndex = state.index || 0;\n\n        $$matcher.lastIndex = lastIndex;\n        match = state.match = $$matcher.exec(source);\n        done = index === (index = state.index = $$matcher.lastIndex) || !match;\n\n        if (done) break;\n\n        // Current contextual match\n        const {0: text, 1: whitespace, 2: sequence, index: offset} = match;\n\n        // Current quasi-contextual fragment\n        const pre = source.slice(lastIndex, offset);\n        pre &&\n          ((next = token({\n            type: 'pre',\n            text: pre,\n            offset: lastIndex,\n            previous: previousToken,\n            parent: parentToken,\n            hint,\n            last: lastToken,\n            source,\n          })),\n          yield (previousToken = next));\n\n        // Current contextual fragment\n        const type = (whitespace && 'whitespace') || (sequence && 'sequence') || 'text';\n        next = token({type, text, offset, previous: previousToken, parent: parentToken, hint, last: lastToken, source});\n\n        // Current contextual punctuator (from sequence)\n        const closing =\n          $$closer &&\n          ($$closer.test ? $$closer.test(text) : $$closer === text || (whitespace && whitespace.includes($$closer)));\n\n        let after;\n        let punctuator = next.punctuator;\n\n        if (punctuator || closing) {\n          let closed, opened, grouper;\n\n          if (closing) {\n            ({after, closed, parent: parentToken = top, grouper} = grouping.close(next, state, context));\n          } else if ($$punctuator !== 'comment') {\n            ({grouper, opened, parent: parentToken = top, punctuator} = grouping.open(next, context));\n          }\n\n          state.context = grouping.context = grouping.goal || syntax;\n\n          if (opened || closed) {\n            next.type = 'punctuator';\n            context = contextualizer.next((state.grouper = grouper || undefined)).value;\n            grouping.hint = `${[...grouping.hints].join(' ')} ${grouping.context ? `in-${grouping.context}` : ''}`;\n            opened && (after = opened.open && opened.open(next, state, context));\n          }\n        }\n\n        // Current contextual tail token (yield from sequence)\n        yield (previousToken = next);\n\n        // Next reference to last contextual sequence token\n        next && !whitespace && forming && (lastToken = next);\n\n        if (after) {\n          let tokens, token, nextIndex;\n\n          if (after.syntax) {\n            const {syntax, offset, index} = after;\n            const body = index > offset && source.slice(offset, index - 1);\n            if (body) {\n              body.length > 0 &&\n                ((tokens = tokenize(body, {options: {sourceType: syntax}}, this.defaults)), (nextIndex = index));\n              const hint = `${syntax}-in-${mode.syntax}`;\n              token = token => ((token.hint = `${(token.hint && `${token.hint} `) || ''}${hint}`), token);\n            }\n          } else if (after.length) {\n            const hint = grouping.hint;\n            token = token => ((token.hint = `${hint} ${token.type || 'code'}`), context.token(token));\n            (tokens = after).end > state.index && (nextIndex = after.end);\n          }\n\n          if (tokens) {\n            for (const next of tokens) {\n              previousToken && ((next.previous = previousToken).next = next);\n              token && token(next);\n              yield (previousToken = next);\n            }\n            nextIndex > state.index && (state.index = nextIndex);\n          }\n        }\n      }\n    }\n    flags && flags.debug && console.info('[Tokenizer.tokenize‹state›]: %o', state);\n  }\n\n  /**\n   * Tokenizer context generator\n   */\n  static *contextualizer(tokenizer) {\n    // Local contextualizer state\n    let grouper;\n\n    // Tokenizer mode\n    const mode = tokenizer.mode;\n    const defaults = tokenizer.defaults;\n    mode !== undefined || (mode = (defaults && defaults.mode) || undefined);\n    if (!mode) throw ReferenceError(`Tokenizer.contextualizer invoked without a mode`);\n\n    // TODO: Refactoring\n    const initialize = context => {\n      let {\n        tokenizer = (context.tokenizer = this.tokenizer(context)),\n        token = (context.token = (tokenizer => (tokenizer.next(), token => tokenizer.next(token).value))(tokenizer)),\n      } = context;\n      return context;\n    };\n\n    if (!mode.context) {\n      const {\n        matcher = (mode.matcher = (defaults && defaults.matcher) || undefined),\n        quotes,\n        punctuators = (mode.punctuators = {aggregators: {}}),\n        punctuators: {aggregators = (punctuators.aggregators = {})},\n        patterns: {\n          maybeKeyword = (mode.patterns.maybeKeyword =\n            (defaults && defaults.patterns && defaults.patterns.maybeKeyword) || undefined),\n        } = (mode.patterns = {maybeKeyword: null}),\n        spans: {['(spans)']: spans} = (mode.spans = {}),\n      } = mode;\n\n      initialize((mode.context = {mode, punctuators, aggregators, matcher, quotes, spans}));\n    }\n\n    const {\n      syntax: $syntax,\n      matcher: $matcher,\n      quotes: $quotes,\n      punctuators: $punctuators,\n      punctuators: {aggregators: $aggregators},\n    } = mode;\n\n    while (true) {\n      if (grouper !== (grouper = yield (grouper && grouper.context) || mode.context) && grouper && !grouper.context) {\n        const {\n          goal = (grouper.syntax = $syntax),\n          punctuator,\n          punctuators = (grouper.punctuators = $punctuators),\n          aggregators = (grouper.aggregate = $aggregators),\n          closer,\n          spans,\n          matcher = (grouper.matcher = $matcher),\n          quotes = (grouper.quotes = $quotes),\n          forming = (grouper.forming = goal === $syntax),\n        } = grouper;\n\n        initialize(\n          (grouper.context = {\n            mode,\n            punctuator,\n            punctuators,\n            aggregators,\n            closer,\n            spans,\n            matcher,\n            quotes,\n            forming,\n          }),\n        );\n      }\n    }\n  }\n\n  static *tokenizer(context) {\n    let done, next;\n\n    const {\n      mode: {syntax, keywords, assigners, operators, combinators, nonbreakers, comments, closures, breakers, patterns},\n      punctuators,\n      aggregators,\n      spans,\n      quotes,\n      forming = true,\n    } = context;\n\n    const {maybeIdentifier, maybeKeyword, segments} = patterns || false;\n    const wording = keywords || maybeIdentifier ? true : false;\n\n    const matchSegment =\n      segments &&\n      (segments[Symbol.match] ||\n        (!(Symbol.match in segments) &&\n          (segments[Symbol.match] = (segments => {\n            const sources = [];\n            const names = [];\n            for (const name of Object.getOwnPropertyNames(segments)) {\n              const segment = segments[name];\n              if (segment && segment.source && !/\\\\\\d/.test(segment.source)) {\n                names.push(name);\n                sources.push(segment.source.replace(/\\\\?\\((.)/g, (m, a) => (m[0] !== '\\\\' && a !== '?' && '(?:') || m));\n              }\n            }\n            const {length} = names;\n            if (!length) return false;\n            const matcher = new RegExp(`(${sources.join('|)|(')}|)`, 'u');\n            return text => {\n              // OR: for (const segment of names) if (segments[segment].test(text)) return segment;\n              const match = matcher.exec(text);\n              if (match[0]) for (let i = 1, n = length; n--; i++) if (match[i]) return names[i - 1];\n            };\n          })(segments))));\n\n    const LineEndings = /$/gm;\n    const punctuate = text =>\n      (nonbreakers && nonbreakers.includes(text) && 'nonbreaker') ||\n      (operators && operators.includes(text) && 'operator') ||\n      (comments && comments.includes(text) && 'comment') ||\n      (spans && spans.includes(text) && 'span') ||\n      (quotes && quotes.includes(text) && 'quote') ||\n      (closures && closures.includes(text) && 'closure') ||\n      (breakers && breakers.includes(text) && 'breaker') ||\n      false;\n    const aggregate = text =>\n      (assigners && assigners.includes(text) && 'assigner') ||\n      (combinators && combinators.includes(text) && 'combinator') ||\n      false;\n\n    while (!done) {\n      let token;\n\n      if (next && next.text) {\n        const {text, type, hint, previous, parent, last} = next;\n\n        if (type === 'sequence') {\n          ((next.punctuator =\n            (previous && (aggregators[text] || (!(text in aggregators) && (aggregators[text] = aggregate(text))))) ||\n            (punctuators[text] || (!(text in punctuators) && (punctuators[text] = punctuate(text)))) ||\n            undefined) &&\n            (next.type = 'punctuator')) ||\n            (matchSegment &&\n              (next.type = matchSegment(text)) &&\n              (next.hint = `${(hint && `${hint} `) || ''}${next.type}`)) ||\n            (next.type = 'sequence');\n        } else if (type === 'whitespace') {\n          next.breaks = text.match(LineEndings).length - 1;\n        } else if (forming && wording) {\n          const word = text.trim();\n          word &&\n            ((keywords &&\n              keywords.includes(word) &&\n              (!last || last.punctuator !== 'nonbreaker' || (previous && previous.breaks > 0)) &&\n              (next.type = 'keyword')) ||\n              (maybeIdentifier && maybeIdentifier.test(word) && (next.type = 'identifier')));\n        } else {\n          next.type = 'text';\n        }\n\n        previous && (previous.next = next) && (parent || (next.parent = previous.parent));\n\n        token = next;\n      }\n\n      next = yield token;\n    }\n  }\n\n  static createGrouper({\n    syntax,\n    goal = syntax,\n    quote,\n    comment,\n    closure,\n    span,\n    grouping = comment || closure || span || undefined,\n    punctuator,\n    spans = (grouping && grouping.spans) || undefined,\n    matcher = (grouping && grouping.matcher) || undefined,\n    quotes = (grouping && grouping.quotes) || undefined,\n    punctuators = {aggregators: {}},\n    opener = quote || (grouping && grouping.opener) || undefined,\n    closer = quote || (grouping && grouping.closer) || undefined,\n    hinter,\n    open = (grouping && grouping.open) || undefined,\n    close = (grouping && grouping.close) || undefined,\n  }) {\n    return {syntax, goal, punctuator, spans, matcher, quotes, punctuators, opener, closer, hinter, open, close};\n  }\n}\n","import {Tokenizer} from './tokenizer.js';\n\nexport const TOKENIZERS = 'tokenizers';\nexport const MAPPINGS = 'mappings';\nexport const MODES = 'modes';\n\nconst none = {\n  syntax: 'markup',\n  matcher: /([\\s\\n]+)|(\\\\(?:(?:\\\\\\\\)*\\\\|[^\\\\\\s])?|\\/\\/+|\\/\\*+|\\*+\\/|\\(|\\)|\\[|\\]|,|;|\\.\\.\\.|\\.|\\b:\\/\\/\\b|::|:|\\?|`|\"|'|\\$\\{|\\{|\\}|=>|<\\/|\\/>|\\++|\\-+|\\*+|&+|\\|+|=+|!={0,3}|<{1,3}=?|>{1,2}=?)|[+\\-*/&|^%<>~!]=?/g,\n};\n\nconst define = (instance, property, value, options) => {\n  if (!instance.hasOwnProperty(property))\n    return (\n      Object.defineProperty(instance, property, {\n        value,\n        writable: (options && options.writable === true) || false,\n        configurable: (options && options.configurable === true) || false,\n        enumerable: !options || options.enumerable === true,\n      }),\n      value\n    );\n};\n\nconst EmptyTokenArray = (EmptyTokenArray =>\n  Object.freeze(\n    new (Object.freeze(Object.freeze(Object.setPrototypeOf(EmptyTokenArray.prototype, null)).constructor, null))(),\n  ))(\n  class EmptyTokenArray {\n    *[Symbol.iterator]() {}\n  },\n);\n\nexport class Parser {\n  constructor(options) {\n    if (options) {\n      const {mode, tokenizer, url, modes} = options;\n      if (mode) {\n        this.register((this.mode = mode));\n        tokenizer && this[TOKENIZERS].set(mode, tokenizer);\n      }\n      if (modes) for (const id in modes) this.register(modes[id]);\n      url && (this.MODULE_URL = url);\n    }\n  }\n\n  /**\n   * @param source {string}\n   * @param state {{sourceType?: string}}\n   */\n  tokenize(source, state = {}) {\n    const {\n      options: {\n        sourceType,\n        mode = (state.options.mode = (sourceType && this.get(sourceType)) || this.mode || none),\n      } = (state.options = {}),\n    } = state;\n    let tokenizer = mode && this[TOKENIZERS].get(mode);\n    if (!source || !mode) return EmptyTokenArray;\n    !tokenizer && this[TOKENIZERS].set(mode, (tokenizer = new Tokenizer(mode)));\n    state.parser = this;\n    state.tokenize = (this.hasOwnProperty('tokenize') && this.tokenize) || (this.tokenize = this.tokenize.bind(this));\n    return tokenizer.tokenize(source, state);\n  }\n\n  get [TOKENIZERS]() {\n    return define(this, TOKENIZERS, new WeakMap());\n  }\n  get [MAPPINGS]() {\n    return define(this, MAPPINGS, Object.create(null));\n  }\n\n  get [MODES]() {\n    return define(this, MODES, Object.create(null));\n  }\n\n  get(id = 'default') {\n    const {[MAPPINGS]: mappings, [MODES]: modes} = this;\n    if (id in modes) return modes[id];\n    let mapping = mappings[id];\n    !mapping || mapping.syntax === id || (mapping = mappings[mapping.syntax]);\n    if (mapping) {\n      const {syntax, mode, factory, options} = mapping;\n      if (mode) {\n        return (modes[id] = mode);\n      }\n      if (factory) {\n        if (options.requires && options.requires.length > 0) {\n          const list = [];\n          for (const id of options.requires) id in modes || this.get(id) || list.push(id);\n          if (list.length) {\n            list.length > 1 && list.push(list.splice(-2, 2).join(' and '));\n            throw Error(`Cannot initialize \"${syntax}\" which requires the list mode(s): ${list.join(', ')}`);\n          }\n        }\n        return (mapping.mode = modes[id] = factory(options, modes));\n      }\n    }\n  }\n\n  /** @param {ModeFactory | Mode} mode @param {ModeOptions} [options] */\n  register(mode, options) {\n    if (!this[MAPPINGS]) return;\n\n    const {[MAPPINGS]: mappings, [MODES]: modes} = this;\n    const factory = typeof mode === 'function' && mode;\n    const {syntax, aliases = (options.aliases = []), preregister, tokenizer} = ({\n      syntax: options.syntax = mode.syntax,\n    } = options = {\n      syntax: undefined,\n      ...(factory ? factory.defaults : mode),\n      ...options,\n    });\n\n    if (!syntax || typeof syntax !== 'string') {\n      throw TypeError(`Cannot register \"${syntax}\" since it not valid string'`);\n    }\n\n    if (preregister) {\n      preregister(this);\n    }\n\n    if (mappings[syntax]) {\n      if (factory ? factory === mappings[syntax].factory : mode === modes[syntax]) return;\n      throw ReferenceError(`Cannot register \"${syntax}\" since it is already registered`);\n    }\n\n    const ids = [syntax];\n\n    if (aliases && aliases.length > 0) {\n      for (const alias of aliases) {\n        const mapping = mappings[alias];\n        if (!alias || typeof alias !== 'string') {\n          throw TypeError(`Cannot register \"${syntax}\" since it's alias \"${alias}\" not valid string'`);\n        }\n\n        if (alias in modes || (mapping && (mapping.syntax === alias || mapping.syntax[0] === alias[0]))) {\n          continue;\n        }\n\n        if (mapping) {\n          Object.defineProperty(mappings, alias, {writable: true, configurable: true});\n          delete mappings[alias];\n          ids.push(alias);\n        }\n\n        ids.push(alias);\n      }\n    }\n\n    const mapping = factory ? {syntax, factory, options} : {syntax, mode, options};\n    const descriptor = {value: mapping, writable: false, configurable: true};\n\n    for (const id of ids) Object.defineProperty(mappings, id, descriptor);\n\n    if (tokenizer) this[TOKENIZERS].set(mode, tokenizer);\n  }\n\n  unregister(id) {\n    const {[MAPPINGS]: mappings, [MODES]: modes} = this;\n    if (id in modes) {\n      throw ReferenceError(`Cannot unregister \"${id}\" since it's already been bootstrapped for use.`);\n    }\n    Object.defineProperty(mappings, id, {writable: true, configurable: true});\n    delete mappings[id];\n  }\n\n  /** @param {string} mode @param {string[]} requires */\n  requires(mode, requires) {\n    const missing = [];\n    for (const mode of requires) {\n      mode in this[MAPPINGS] || missing.push(`\"${mode}\"`);\n    }\n    if (!missing.length) return;\n    throw Error(`Cannot initialize \"${mode}\" which requires the missing mode(s): ${missing.join(', ')}`);\n  }\n}\n\n/**\n * @typedef { Partial<{syntax: string, matcher: RegExp, [name:string]: Set | Map | {[name:string]: Set | Map | RegExp} }> } Mode\n * @typedef { {[name: string]: Mode} } Modes\n * @typedef { {[name: string]: {syntax: string} } } Mappings\n * @typedef { {aliases?: string[], syntax: string} } ModeOptions\n * @typedef { (options: ModeOptions, modes: Modes) => Mode } ModeFactory\n */\n","﻿/** Shared context state handler for token generator instances  */\nexport class Contextualizer {\n  constructor(tokenizer) {\n    // Local contextualizer state\n    let definitions, context;\n\n    // Tokenizer mode\n    const {defaults = {}, mode = defaults.mode, initializeContext} = tokenizer;\n\n    if (!mode) throw Error(`Contextualizer constructed without a mode`);\n\n    const prime = next => (\n      definitions !== next &&\n        next &&\n        ((context = mappings.get((definitions = next))) ||\n          ((context = this.contextualize(definitions)),\n          initializeContext && apply(initializeContext, tokenizer, [context]))),\n      (next != null && context) || ((definitions = mode), (context = root))\n    );\n\n    Object.defineProperties(this, {\n      mode: {value: mode, writable: false},\n      prime: {value: prime, writable: false},\n    });\n\n    // Eagerly contextualize \"root\" definitions on first use\n    if (!(context = mappings.get((definitions = mode)))) {\n      const {\n        // Parent goal\n        syntax,\n        matcher = (mode.matcher = (defaults && defaults.matcher) || undefined),\n        quotes,\n        punctuators = (mode.punctuators = {aggregators: {}}),\n        punctuators: {aggregators = (punctuators.aggregators = {})},\n        patterns = (mode.patterns = {maybeKeyword: null}),\n        patterns: {\n          maybeKeyword = (patterns.maybeKeyword =\n            (defaults && defaults.patterns && defaults.patterns.maybeKeyword) || undefined),\n        },\n        spans: {['(spans)']: spans} = (mode.spans = {}),\n      } = mode;\n\n      context = {syntax, goal: syntax, mode, punctuators, aggregators, matcher, quotes, spans};\n\n      initializeContext && apply(initializeContext, tokenizer, [context]);\n\n      mappings.set(mode, context);\n    }\n\n    const root = context;\n  }\n\n  contextualize(definitions) {\n    const mode = this.mode;\n\n    const {\n      // Parent goal\n      syntax = (definitions.syntax = mode.syntax),\n\n      // Lexical goal\n      goal = (definitions.goal = syntax),\n\n      // Assumes shared parent and unrelated production lexicons\n      punctuators = (definitions.punctuators = goal === syntax ? mode.punctuators : {}),\n      aggregators = (definitions.aggregate =\n        (punctuators && punctuators.aggregators) || (punctuators.aggregators = {})),\n\n      // Contextual identity\n      punctuator,\n      closer,\n\n      // Contextual grammar\n      spans,\n      matcher = (definitions.matcher = mode.matcher),\n      quotes = (definitions.quotes = mode.quotes),\n      forming = (definitions.forming = goal === mode.syntax),\n    } = definitions;\n\n    const context = {mode, syntax, goal, punctuator, punctuators, aggregators, closer, spans, matcher, quotes, forming};\n\n    mappings.set(definitions, context);\n    return context;\n  }\n\n  /** @deprecate Historical convenience sometimes used cautiously */\n  normalize({\n    syntax,\n    goal = syntax,\n    quote,\n    comment,\n    closure,\n    span,\n    grouping = comment || closure || span || undefined,\n    punctuator,\n    spans = (grouping && grouping.spans) || undefined,\n    matcher = (grouping && grouping.matcher) || undefined,\n    quotes = (grouping && grouping.quotes) || undefined,\n    punctuators = {aggregators: {}},\n    opener = quote || (grouping && grouping.opener) || undefined,\n    closer = quote || (grouping && grouping.closer) || undefined,\n    hinter,\n    open = (grouping && grouping.open) || undefined,\n    close = (grouping && grouping.close) || undefined,\n  }) {\n    return {syntax, goal, punctuator, spans, matcher, quotes, punctuators, opener, closer, hinter, open, close};\n  }\n}\n\nObject.freeze(Object.freeze(Contextualizer.prototype).constructor);\n\nconst mappings = new WeakMap();\nconst {apply} = Reflect;\n","﻿import {Contextualizer} from './contextualizer.js';\n\n/** Private context state handler for token generator instances */\nexport class Contexts {\n  /** @param {Tokenizer} tokenizer */\n  constructor(tokenizer) {\n    ({\n      syntax: this.syntax,\n      syntax: this.goal,\n      syntax: (this.hints = new Hints()).top,\n      [Definitions]: this.definitions = (this.contextualizer.mode[Definitions] = {}),\n    } = (this.contextualizer =\n      // TODO: Undo if concurrent parsing shows side-effects\n      tokenizer.contextualizer || (tokenizer.contextualizer = new Contextualizer(tokenizer))).mode);\n    (this.stack = [(this.root = this.contextualizer.prime(null))]).hints = [(this.hint = this.hints.toString())];\n  }\n\n  /**\n   * @param {Token} nextToken\n   * @param {TokenizerState} state\n   * @param {TokenizerContext} context\n   */\n  close(nextToken, state, context) {\n    const childContext = context;\n    let after, parentToken;\n    const {stack, hints, syntax, contextualizer} = this;\n\n    const childIndex = stack.length - 1;\n    const childDefinitions = childIndex && stack[childIndex];\n\n    // TODO: Handle childContext.closer !== childDefinitions.closer\n    if (childDefinitions) {\n      const {hinter, punctuator} = childDefinitions;\n      stack.pop();\n      stack.includes(childDefinitions) || hints.delete(hinter);\n      (punctuator === 'opener' && (nextToken.punctuator = 'closer')) ||\n        (punctuator && (nextToken.punctuator = punctuator));\n      nextToken.type = 'punctuator';\n      after = childDefinitions.close && childDefinitions.close(nextToken, state, childContext);\n    }\n\n    const parentIndex = stack.length - 1;\n    const parentDefinitions = stack[parentIndex];\n    const parentHint = stack.hints[parentIndex];\n\n    // TODO: Verify coherent goal, context, and hints\n    (parentDefinitions &&\n      (this.hint = parentHint) &&\n      (context = contextualizer.prime(parentDefinitions)) &&\n      (this.goal = context.goal || syntax)) ||\n      ((this.goal = (context = contextualizer.prime(null)).goal || syntax) && (this.hint = stack.hints[0] || syntax));\n    parentToken = (nextToken.parent && nextToken.parent.parent) || undefined;\n\n    return {context, after, parentToken};\n  }\n\n  /**\n   * @param {Token} nextToken\n   * @param {TokenizerState} state\n   * @param {TokenizerContext} context\n   */\n  open(nextToken, state, context) {\n    let childDefinitions, parentToken, after;\n    let {punctuator, text} = nextToken;\n    const parentContext = context;\n    const {definitions, stack, hints, hint, syntax, contextualizer} = this;\n    const hinter = punctuator ? `${syntax}-${punctuator}` : hint;\n    const contextID = `${hinter},${text}`;\n    const definedDefinitions = definitions[contextID];\n    const {\n      mode: {matchers, comments, spans, closures},\n    } = parentContext;\n\n    if (punctuator === 'span' && parentContext.spans) {\n      const span = parentContext.spans.get(text);\n      punctuator = nextToken.punctuator = 'span';\n      childDefinitions =\n        definedDefinitions ||\n        contextualizer.normalize({\n          syntax,\n          goal: syntax,\n          span,\n          matcher: span.matcher || (matchers && matchers.span) || undefined,\n          spans: (spans && spans[text]) || undefined,\n          hinter,\n          punctuator,\n        });\n    } else if (parentContext.punctuator !== 'quote') {\n      if (punctuator === 'quote') {\n        childDefinitions =\n          definedDefinitions ||\n          contextualizer.normalize({\n            syntax,\n            goal: punctuator,\n            quote: text,\n            matcher: (matchers && matchers.quote) || undefined,\n            spans: (spans && spans[text]) || undefined,\n            hinter,\n            punctuator,\n          });\n      } else if (punctuator === 'comment') {\n        const comment = comments.get(text);\n        childDefinitions =\n          definedDefinitions ||\n          contextualizer.normalize({\n            syntax,\n            goal: punctuator,\n            comment,\n            matcher: comment.matcher || (matchers && matchers.comment) || undefined,\n            hinter,\n            punctuator,\n          });\n      } else if (punctuator === 'closure') {\n        const closure = (definedDefinitions && definedDefinitions.closure) || closures.get(text);\n        punctuator = nextToken.punctuator = 'opener';\n        closure &&\n          (childDefinitions =\n            definedDefinitions ||\n            contextualizer.normalize({\n              syntax,\n              goal: syntax,\n              closure,\n              matcher: closure.matcher || (matchers && matchers.closure) || undefined,\n              hinter,\n              punctuator,\n            }));\n      }\n    }\n\n    if (childDefinitions) {\n      (contextID && definitions[contextID]) || (definitions[contextID] = childDefinitions);\n      const childIndex = stack.push(childDefinitions) - 1;\n      hints.add(hinter);\n      this.goal = (childDefinitions && childDefinitions.goal) || syntax;\n      this.hint = stack.hints[childIndex] = `${hints.toString()} in-${this.goal}`;\n      parentToken = nextToken;\n      context = contextualizer.prime(childDefinitions);\n      nextToken.type = 'punctuator';\n      after = childDefinitions.open && childDefinitions.open(nextToken, state, context);\n    }\n\n    return {context, after, parentToken};\n  }\n}\n\nObject.freeze(Object.freeze(Contexts.prototype).constructor);\n\nconst Definitions = Symbol('[definitions]');\n\nconst Hints = Object.freeze(\n  Object.defineProperties(\n    class Hints extends Set {\n      toString() {\n        return `${(this.root && ` ${this.root}`) || ''}${(this.top && ` ${this.top}`) || ''}${(this.size &&\n          ` ${this.join(' ')}`) ||\n          ''}`.trim();\n      }\n    }.prototype,\n    {join: Object.getOwnPropertyDescriptor(Array.prototype, 'join')},\n  ),\n).constructor;\n\n/** @typedef {import('./types').Contextualizer} Contextualizer */\n/** @typedef {import('./types').Token} Token */\n/** @typedef {import('./types').Tokenizer} Tokenizer */\n/** @typedef {import('./types').TokenizerState} TokenizerState */\n/** @typedef {import('./types').TokenizerContext} TokenizerContext */\n","﻿export class TokenSynthesizer {\n  constructor(context) {\n    const {\n      mode: {\n        keywords,\n        patterns: {\n          maybeIdentifier,\n          maybeKeyword,\n          segments: {\n            [SEGMENT]: matchSegment = context.mode.patterns.segments &&\n              (context.mode.patterns.segments[SEGMENT] = createSegmenter(context.mode.patterns.segments)),\n          } = (context.mode.patterns.segments = false),\n        } = (context.mode.patterns = false),\n      },\n      punctuators,\n      aggregators,\n      forming = (context.forming = true),\n      wording = (context.wording = keywords || maybeIdentifier ? true : false),\n      [PUNCTUATOR]: matchPunctuator = (context[PUNCTUATOR] = createPunctuator(context)),\n      [AGGREGATOR]: matchAggregator = (context[AGGREGATOR] = createAggregator(context)),\n    } = context;\n\n    this.create = next => {\n      const {text, type, hint, previous, parent, last} = next;\n      type === 'sequence'\n        ? ((next.punctuator =\n            (previous &&\n              (aggregators[text] || (!(text in aggregators) && (aggregators[text] = matchAggregator(text))))) ||\n            (punctuators[text] || (!(text in punctuators) && (punctuators[text] = matchPunctuator(text)))) ||\n            undefined) &&\n            (next.type = 'punctuator')) ||\n          (matchSegment &&\n            (next.type = matchSegment(text)) &&\n            (next.hint = `${(hint && `${hint} `) || ''}${next.type}`)) ||\n          (next.type = 'sequence')\n        : type === 'whitespace'\n        ? // ? (next.breaks = text.match(LineEndings).length - 1)\n          (next.breaks = countLineBreaks(text))\n        : forming && wording\n        ? text &&\n          (((!maybeKeyword || maybeKeyword.test(text)) &&\n            (keywords && keywords.includes(text)) &&\n            (!last || last.punctuator !== 'nonbreaker' || (previous && previous.breaks > 0)) &&\n            (next.type = 'keyword')) ||\n            (maybeIdentifier && maybeIdentifier.test(text) && (next.type = 'identifier')))\n        : (next.type = 'text');\n\n      previous && (previous.next = next) && (parent || (next.parent = previous.parent));\n\n      return next;\n    };\n  }\n}\n\nObject.freeze(Object.freeze(TokenSynthesizer.prototype).constructor);\n\nconst PUNCTUATOR = Symbol('[punctuator]');\nconst AGGREGATOR = Symbol('[aggregator]');\nconst SEGMENT = Symbol('[segment]');\n\n/** @param {string} text */\nconst countLineBreaks = text => {\n  let breaks = 0;\n  for (let index = -1; (index = text.indexOf('\\n', index + 1)) > -1; breaks++);\n  return breaks;\n};\n\nconst createSegmenter = segments => {\n  const sources = [];\n  const names = [];\n  for (const name of Object.getOwnPropertyNames(segments)) {\n    const segment = segments[name];\n    if (segment && segment.source && !/\\\\\\d/.test(segment.source)) {\n      names.push(name);\n      sources.push(segment.source.replace(/\\\\?\\((.)/g, (m, a) => (m[0] !== '\\\\' && a !== '?' && '(?:') || m));\n    }\n  }\n  const length = names.length;\n  if (!length) return false;\n  const matcher = new RegExp(`(${sources.join('|)|(')}|)`, 'u');\n  return text => {\n    const match = matcher.exec(text);\n    if (match[0]) for (let i = 1, n = length; n--; i++) if (match[i]) return names[i - 1];\n  };\n};\n\nconst createPunctuator = ({mode: {operators, nonbreakers, comments, closures, breakers}, quotes, spans}) => {\n  return text =>\n    (operators && operators.includes(text) && 'operator') ||\n    (closures && closures.includes(text) && 'closure') ||\n    (breakers && breakers.includes(text) && 'breaker') ||\n    (nonbreakers && nonbreakers.includes(text) && 'nonbreaker') ||\n    (comments && comments.includes(text) && 'comment') ||\n    (quotes && quotes.includes(text) && 'quote') ||\n    (spans && spans.includes(text) && 'span') ||\n    false;\n};\n\nconst createAggregator = ({mode: {assigners, combinators}}) => {\n  return text =>\n    (assigners && assigners.includes(text) && 'assigner') ||\n    (combinators && combinators.includes(text) && 'combinator') ||\n    false;\n};\n","﻿import {Contexts} from './contexts.js';\nimport {TokenSynthesizer} from './synthesizer.js';\n\n/** Tokenizer for a single mode (language) */\nexport class Tokenizer {\n  constructor(mode, defaults) {\n    this.mode = mode;\n    this.defaults = defaults || this.constructor.defaults || undefined;\n  }\n\n  initializeContext(context) {\n    context.createToken || (context.createToken = new TokenSynthesizer(context).create);\n    return context;\n  }\n\n  /** Token generator from source using tokenizer.mode (or defaults.mode) */\n  *tokenize(source, state = {}) {\n    let done, context;\n    let previousToken, lastToken, parentToken;\n    let {match, index = 0, flags} = state;\n    const contexts = (state.contexts = new Contexts(this));\n    const {tokenize = (state.tokenize = text => [{text}])} = state;\n    const rootContext = (context = state.lastContext = contexts.root);\n    const top = {type: 'top', text: '', offset: index};\n\n    done = !(state.source = source);\n\n    while (!done) {\n      const {closer, matcher, createToken, forming = true} = context;\n\n      // Current contextual hint (syntax or hint)\n      const hint = contexts.hint;\n\n      while (state.lastContext === (state.lastContext = context)) {\n        let nextToken;\n\n        const lastIndex = (state.index > -1 && state.index) || 0;\n\n        matcher.lastIndex = lastIndex;\n        match = state.match = matcher.exec(source);\n        done = index === (index = state.index = matcher.lastIndex) || !match;\n\n        if (done) break;\n\n        // Current contextual match\n        const {0: text, 1: whitespace, 2: sequence, index: offset} = match;\n\n        // Current quasi-contextual fragment\n        const pre = source.slice(lastIndex, offset);\n        pre &&\n          ((nextToken = createToken({\n            type: 'pre',\n            text: pre,\n            offset: lastIndex,\n            previous: previousToken,\n            parent: parentToken,\n            hint,\n            last: lastToken,\n          })),\n          yield (previousToken = nextToken));\n\n        // Current contextual fragment\n        const type = (whitespace && 'whitespace') || (sequence && 'sequence') || 'text';\n        nextToken = createToken({\n          type,\n          text,\n          offset,\n          previous: previousToken,\n          parent: parentToken,\n          hint,\n          last: lastToken,\n        });\n\n        let after;\n\n        // Current contextual punctuator (from sequence)\n        const closing =\n          closer && (closer.test ? closer.test(text) : closer === text || (whitespace && whitespace.includes(closer)));\n\n        // Update context\n        (closing && ({context, after, parentToken = top} = contexts.close(nextToken, state, context))) ||\n          (nextToken.punctuator &&\n            context.punctuator !== 'comment' &&\n            ({context, after, parentToken = top} = contexts.open(nextToken, state, context)));\n\n        // Current contextual tail token (yield from sequence)\n        yield (previousToken = nextToken);\n\n        // Next reference to last contextual sequence token\n        nextToken && !whitespace && forming && (lastToken = nextToken);\n\n        if (after) {\n          let tokens, createToken, nextIndex;\n          let hintTokenType, hintPrefix, hintSuffix;\n\n          if (after.syntax) {\n            const {syntax, offset, index} = after;\n            const body = index > offset && source.slice(offset, index - 1);\n            if (body && body.length > 0) {\n              (tokens = tokenize(body, {options: {sourceType: syntax}}, this.defaults)), (nextIndex = index);\n              hintSuffix = `${syntax}-in-${rootContext.syntax}`;\n              createToken = token => ((token.hint = `${(token.hint && `${token.hint} `) || ''}${hintSuffix}`), token);\n            }\n          } else if (after.length) {\n            hintTokenType = 'code';\n            hintPrefix = contexts.hint ? `${contexts.hint} ` : '';\n            createToken = token =>\n              context.createToken(((token.hint = `${hintPrefix}${token.type || hintTokenType}`), token));\n            (tokens = after).end > state.index && (nextIndex = after.end);\n          }\n\n          if (tokens) {\n            for (const next of tokens) {\n              previousToken && ((next.previous = previousToken).next = next);\n              createToken && createToken(next);\n              yield (previousToken = next);\n            }\n            nextIndex > state.index && (state.index = nextIndex);\n          }\n        }\n      }\n    }\n    flags && flags.debug && console.info('[Tokenizer.tokenize‹state›]: %o', state);\n  }\n}\n\nObject.freeze(Object.freeze(Tokenizer.prototype).constructor);\n","export * from './lib/experimental/[parser].js';\nexport * from './lib/experimental/tokenizer.js';\nimport {Parser} from './lib/experimental/[parser].js';\n\nexport default new Parser({url: import.meta.url});\n","import {Symbols, Closures} from '../common/helpers.js';\n\nexport const css = Object.defineProperties(\n  ({syntax} = css.defaults) => ({\n    syntax,\n    comments: Closures.from('/*…*/'),\n    closures: Closures.from('{…} (…) […]'),\n    quotes: Symbols.from(`' \"`),\n    assigners: Symbols.from(`:`),\n    combinators: Symbols.from('> :: + :'),\n    nonbreakers: Symbols.from(`-`),\n    breakers: Symbols.from(', ;'),\n    matcher: /(\\n|\\s+)|(\\\\(?:(?:\\\\\\\\)*\\\\|[^\\\\\\s])?|\\/\\*|\\*\\/|\\(|\\)|\\[|\\]|\"|'|\\{|\\}|,|;|\\.|\\b:\\/\\/\\b|::\\b|:(?!active|after|any|any-link|backdrop|before|checked|default|defined|dir|disabled|empty|enabled|first|first-child|first-letter|first-line|first-of-type|focus|focus-visible|focus-within|fullscreen|host|hover|in-range|indeterminate|invalid|lang|last-child|last-of-type|left|link|matches|not|nth-child|nth-last-child|nth-last-of-type|nth-of-type|only-child|only-of-type|optional|out-of-range|read-only|required|right|root|scope|target|valid|visited))/g,\n    matchers: {\n      quote: /(\\n)|(\\\\(?:(?:\\\\\\\\)*\\\\|[^\\\\\\s])?|\\*\\/|`|\"|'|\\$\\{)/g,\n      comment: /(\\n)|(\\*\\/|\\b(?:[a-z]+\\:\\/\\/|\\w[\\w\\+\\.]*\\w@[a-z]+)\\S+|@[a-z]+)/gi,\n    },\n  }),\n  {\n    defaults: {value: {syntax: 'css'}},\n  },\n);\n","import {Closures, Symbols, raw} from '../common/helpers.js';\n\nexport const html = Object.defineProperties(\n  ({syntax} = html.defaults) => {\n    const html = {\n      syntax,\n      keywords: Symbols.from('DOCTYPE doctype'),\n      comments: Closures.from('<!--…-->'),\n      closures: Closures.from('<%…%> <!…> <…/> </…> <…>'),\n      quotes: [],\n      patterns: {\n        maybeKeyword: /^[a-z](\\w*)$/i,\n        closeTag: /<\\/\\w[^<>{}]*?>/g,\n        // maybeIdentifier: /^(?:(?:[a-z][\\-a-z]*)?[a-z]+\\:)?(?:[a-z][\\-a-z]*)?[a-z]+$/,\n      },\n      matcher: /(\\n|\\s+)|(\"|'|=|&#x?[a-f0-9]+;|&[a-z]+;|\\/?>|<%|%>|<!--|-->|<[\\/\\!]?(?=[a-z]+\\:?[a-z\\-]*[a-z]|[a-z]+))/gi,\n      matchers: {\n        quote: /(\\n)|(\\\\(?:(?:\\\\\\\\)*\\\\|[^\\\\\\s])|\"|')/g,\n        comment: /(\\n)|(-->)/g,\n      },\n    };\n\n    const DOCTAGS = Symbols.from('SCRIPT STYLE');\n    const TAG = /^[a-z]+$/i;\n    // TODO: Check if custom/namespace tags ever need special close logic\n    // const TAGLIKE = /^(?:(?:[a-z][\\-a-z]*)?[a-z]+\\:)?(?:[a-z][\\-a-z]*)?[a-z]+$/i;\n\n    const HTMLTagClosure = html.closures.get('<');\n\n    HTMLTagClosure.patterns = html.patterns;\n\n    HTMLTagClosure.close = (next, state, context) => {\n      const parent = next && next.parent;\n      const first = parent && parent.next;\n      const tag = first && first.text && TAG.test(first.text) && first.text.toUpperCase();\n\n      if (tag && DOCTAGS.includes(tag)) {\n        let {source, index} = state;\n        const $$matcher = html.patterns.closeTag;\n\n        let match;\n        $$matcher.lastIndex = index;\n\n        // TODO: Check if `<script>`…`</SCRIPT>` is still valid!\n        const $$closer = new RegExp(raw`^<\\/(?:${first.text.toLowerCase()}|${tag})\\b`);\n\n        let syntax = (tag === 'STYLE' && 'css') || '';\n\n        if (!syntax) {\n          const openTag = source.slice(parent.offset, index);\n          const match = /\\stype=.*?\\b(.+?)\\b/.exec(openTag);\n          syntax = tag === 'SCRIPT' && (!match || !match[1] || /^module$|javascript/i.test(match[1])) ? 'es' : '';\n        }\n\n        while ((match = $$matcher.exec(source))) {\n          if ($$closer.test(match[0])) {\n            if (syntax) {\n              return {offset: index, index: match.index, syntax};\n            } else {\n              const offset = index;\n              const text = source.slice(offset, match.index - 1);\n              state.index = match.index;\n              return [{text, offset, previous: next, parent}];\n            }\n          }\n        }\n      }\n    };\n    HTMLTagClosure.quotes = Symbols.from(`' \"`);\n    HTMLTagClosure.closer = /\\/?>/;\n\n    return html;\n  },\n  {\n    defaults: {value: {syntax: 'html', aliases: ['htm']}},\n  },\n);\n","import {previousTextFrom, indenter, Closures, sequence, all, raw} from '../common/helpers.js';\n\nexport const markdown = Object.defineProperties(\n  ({syntax} = defaults, {html}) => {\n    const EMBEDDED = true;\n    const matcher = ((...matchers) => {\n      let matcher = matchers[matchers.length - 1];\n      try {\n        matchers.push(\n          (matcher = sequence`${all(\n            sequence`(${markdown.WHITESPACE})`,\n            sequence`(${all(\n              markdown.ESCAPES,\n              markdown.ENTITIES,\n              markdown.RULES,\n              markdown.BLOCKS,\n              markdown.INLINES,\n              markdown.TYPOGRAPHS,\n              markdown.TAGS,\n              markdown.BRACKETS,\n              markdown.FENCES,\n              markdown.SPANS,\n            )})`,\n            markdown.INDICIES,\n            markdown.DECIMAL,\n            markdown.EXPONENTIAL,\n            markdown.FRAGMENTS,\n          )}${'/gim'}`),\n        );\n        return matcher;\n      } catch (exception) {\n        matchers.push(exception.message.replace(/.*Invalid regular expression: /, ''));\n        console.warn(exception);\n      }\n      matcher.matchers = matchers;\n      return matcher;\n    })(\n      /(^\\s+|\\n)|(&#x?[a-f0-9]+;|&[a-z]+;|(?:```+|\\~\\~\\~+|(?:--+|==+)(?=\\s*$)|(?:\\#{1,6}|\\-|\\b\\d+\\.|\\b[a-z]\\.|\\b[ivx]+\\.)(?=\\s+\\S*))|–|—|\"|'|=|\\/>|<%|%>|<!--|-->|<[\\/\\!]?(?=[a-z]+\\:?[a-z\\-]*[a-z]|[a-z]+)|<|>|\\(|\\)|\\[|\\]|__?|([*~`])\\3?\\b|(?:\\b|\\b\\B|\\B)([*~`])\\4?)|\\b[^\\n\\s\\[\\]\\(\\)\\<\\>&]*[^\\n\\s\\[\\]\\(\\)\\<\\>&_]\\b|[^\\n\\s\\[\\]\\(\\)\\<\\>&]+(?=__?\\b)|\\\\./gim,\n      sequence`(${markdown.WHITESPACE})|(${markdown.ENTITIES}|(?:${markdown.FENCES}|(?:${markdown.RULES})(?=\\s*$)|(?:${\n        markdown.BLOCKS\n      })(?=\\s+\\S*))|${markdown.TYPOGRAPHS}|${markdown.TAGS}|${markdown.BRACKETS}|${markdown.INLINES})|${\n        markdown.FRAGMENTS\n      }|${markdown.ESCAPES}${'/gim'}`,\n    );\n\n    const mode = {\n      syntax,\n      comments: Closures.from('<!--…-->'),\n      quotes: [],\n      closures: Closures.from(html.closures, markdown.CLOSURES),\n      operators: html.operators,\n      matcher: matcher,\n      spans: Closures.from('``…`` `…`'),\n      matchers: {comment: /(\\n)|(-->)/g},\n    };\n\n    const open = (parent, state, grouper) => {\n      const {source, index: start} = state;\n      const fence = parent.text;\n      const fencing = previousTextFrom(parent, '\\n');\n      const indenting = fencing.slice(fencing.indexOf('\\n') + 1, -fence.length) || '';\n      let end = source.indexOf(`\\n${fencing}`, start);\n      const INDENT = (indenting && indenter(indenting)) || /^/m;\n      const CLOSER = new RegExp(raw`^${INDENT.source.slice(1) || ''}${fence}`, 'mg');\n\n      CLOSER.lastIndex = start;\n      let closerMatch = CLOSER.exec(source);\n      if (closerMatch && closerMatch.index >= start) {\n        end = closerMatch.index;\n      } else {\n        const FENCE = new RegExp(raw`^[\\>\\|\\s]*${fence}`, 'mg');\n        FENCE.lastIndex = start;\n        const fenceMatch = FENCE.exec(source);\n        if (fenceMatch && fenceMatch.index >= start) {\n          end = fenceMatch.index;\n        } else return;\n      }\n\n      if (end > start) {\n        let offset = start;\n        let text, head, lines;\n\n        const body = source.slice(start, end) || '';\n        const tokens = [];\n        tokens.end = end;\n        if (!EMBEDDED) {\n          text = body;\n          tokens.push({text, type: 'code', offset, parent});\n          offset += body.length;\n        } else {\n          [head, ...lines] = body.split(/\\r?(\\n)\\r?/g);\n          if (head) {\n            tokens.push({text: head, type: 'comment', offset, parent}), (offset += head.length);\n          }\n          for (const line of lines) {\n            if (line === '\\n') {\n              text = line;\n              tokens.push({text, type: 'whitespace', offset, parent}), (offset += text.length);\n            } else {\n              const [indent] = INDENT.exec(line) || '';\n              const inset = (indent && indent.length) || 0;\n              if (inset) {\n                for (const text of indent.split(/(\\s+)/g)) {\n                  if (!text) continue;\n                  const type = (text.trim() && 'sequence') || 'whitespace';\n                  tokens.push({text, type, offset, parent});\n                  offset += text.length;\n                }\n                text = line.slice(inset) || '';\n              } else {\n                text = line;\n              }\n              if (text) {\n                tokens.push({text, type: 'code', offset, parent}), (offset += text.length);\n              }\n            }\n          }\n        }\n\n        if (tokens.length) {\n          const last = tokens[tokens.length - 1];\n          if (!last.text) tokens.pop();\n          return tokens;\n        }\n      }\n    };\n\n    {\n      const quotes = html.closures.get('<').quotes;\n      for (const opener of ['```', '~~~']) {\n        const FenceClosure = mode.closures.get(opener);\n        if (FenceClosure) {\n          FenceClosure.matcher = new RegExp(raw`/(\\s*\\n)|(${opener}(?=\\s|$)|^(?:[\\s>|]*\\s)?\\s*)|.*$`, 'gm');\n          FenceClosure.quotes = quotes;\n          FenceClosure.open = open;\n        }\n      }\n    }\n\n    return mode;\n  },\n  {\n    defaults: {get: () => ({...markdown.DEFAULTS})},\n  },\n);\n\nDefinitions: {\n  Defaults: {\n    markdown.DEFAULTS = {syntax: 'markdown', aliases: ['md'], requires: ['html']};\n  }\n\n  markdown.BLOCK = '```…``` ~~~…~~~';\n  markdown.INLINE = '[…] (…) *…* **…** _…_ __…__ ~…~ ~~…~~';\n  markdown.CLOSURES = `${markdown.BLOCK} ${markdown.INLINE}`;\n  markdown.WHITESPACE = /^\\s+|\\s+$|\\n+/;\n  markdown.ESCAPES = /\\\\./;\n  markdown.ENTITIES = /&#x?[a-f0-9]+;|&[a-z]+;/;\n  markdown.FENCES = /(?:\\x60{3,}|\\x7E{3,})(?=\\b| |$)/;\n  markdown.RULES = /(?:[\\-]{2,}|[=]{2,})(?=\\s*$)/;\n  markdown.BLOCKS = /(?:\\#{1,6}|\\-|\\b\\d+\\.|\\b[a-z]\\.|\\b[ivx]+\\.)(?=\\s+\\S)/;\n  markdown.TYPOGRAPHS = /\\B[\\–](?=\\ )|\"|'|=/;\n  markdown.TAGS = /\\/>|<%|%>|<!--|-->|<[\\/\\!]?(?=[a-z]+\\:?[a-z\\-]*[a-z]|[a-z]+)/;\n  markdown.BRACKETS = /<|>|\\(|\\)|\\[|\\]/;\n  markdown.INLINES = /\\b([*~_])(?:\\3\\b(?=[^\\n]*[^\\n\\s\\\\]\\3\\3)|\\b(?=[^\\n]*[^\\n\\s\\\\]\\3))|(?:\\b|\\b\\B|\\B)([*~_])\\4?/;\n  markdown.SPANS = /(``?(?![`\\n]))[^\\n]*?[^\\\\`\\n]\\5/;\n  markdown.INDICIES = /\\b(?:[\\da-zA-Z]+\\.)+[\\da-zA-Z]+\\.?/;\n  markdown.DECIMAL = /[+\\-]?\\d+(?:,\\d{3})*(?:\\.\\d+)?|[+\\-]?\\d*\\.\\d+/;\n  markdown.EXPONENTIAL = /\\d+[eE]\\-?\\d+|\\d+\\.\\d+[eE]\\-?\\d+/;\n  markdown.FRAGMENTS = /\\b[^\\n\\s\\[\\]\\(\\)\\<\\>&`\"]*[^\\n\\s\\[\\]\\(\\)\\<\\>&_`\"]\\b|[^\\n\\s\\[\\]\\(\\)\\<\\>&`\"]+(?=__?\\b)/;\n}\n","import {Closures, Symbols, identifier, sequence, all} from '../common/helpers.js';\nimport {patterns, entities} from '../common/patterns.js';\n\nexport const javascript = Object.defineProperties(\n  ({syntax} = defaults) => ({\n    syntax,\n    comments: Closures.from(javascript.COMMENTS),\n    quotes: Symbols.from(javascript.QUOTES),\n    closures: Closures.from(javascript.CLOSURES),\n    spans: {'`': Closures.from(javascript.SPANS['`'])},\n    keywords: Symbols.from(javascript.KEYWORDS),\n    assigners: Symbols.from(javascript.ASSIGNERS),\n    combinators: Symbols.from(javascript.COMBINATORS),\n    nonbreakers: Symbols.from(javascript.NONBREAKERS),\n    operators: Symbols.from(javascript.OPERATORS),\n    breakers: Symbols.from(javascript.BREAKERS),\n    patterns: {\n      ...patterns,\n      maybeIdentifier: identifier(entities.es.IdentifierStart, entities.es.IdentifierPart),\n      maybeKeyword: /^[a-z][a-zA-Z]+$/,\n      segments: {\n        regexp: /^\\/(?![\\n*+/?])[^\\n]*[^\\\\\\n]\\//,\n      },\n    },\n    matcher: sequence`(\\n|\\s+)|(${all(\n      javascript.REGEXPS,\n      javascript.COMMENTS,\n      javascript.QUOTES,\n      javascript.CLOSURES,\n      ...javascript.PUNCTUATORS,\n    )})`,\n    matchers: {\n      \"'\": /(\\n)|(')|(\\\\.)/g,\n      '\"': /(\\n)|(\")|(\\\\.)/g,\n      '`': /(\\n)|(`|\\$\\{)|(\\\\.)/g,\n      quote: /(\\n)|(`|\"|'|\\$\\{)|(\\\\.)/g,\n      comment: /(\\n)|(\\*\\/|\\b(?:[a-z]+\\:\\/\\/|\\w[\\w+.]*\\w@[a-z]+)\\S+|@[a-z]+)/gi,\n    },\n  }),\n  {\n    defaults: {get: () => ({...javascript.DEFAULTS})},\n  },\n);\n\nDefinitions: {\n  Defaults: {\n    javascript.DEFAULTS = {syntax: 'javascript', aliases: ['js', 'es', 'ecmascript']};\n    // javascript.DEFAULTS = {syntax: 'javascript', aliases: ['js']};\n  }\n\n  javascript.REGEXPS = /\\/(?=[^*/\\n][^\\n]*\\/(?:[a-z]+\\b|)(?:[ \\t]+[^\\n\\s\\(\\[\\{\\w]|[.\\[;,]|[ \\t]*[)\\]};,\\n]|\\n|$))(?:[^\\\\\\/\\n\\t\\[]+|\\\\[^\\n]|\\[(?:\\\\[^\\n]|[^\\\\\\n\\t\\]]+)*?\\][+*]?\\??)*\\/(?:[a-z]+\\b|)/g;\n\n  javascript.COMMENTS = /\\/\\/|\\/\\*|\\*\\/|^\\#\\!.*\\n|<!--/g;\n  javascript.COMMENTS['(closures)'] = '//…\\n /*…*/ <!--…\\n';\n\n  javascript.QUOTES = /`|\"|'/g;\n  javascript.QUOTES['(symbols)'] = `' \" \\``;\n\n  javascript.CLOSURES = /\\{|\\}|\\(|\\)|\\[|\\]/g;\n  javascript.CLOSURES['(closures)'] = '{…} (…) […]';\n\n  javascript.SPANS = {'`': {['(closures)']: '${…}'}};\n\n  javascript.KEYWORDS = {\n    ['(symbols)']:\n      // 'abstract enum interface package namespace declare type module public protected ' +\n      'arguments as async await break case catch class export const continue private debugger default delete do else export extends finally for from function get if import in instanceof let new of return set static super switch this throw try typeof var void while with yield',\n  };\n\n  javascript.PUNCTUATORS = [\n    /,|;|\\.\\.\\.|\\.|:|\\?|=>/,\n    /\\+\\+|\\+=|\\+|--|-=|-|\\*\\*=|\\*\\*|\\*=|\\*|\\/=|\\//,\n    /&&|&=|&|\\|\\||\\|=|\\||%=|%|\\^=|\\^|~=|~/,\n    /<<=|<<|<=|<|>>>=|>>>|>>=|>>|>=|>/,\n    /!==|!=|!|===|==|=/,\n  ];\n\n  javascript.ASSIGNERS = {['(symbols)']: '= += -= *= /= **= %= &= |= <<= >>= >>>= ^= ~='};\n\n  javascript.COMBINATORS = {['(symbols)']: '=== == + - * / ** % & && | || ! !== != > < >= <= => >> << >>> ^ ~'};\n  javascript.NONBREAKERS = {['(symbols)']: '.'};\n  javascript.OPERATORS = {['(symbols)']: '++ -- ... ? :'};\n  javascript.BREAKERS = {['(symbols)']: ', ;'};\n}\n","﻿import {javascript} from '../javascript/javascript-grammar.js';\nimport {Symbols, sequence, raw, all} from '../common/helpers.js';\n\nexport const typescript = Object.defineProperties(\n  ({syntax} = typescript.defaults, {javascript}) => ({\n    ...javascript,\n    keywords: Symbols.from(typescript.KEYWORDS),\n  }),\n  {\n    defaults: {get: () => ({...typescript.DEFAULTS})},\n  },\n);\n\nDefinitions: {\n  Defaults: {\n    typescript.DEFAULTS = {syntax: 'typescript', aliases: ['ts'], requires: [javascript.defaults.syntax]};\n  }\n  typescript.KEYWORDS = {\n    ['(symbols)']: `abstract enum interface namespace declare type module private public protected ${\n      javascript.KEYWORDS['(symbols)']\n    }`,\n  };\n}\n","import {javascript} from './javascript-grammar.js';\nimport {Symbols, sequence, raw, all} from '../common/helpers.js';\n\nexport const mjs = Object.defineProperties(\n  ({syntax} = mjs.defaults, {javascript: {quotes, closures, spans, matchers}}) => ({\n    syntax,\n    keywords: Symbols.from('import export default'),\n    quotes,\n    closures,\n    spans,\n    matcher: javascript.extended.MJS,\n    matchers: {quote: matchers.quote, closure: javascript.extended.CLOSURE},\n  }),\n  {\n    defaults: {get: () => ({...mjs.DEFAULTS})},\n  },\n);\n\nexport const cjs = Object.defineProperties(\n  ({syntax} = cjs.defaults, {javascript: {quotes, closures, spans, matchers}}) => ({\n    syntax,\n    keywords: Symbols.from('import module exports require'),\n    quotes,\n    closures,\n    spans,\n    matcher: javascript.extended.CJS,\n    matchers: {quote: matchers.quote, closure: javascript.extended.CLOSURE},\n  }),\n  {\n    defaults: {get: () => ({...cjs.DEFAULTS})},\n  },\n);\n\nexport const esx = Object.defineProperties(\n  ({syntax} = esx.defaults, {javascript: {quotes, closures, spans, matchers}, mjs, cjs}) => ({\n    syntax,\n    keywords: Symbols.from(mjs.keywords, cjs.keywords),\n    quotes,\n    closures,\n    spans,\n    matcher: javascript.extended.ESX,\n    matchers: {quote: matchers.quote, closure: javascript.extended.CLOSURE},\n  }),\n  {\n    defaults: {get: () => ({...esx.DEFAULTS})},\n  },\n);\n\nDefinitions: {\n  Defaults: {\n    const requires = [javascript.defaults.syntax];\n\n    mjs.DEFAULTS = {syntax: 'mjs', aliases: ['esm'], requires};\n    cjs.DEFAULTS = {syntax: 'cjs', requires};\n    esx.DEFAULTS = {syntax: 'esx', requires: [...requires, 'cjs', 'mjs']};\n  }\n\n  const {REGEXPS, CLOSURES, extended = (javascript.extended = {})} = javascript;\n\n  // TODO: Undo $ matching once fixed\n  const QUOTES = (javascript.extended.QUOTES = /`|\"(?:[^\\\\\"]+|\\\\.)*(?:\"|$)|'(?:[^\\\\']+|\\\\.)*(?:'|$)/g);\n  const COMMENTS = (javascript.extended.COMMENTS = /\\/\\/.*(?:\\n|$)|\\/\\*[^]*?(?:\\*\\/|$)|^\\#\\!.*\\n|<!--/g);\n  const STATEMENTS = (javascript.extended.STATEMENTS = all(QUOTES, CLOSURES, REGEXPS, COMMENTS));\n  const BLOCKLEVEL = (javascript.extended.BLOCKLEVEL = sequence`(\\n|\\s+)|(${STATEMENTS})`);\n  const TOPLEVEL = (javascript.extended.TOPLEVEL = sequence`(\\n|\\s+)|(${STATEMENTS})`);\n  javascript.extended.CLOSURE = sequence`(\\n+)|(${STATEMENTS})`;\n  javascript.extended.MJS = sequence`${TOPLEVEL}|\\bexport\\b|\\bimport\\b`;\n  javascript.extended.CJS = sequence`${BLOCKLEVEL}|\\bexports\\b|\\bmodule.exports\\b|\\brequire\\b|\\bimport(?=\\(|\\.)`;\n  javascript.extended.ESX = sequence`${BLOCKLEVEL}|\\bexports\\b|\\bimport\\b|\\bmodule.exports\\b|\\brequire\\b`;\n}\n","export * from './tokenizer.experimental.js';\nimport {Parser} from './tokenizer.experimental.js';\nimport {modes} from './extensions/extensions.js';\n\nexport {modes};\nexport default (() => new Parser({url: import.meta.url, modes}))();\n","﻿class TokenizerAPI {\n  /** @param {API.Options} [options] */\n  constructor(options) {\n    /** @type {API.Options} */\n    const {\n      parsers = [],\n      tokenize = (source, options = {}, flags) => {\n        const state = new TokenizerAPI.State({options, flags: {}});\n        const variant = !options.variant ? 1 : parseInt(options.variant);\n        const {[variant >= 1 && variant <= parsers.length ? variant - 1 : (options.variant = 0)]: parser} = parsers;\n        this.lastVariant === (this.lastVariant = variant) ||\n          variant <= parsers.length ||\n          console.warn(\n            '[tokenize‹parser›] Variant %O[%d] out of bounds — using default parser: %o',\n            parsers,\n            variant,\n            parser.MODULE_URL || {parser},\n          );\n        options.tokenize = parser.tokenize;\n        if (flags && (flags.length > 0 || flags.size > 0)) {\n          typeof flags === 'string' || (flags = [...flags].join(' '));\n          /\\bwarmup\\b/i.test(flags) && (state.flags.warmup = true);\n          /\\bdebug\\b/i.test(flags) && (state.flags.debug = true);\n        }\n\n        let returned = UNSET;\n        try {\n          this.lastParser === (this.lastParser = parser) ||\n            console.info('[tokenize‹parser›]: %o', parser.MODULE_URL || {parser});\n          return (returned = parser.tokenize(source, state));\n        } finally {\n          returned !== UNSET || !state.flags.debug || console.info('[tokenize‹state›]: %o', state);\n        }\n      },\n\n      warmup = (source, options, flags) => {\n        // Object.defineProperty(options, 'warmup', {value: true});\n        const key = (options && JSON.stringify(options)) || '';\n        let cache = (this.cache || (this.cache = new Map())).get(key);\n        cache || this.cache.set(key, (cache = new Set()));\n        if (!cache.has(source)) {\n          flags = `warmup ${(flags &&\n            (flags.length > 0 || flags.size > 0) &&\n            (typeof flags === 'string' || flags instanceof String ? flags : [...flags].join(' '))) ||\n            ''}`;\n          for (const item of tokenize(source, options, flags));\n        }\n        cache.add(source);\n      },\n\n      render,\n    } = options;\n\n    Object.defineProperties(this, {\n      tokenize: {get: () => tokenize},\n      warmup: {get: () => warmup},\n      render: {get: () => render},\n      parsers: {get: () => parsers},\n    });\n  }\n}\n\nObject.freeze(Object.setPrototypeOf(TokenizerAPI.prototype, null));\n\nTokenizerAPI.State = class State {\n  constructor(...properties) {\n    Object.assign(this, ...properties);\n  }\n};\n\nObject.freeze(Object.setPrototypeOf(TokenizerAPI.State.prototype, null));\n\nconst UNSET = Symbol('');\n\nexport {TokenizerAPI};\n\n/**\n * @typedef {import('./parser.js').Parser & {MODULE_URL?: string}} Parser\n * @typedef {Partial<{variant?: number, fragment?: Fragment, [name: string]: any}>} Parser.Options\n */\n\n/**\n * @typedef {TokenizerAPI & {tokenize: API.tokenize, warmup: API.warmup, render: API.render, parsers: Parser[]}} API\n * @typedef {TokenizerAPI.State} API.State\n * @typedef {Partial<Pick<API, 'tokenize' | 'warmup' | 'render' | 'parsers'>>} API.Options\n * @typedef {<T extends {}>(source: string, options: Parser.Options, flags?: Flags) => IterableIterator<T>} API.tokenize\n * @typedef {(source: string, options: Parser.Options, flags?: Flags) => void} API.warmup\n * @typedef {(source: string, options: Parser.Options, flags?: Flags) => Promise<Fragment>} API.render\n */\n\n/**\n * @typedef {(string | Array<string> | Set<string>) & {length?: number, size?: number}} Flags\n * @typedef {DocumentFragment & {logs?: string[]}} Fragment\n */\n","export * from './helpers.js';\nimport experimentalExtendedParser from '../tokenizer.experimental.extended.js';\nimport {TokenizerAPI} from '../lib/api.js';\nimport markupDOM from '../extensions/dom.js';\n\n/** @type {{experimentalExtendedAPI: import('../lib/api').API}} */\nconst {\n  experimentalExtendedAPI,\n  experimentalExtendedAPI: {parsers, render, tokenize, warmup},\n} = {\n  //@ts-ignore\n  experimentalExtendedAPI: new TokenizerAPI({\n    parsers: [experimentalExtendedParser],\n    render: (source, options, flags) => {\n      const fragment = options && options.fragment;\n      const debugging = flags && /\\bdebug\\b/i.test(typeof flags === 'string' ? flags : [...flags].join(' '));\n\n      debugging &&\n        console.info('render: %o', {api: experimentalExtendedAPI, source, options, flags, fragment, debugging});\n      fragment && (fragment.logs = debugging ? [] : undefined);\n\n      return markupDOM.render(tokenize(source, options, flags), fragment);\n    },\n  }),\n};\n\nexport default experimentalExtendedAPI;\nexport {parsers, tokenize, render, warmup};\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\n// const trace = /** @type {[function, any[]][]} */ [];\n\nclass Matcher extends RegExp {\n\t/**\n\t * @template T\n\t * @param {Matcher.Pattern} pattern\n\t * @param {Matcher.Flags} [flags]\n\t * @param {Matcher.Entities} [entities]\n\t * @param {T} [state]\n\t */\n\tconstructor(pattern, flags, entities, state) {\n\t\t// trace.push([new.target, [...arguments]]);\n\t\t//@ts-ignore\n\t\tsuper(pattern, flags);\n\t\t// Object.assign(this, RegExp.prototype, new.target.prototype);\n\t\t(pattern &&\n\t\t\tpattern.entities &&\n\t\t\tSymbol.iterator in pattern.entities &&\n\t\t\t((!entities && (entities = pattern.entities)) || entities === pattern.entities)) ||\n\t\t\tObject.freeze((entities = (entities && Symbol.iterator in entities && [...entities]) || []));\n\t\t/** @type {MatcherEntities} */\n\t\tthis.entities = entities;\n\t\t/** @type {T} */\n\t\tthis.state = state;\n\t\tthis.capture = this.capture;\n\t\tthis.exec = this.exec;\n\t\t// this.test = this.test;\n\t\t({\n\t\t\t// LOOKAHEAD: this.LOOKAHEAD = Matcher.LOOKAHEAD,\n\t\t\t// INSET: this.INSET = Matcher.INSET,\n\t\t\t// OUTSET: this.OUTSET = Matcher.OUTSET,\n\t\t\tDELIMITER: this.DELIMITER = Matcher.DELIMITER,\n\t\t\tUNKNOWN: this.UNKNOWN = Matcher.UNKNOWN,\n\t\t} = new.target);\n\t}\n\n\t/**\n\t * @template {MatcherMatchResult} T\n\t * @param {string} text\n\t * @param {number} capture\n\t * @param {T} match\n\t * @returns {T}\n\t */\n\tcapture(text, capture, match) {\n\t\tif (capture === 0) return void (match.capture = {});\n\t\tif (text === undefined) return;\n\t\tconst index = capture - 1;\n\t\tconst {\n\t\t\tentities: {[index]: entity},\n\t\t\tstate,\n\t\t} = this;\n\t\ttypeof entity === 'function'\n\t\t\t? ((match.entity = index), entity(text, capture, match, state))\n\t\t\t: entity == null || //entity === INSET ||\n\t\t\t  // entity === OUTSET ||\n\t\t\t  // entity === DELIMITER ||\n\t\t\t  // entity === LOOKAHEAD ||\n\t\t\t  // entity === UNKNOWN ||\n\t\t\t  (match.entity !== undefined || ((match.identity = entity), (match.entity = index)),\n\t\t\t  (match.capture[entity] = text));\n\t}\n\n\t/**\n\t * @param {string} source\n\t * @returns {MatcherMatchResult}\n\t */\n\texec(source) {\n\t\t// const tracing = trace.length;\n\t\t// trace.push([this.exec, [...arguments]]);\n\t\t/** @type {MatcherMatchArray} */\n\t\tconst match = super.exec(source);\n\t\t// console.log(trace.slice(tracing, trace.length));\n\t\tmatch &&\n\t\t\t(match.forEach(this.capture || Matcher.prototype.capture, (match.matcher = this)),\n\t\t\tmatch.identity || (match.capture[this.UNKNOWN || Matcher.UNKNOWN] = match[0]));\n\n\t\t// @ts-ignore\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {Matcher.PatternFactory} factory\n\t * @param {Matcher.Flags} [flags]\n\t */\n\tstatic define(factory, flags) {\n\t\t/** @type {MatcherEntities} */\n\t\tconst entities = [];\n\t\tentities.flags = '';\n\t\t// const pattern = factory(entity => void entities.push(((entity != null || undefined) && entity) || undefined));\n\t\tconst pattern = factory(entity => {\n\t\t\tif (entity !== null && entity instanceof Matcher) {\n\t\t\t\tentities.push(...entity.entities);\n\n\t\t\t\t!entity.flags || (entities.flags = entities.flags ? Matcher.flags(entities.flags, entity.flags) : entity.flags);\n\n\t\t\t\treturn entity.source;\n\t\t\t} else {\n\t\t\t\tentities.push(((entity != null || undefined) && entity) || undefined);\n\t\t\t}\n\t\t});\n\t\tflags = Matcher.flags('g', flags == null ? pattern.flags : flags, entities.flags);\n\t\treturn new ((this && (this.prototype === Matcher.prototype || this.prototype instanceof RegExp) && this) ||\n\t\t\tMatcher)(pattern, flags, entities);\n\t}\n\n\tstatic flags(...sources) {\n\t\tlet flags = '',\n\t\t\titerative;\n\t\tfor (const source of sources) {\n\t\t\tif (!source || (typeof source !== 'string' && typeof source.flags !== 'string')) continue;\n\t\t\tfor (const flag of source.flags || source)\n\t\t\t\t(flag === 'g' || flag === 'y' ? iterative || !(iterative = true) : flags.includes(flag)) || (flags += flag);\n\t\t}\n\t\t// console.log('%o: ', flags, ...sources);\n\t\treturn flags;\n\t}\n\n\tstatic get sequence() {\n\t\tconst {raw} = String;\n\t\tconst {replace} = Symbol;\n\t\t/**\n\t\t * @param {TemplateStringsArray} template\n\t\t * @param  {...any} spans\n\t\t * @returns {string}\n\t\t */\n\t\tconst sequence = (template, ...spans) =>\n\t\t\tsequence.WHITESPACE[replace](raw(template, ...spans.map(sequence.span)), '');\n\t\t/**\n\t\t * @param {any} value\n\t\t * @returns {string}\n\t\t */\n\t\tsequence.span = value =>\n\t\t\t(value &&\n\t\t\t\t// TODO: Don't coerce to string here?\n\t\t\t\t(typeof value !== 'symbol' && `${value}`)) ||\n\t\t\t'';\n\n\t\tsequence.WHITESPACE = /^\\s+|\\s*\\n\\s*|\\s+$/g;\n\n\t\tObject.defineProperty(Matcher, 'sequence', {value: Object.freeze(sequence), enumerable: true, writable: false});\n\t\treturn sequence;\n\t}\n\n\tstatic get join() {\n\t\tconst {sequence} = this;\n\n\t\tconst join = (...values) =>\n\t\t\tvalues\n\t\t\t\t.map(sequence.span)\n\t\t\t\t.filter(Boolean)\n\t\t\t\t.join('|');\n\n\t\tObject.defineProperty(Matcher, 'join', {value: Object.freeze(join), enumerable: true, writable: false});\n\n\t\treturn join;\n\t}\n}\n\nexport const {\n\t// INSET = (Matcher.INSET = /* Symbol.for */ 'INSET'),\n\t// OUTSET = (Matcher.OUTSET = /* Symbol.for */ 'OUTSET'),\n\tDELIMITER = (Matcher.DELIMITER = /* Symbol.for */ 'DELIMITER'),\n\tUNKNOWN = (Matcher.UNKNOWN = /* Symbol.for */ 'UNKNOWN'),\n\t// LOOKAHEAD = (Matcher.LOOKAHEAD = /* Symbol.for */ 'LOOKAHEAD'),\n\tescape = (Matcher.escape = /** @type {<T>(source: T) => string} */ ((() => {\n\t\tconst {replace} = Symbol;\n\t\treturn source => /[\\\\^$*+?.()|[\\]{}]/g[replace](source, '\\\\$&');\n\t})())),\n\tsequence,\n\tmatchAll = (Matcher.matchAll =\n\t\t/**\n\t\t * @template {RegExp} T\n\t\t * @type {(string: Matcher.Text, matcher: T) => Matcher.Iterator<T> }\n\t\t */\n\t\t//@ts-ignore\n\t\t(() =>\n\t\t\tFunction.call.bind(\n\t\t\t\t// String.prototype.matchAll || // TODO: Uncomment eventually\n\t\t\t\t{\n\t\t\t\t\t/**\n\t\t\t\t\t * @this {string}\n\t\t\t\t\t * @param {RegExp | string} pattern\n\t\t\t\t\t */\n\t\t\t\t\t*matchAll() {\n\t\t\t\t\t\tconst matcher =\n\t\t\t\t\t\t\targuments[0] &&\n\t\t\t\t\t\t\t(arguments[0] instanceof RegExp\n\t\t\t\t\t\t\t\t? Object.setPrototypeOf(RegExp(arguments[0].source, arguments[0].flags || 'g'), arguments[0])\n\t\t\t\t\t\t\t\t: RegExp(arguments[0], 'g'));\n\t\t\t\t\t\tconst string = String(this);\n\n\t\t\t\t\t\tif (!(matcher.flags.includes('g') || matcher.flags.includes('y'))) return void (yield matcher.exec(string));\n\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tlet match, lastIndex = -1;\n\t\t\t\t\t\t\tlastIndex <\n\t\t\t\t\t\t\t((match = matcher.exec(string)) ? (lastIndex = matcher.lastIndex + (match[0].length === 0)) : lastIndex);\n\t\t\t\t\t\t\tyield match, matcher.lastIndex = lastIndex\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t}.matchAll,\n\t\t\t))()),\n} = Matcher;\n\n/** @typedef {MatcherFlags} Matcher.Flags */\n/** @typedef {MatcherText} Matcher.Text */\n/** @typedef {MatcherOperator} Matcher.Operator */\n/** @typedef {MatcherIdentity} Matcher.Identity */\n/** @typedef {MatcherEntity} Matcher.Entity */\n/** @typedef {MatcherCapture} Matcher.Capture */\n/** @typedef {MatcherEntityFactory} Matcher.EntityFactory */\n/** @typedef {MatcherPatternFactory} Matcher.PatternFactory */\n/** @typedef {MatcherPattern} Matcher.Pattern */\n/** @typedef {MatcherEntities} Matcher.Entities */\n/** @template {RegExpMatchArray | RegExpExecArray} T @typedef {MatcherMatchArray} Matcher.MatchArray<T> */\n/** @template {RegExpMatchArray | RegExpExecArray} T @typedef {MatcherMatchResult} Matcher.MatchResult<T> */\n/** @template {RegExp} T @typedef {MatcherIterator} Matcher.Iterator<T> */\n\n// /** @template {RegExp} T  @typedef {IterableIterator<T extends Matcher ? Matcher.Match : RegExpMatchArray>} Matcher.Iterator */\n\nexport {Matcher};\n","﻿const RegExpRange = ((\n  {RegExp, String: {raw}, Symbol: {replace: ReplaceSymbol}, Object: {defineProperty}},\n  {RegExpClass},\n) =>\n  class RegExpRange extends RegExp {\n    constructor(source, flags) {\n      let range;\n      range =\n        source && typeof source === 'object' && source instanceof RegExp\n          ? (flags === undefined && (flags = source.flags), source.source)\n          : (typeof source === 'string' ? source : (source = `${source || ''}`)).trim() &&\n            (source = RegExpClass[ReplaceSymbol](source, '[$1]'));\n\n      if (!range || !RegExpClass.test(range)) {\n        throw TypeError(`Invalid Regular Expression class range: ${range}`);\n      }\n\n      typeof flags === 'string' || (flags = `${flags || ''}` || '');\n\n      flags.includes('u') || !(source.includes('\\\\p{') || source.includes('\\\\u')) || (flags += 'u');\n      super(source, flags);\n      defineProperty(this, 'range', {value: range.slice(1, -1), enumerable: true, writable: false});\n    }\n\n    toString() {\n      return this.range;\n    }\n\n    static range(strings, ...values) {\n      return new (this || RegExpRange)(raw(strings, ...values));\n    }\n  })({String, RegExp, Symbol, Object}, {RegExpClass: /^(?:\\[(?=.*?\\]$)|)((?:\\\\.|[^\\\\\\n\\[\\]]*)*)\\]?$/});\n\nexport const ranges = ((\n  factories,\n  // range = ((raw, RegExp) => (strings, ...values) => {\n  //   try {\n  //     return RegExp(`[${raw(strings, ...values)}]`, 'u').source.slice(1, -1);\n  //   } catch (exception) {}\n  // })(String.raw, RegExp),\n  safeRange = (strings, ...values) => {\n    try {\n      return RegExpRange.range(strings, ...values).source.slice(1, -1);\n    } catch (exception) {}\n  },\n  /** @type {Record<keyof factories, string>} */\n  map = {},\n  proxy = new Proxy(factories, {\n    get: (target, property, group, value) =>\n      property in map\n        ? map[property]\n        : property in factories\n        ? (map[property] = factories[property](safeRange, proxy))\n        : undefined,\n  }),\n  ranges = ({...proxy}, map),\n) => ranges)({\n  UnicodeIDStart: (range, {ID_Start}) => range`_$${ID_Start}`,\n  UnicodeIDContinue: (range, {ID_Continue, ZeroWidthNonJoiner, ZeroWidthJoiner, CombiningGraphemeJoiner}) =>\n    range`_$${ID_Continue}${ZeroWidthNonJoiner}${ZeroWidthJoiner}${CombiningGraphemeJoiner}`,\n  Null: range => range`\\0`,\n  Digit: range => range`0-9`,\n  ControlLetter: range => range`a-zA-Z`,\n  HexLetter: range => range`a-fA-F`,\n  HexDigit: (range, {Digit, HexLetter}) => range`${Digit}${HexLetter}`,\n  GraveAccent: range => range`${'`'}`,\n  ZeroWidthNonJoiner: range => range`\\u200c`,\n  ZeroWidthJoiner: range => range`\\u200d`,\n  ZeroWidthNoBreakSpace: range => range`\\ufeff`,\n  CombiningGraphemeJoiner: range => range`\\u034f`,\n  Whitespace: (range, {ZeroWidthNoBreakSpace}) => range`\\s${ZeroWidthNoBreakSpace}`,\n  ID_Start: range =>\n    range`\\p{ID_Start}` ||\n    range`a-zA-Z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7b9\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab65\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc`,\n  ID_Continue: range =>\n    range`\\p{ID_Continue}` ||\n    range`0-9a-zA-Z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7b9\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab65\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f`,\n});\n\nexport const {\n  Digit,\n  ControlLetter,\n  HexLetter,\n  HexDigit,\n  GraveAccent,\n  Null,\n  ZeroWidthNonJoiner,\n  ZeroWidthJoiner,\n  ZeroWidthNoBreakSpace,\n  Whitespace,\n  ID_Start,\n  ID_Continue,\n  ECMAScript,\n} = ranges;\n\n// ((\n//   raw,\n//   RegExp,\n//   // UnicodeRanges = [\n//   //   /(\\\\)([0-9a-f]{1,4})|\\\\./gi,\n//   //   (match, slash, hex) =>\n//   //     slash\n//   //       ? `${slash}${hex === '0' ? hex : hex.length > 2 ? `u${hex.padStart(4, '0')}` : `x${hex.padStart(2, '0')}`}`\n//   //       : match,\n//   // ],\n//   // normalize = range => range.replace(...UnicodeRanges),\n//   // normalizeRaw = ({raw}) => ({raw: raw.map(normalize)}),\n// ) => (strings, ...values) => {\n//   try {\n//     return RegExp(`[${raw(strings, ...values)}]`, 'u').source.slice(1, -1);\n//   } catch (exception) {}\n// })(String.raw, RegExp),\n","﻿/** Symbol map @type {{ [key: string]: symbol }} */\nconst symbols = {};\n\n/** Unique token records @type {{[symbol: symbol]: }} */\nconst tokens = {};\n\nconst identities = {\n  UnicodeIDStart: 'ECMAScriptUnicodeIDStart',\n  UnicodeIDContinue: 'ECMAScriptUnicodeIDContinue',\n  HexDigits: 'ECMAScriptHexDigits',\n  CodePoint: 'ECMAScriptCodePoint',\n  ControlEscape: 'ECMAScriptControlEscape',\n  ContextualWord: 'ECMAScriptContextualWord',\n  RestrictedWord: 'ECMAScriptRestrictedWord',\n  FutureReservedWord: 'ECMAScriptFutureReservedWord',\n  Keyword: 'ECMAScriptKeyword',\n};\n\nconst goals = {\n  [Symbolic('ECMAScriptGoal')]: {\n    type: undefined,\n    flatten: undefined,\n    fold: undefined,\n    openers: ['{', '(', '[', \"'\", '\"', '`', '/', '/*', '//'],\n    closers: ['}', ')', ']'],\n  },\n  [Symbolic('CommentGoal')]: {type: 'comment', flatten: true, fold: true},\n  [Symbolic('RegExpGoal')]: {\n    type: 'pattern',\n    flatten: undefined,\n    fold: undefined,\n    openers: ['['],\n    closers: [']'],\n    punctuators: ['+', '*', '?', '|', '^', '{', '}', '(', ')'],\n  },\n  [Symbolic('StringGoal')]: {type: 'quote', flatten: true, fold: true},\n  [Symbolic('TemplateLiteralGoal')]: {\n    type: 'quote',\n    flatten: true,\n    fold: false,\n    openers: ['${'],\n  },\n  [Symbolic('FaultGoal')]: {type: 'fault', groups: {}},\n};\n\nconst {[symbols.FaultGoal]: FaultGoal} = goals;\n\nconst groups = {\n  ['{']: {opener: '{', closer: '}'},\n  ['(']: {opener: '(', closer: ')'},\n  ['[']: {opener: '[', closer: ']'},\n  ['//']: {opener: '//', closer: '\\n', goal: symbols.CommentGoal, parentGoal: symbols.ECMAScriptGoal},\n  ['/*']: {opener: '/*', closer: '*/', goal: symbols.CommentGoal, parentGoal: symbols.ECMAScriptGoal},\n  ['/']: {opener: '/', closer: '/', goal: symbols.RegExpGoal, parentGoal: symbols.ECMAScriptGoal},\n  [\"'\"]: {opener: \"'\", closer: \"'\", goal: symbols.StringGoal, parentGoal: symbols.ECMAScriptGoal},\n  ['\"']: {opener: '\"', closer: '\"', goal: symbols.StringGoal, parentGoal: symbols.ECMAScriptGoal},\n  ['`']: {\n    opener: '`',\n    closer: '`',\n    goal: symbols.TemplateLiteralGoal,\n    parentGoal: symbols.ECMAScriptGoal,\n  },\n  ['${']: {\n    opener: '${',\n    closer: '}',\n    goal: symbols.ECMAScriptGoal,\n    parentGoal: symbols.TemplateLiteralGoal,\n  },\n};\n\n/**  @type {ECMAScript.Keywords} */\nconst keywords = {};\n\n{\n  const {create, freeze, entries, getOwnPropertySymbols, getOwnPropertyNames, setPrototypeOf} = Object;\n\n  // const lookups = new Set();\n  // lookups.punctuators = new Set();\n  // lookups.openers = new Set();\n  // lookups.closers = new Set();\n\n  const punctuators = create(null);\n  // const openers = [];\n  // const closers = [];\n\n  for (const opener of getOwnPropertyNames(groups)) {\n    const {[opener]: group} = groups;\n    'goal' in group && (group.goal = goals[group.goal] || FaultGoal);\n    'parentGoal' in group && (group.parentGoal = goals[group.parentGoal] || FaultGoal);\n    freeze(group);\n  }\n\n  for (const symbol of getOwnPropertySymbols(goals)) {\n    const {[symbol]: goal} = goals;\n\n    goal.name = (goal.symbol = symbol).description.replace(/Goal$/, '');\n    goal.tokens = tokens[symbol] = {};\n    goal.groups = [];\n\n    if (goal.punctuators) {\n      for (const punctuator of (goal.punctuators = [...goal.punctuators]))\n        punctuators[punctuator] = !(goal.punctuators[punctuator] = true);\n      freeze(setPrototypeOf(goal.punctuators, punctuators));\n    }\n\n    if (goal.closers) {\n      for (const closer of (goal.closers = [...goal.closers])) punctuators[closer] = !(goal.closers[closer] = true);\n      freeze(setPrototypeOf(goal.closers, punctuators));\n    }\n\n    if (goal.openers) {\n      for (const opener of (goal.openers = [...goal.openers])) {\n        const group = (goal.groups[opener] = groups[opener]);\n        punctuators[opener] = !(goal.openers[opener] = true);\n        GoalSpecificTokenRecord(goal, group.opener, 'opener', {group});\n        GoalSpecificTokenRecord(goal, group.closer, 'closer', {group});\n      }\n      freeze(setPrototypeOf(goal.openers, punctuators));\n    }\n\n    freeze(goal.groups);\n    freeze(goal.tokens);\n    freeze(goal);\n  }\n\n  freeze(punctuators);\n  // freeze(closers);\n  // freeze(openers);\n\n  freeze(goals);\n  freeze(groups);\n  freeze(identities);\n  freeze(symbols);\n\n  for (const [identity, list] of entries({\n    [identities.Keyword]:\n      'await break case catch class const continue debugger default delete do else export extends finally for function if import in instanceof let new return super switch this throw try typeof var void while with yield',\n    [identities.RestrictedWord]: 'interface implements package private protected public',\n    [identities.FutureReservedWord]: 'enum',\n    [identities.ContextualWord]: 'arguments async as from of static',\n  })) {\n    for (const keyword of list.split(/\\s+/)) keywords[keyword] = identity;\n  }\n  freeze(keywords);\n}\n\nexport {identities, goals, groups, symbols, keywords, FaultGoal};\n\n/**\n * Creates a symbolically mapped goal-specific token record\n *\n * @template {{}} T\n * @param {goal} goal\n * @param {string} text\n * @param {type} type\n * @param {T} properties\n */\nfunction GoalSpecificTokenRecord(goal, text, type, properties) {\n  const symbol = Symbol(`‹${goal.name} ${text}›`);\n  return (goal.tokens[text] = goal.tokens[symbol] = tokens[symbol] = {symbol, text, type, goal, ...properties});\n}\n\nfunction Symbolic(key, description = key) {\n  return (symbols[key] = Symbol(description));\n}\n\n/** @typedef {typeof goals} goals */\n/** @typedef {goals[keyof goals]} goal */\n/** @typedef {goal['type']} type */\n/** @typedef {{symbol: symbol, text: string, type: type, goal?: goal, group?: group}} token */\n/** @typedef {typeof groups} groups */\n/** @typedef {groups[keyof groups]} group */\n\n/**\n * @typedef {'await'|'break'|'case'|'catch'|'class'|'const'|'continue'|'debugger'|'default'|'delete'|'do'|'else'|'export'|'extends'|'finally'|'for'|'function'|'if'|'import'|'in'|'instanceof'|'new'|'return'|'super'|'switch'|'this'|'throw'|'try'|'typeof'|'var'|'void'|'while'|'with'|'yield'} ECMAScript.Keyword\n * @typedef {'interface'|'implements'|'package'|'private'|'protected'|'public'} ECMAScript.RestrictedWord\n * @typedef {'enum'} ECMAScript.FutureReservedWord\n * @typedef {'arguments'|'async'|'as'|'from'|'of'|'static'} ECMAScript.ContextualKeyword\n * @typedef {Record<ECMAScript.Keyword|ECMAScript.RestrictedWord|ECMAScript.FutureReservedWord|ECMAScript.ContextualKeyword, symbol>} ECMAScript.Keywords\n */\n","﻿/** Creates a list from a Whitespace-separated string @type { (string) => string[] } */\nexport const List = RegExp.prototype[Symbol.split].bind(/\\s+/g);\n\nconst stats = {\n  captureCount: 0,\n  contextCount: 0,\n  tokenCount: 0,\n  totalCaptures: 0,\n  totalContexts: 0,\n  totalTokens: 0,\n};\n\n/** @template {{}} T @param {T} context @returns {T & stats} */\nexport const initializeContext = context => Object.assign(context, stats);\n\nexport const capture = (identity, match, text) => {\n  match.capture[(match.identity = identity)] = text || match[0];\n  (match.fault = identity === 'fault') && (match.flatten = false);\n  return match;\n};\n\n/**\n * Safely mutates matcher state to open a new context.\n *\n * @param {*} text - Text of the intended { type = \"opener\" } token\n * @param {*} state - Matcher state\n * @returns {undefined | string} - String when context is **not** open\n */\nexport const open = (text, state) => {\n  // const {goal: initialGoal, groups} = state;\n  const {\n    contexts,\n    context: parentContext,\n    context: {depth: index, goal: initialGoal},\n    groups,\n  } = state;\n  const group = initialGoal.groups[text];\n\n  if (!group) return initialGoal.type || 'sequence';\n  groups.splice(index, groups.length, group);\n  groups.closers.splice(index, groups.closers.length, group.closer);\n\n  parentContext.contextCount++;\n\n  const goal = group.goal === undefined ? initialGoal : group.goal;\n\n  state.nextContext = contexts[index] = initializeContext({\n    id: `${parentContext.id}${goal !== initialGoal ? ` ‹${group.opener}›&#x000A;«${goal.name}»` : ` ‹${group.opener}›`}`,\n    number: contexts.count++,\n    depth: index + 1,\n    parentContext,\n    goal,\n    group,\n    state,\n  });\n};\n\n/**\n * Safely mutates matcher state to close the current context.\n *\n * @param {*} text - Text of the intended { type = \"closer\" } token\n * @param {*} state - Matcher state\n * @returns {undefined | string} - String when context is **not** closed\n */\nexport const close = (text, state) => {\n  // const {goal: initialGoal, group: initialGroup, groups} = state;\n  const {\n    contexts,\n    context: {\n      goal: initialGoal,\n      group: initialGroup,\n      parentContext,\n      captureCount,\n      contextCount,\n      tokenCount,\n      totalCaptures,\n      totalContexts,\n      totalTokens,\n    },\n    groups,\n  } = state;\n  const index = groups.closers.lastIndexOf(text);\n\n  if (index === -1 || index !== groups.length - 1) return fault(text, state);\n\n  parentContext.totalContexts += totalContexts + contextCount;\n  parentContext.totalCaptures += totalCaptures + captureCount;\n  parentContext.totalTokens += totalTokens + tokenCount;\n\n  groups.closers.splice(index, groups.closers.length);\n  groups.splice(index, groups.length);\n  state.nextContext = parentContext;\n};\n\nexport const forward = (search, match, state) => {\n  search &&\n    (typeof search === 'object'\n      ? ((search.lastIndex = match.index + match[0].length), (state.nextOffset = match.input.search(search)))\n      : (state.nextOffset = match.input.indexOf(search, match.index + match[0].length)));\n};\n\n/**\n * @returns {'fault'}\n */\nexport const fault = (text, state) => {\n  console.warn(text, {...state});\n  return 'fault';\n};\n","﻿import {Matcher} from '../../../modules/matcher/matcher.js';\nimport {ranges} from './ranges.js';\nimport {keywords, goals, symbols, FaultGoal} from './definitions.js';\nimport {capture, forward, fault, open, close} from './helpers.js';\n\nconst {\n  [symbols.ECMAScriptGoal]: ECMAScriptGoal,\n  [symbols.CommentGoal]: CommentGoal,\n  [symbols.RegExpGoal]: RegExpGoal,\n  [symbols.StringGoal]: StringGoal,\n  [symbols.TemplateLiteralGoal]: TemplateLiteralGoal,\n} = goals;\n\nconst dummy = async () => {\n  /*\n  prettier-ignore\n  */ //               // Make sure this block never lints\n  {\n    let i\\u0032;\n    this.new.target;\n\n    a = b             // Identifiers always divide (never ASI)\n                      /(div)/g.exec(c).map(d);\n\n                      // ExpressionStart never divide\n    ( ([              /([(regexp)])/g ] )/ [] );\n    ( [] /( [         /([(regexp)])/g ] )/ [] );\n    ( ([]) /( [       /([(regexp)])/g ] )/ [] );\n    ( [] /* */ /( [   /([(regexp)])/g ] )/ [] );\n\n                      // Literals always divide (never ASI)\n    ( []              /([(div)])/g / [] );\n    ( ([])            /([(div)])/g / [] );\n    ( [] /* */        /([(div)])/g / [] );\n                      // FIXME: ObjectLiteral is \"a literal\"\n    const x = {}      /(div)/g.exec(c).map(d);\n\n\n                      // Declaration (ASI) then ExpressionStart\n    function ƒ () {}  /(regexp)/g.exec(c).map(d);\n\n                      // FIXME: Function/ClassExpression is \"an expression\"\n    const y = function ƒ () {}\n                      /(div)/g.exec(c).map(d);\n\n                      // Keyword always regexp (regardless of ASI)\n    return await/*  *//(regexp)/g.exec(c).map(d);\n\n    // Matt Austin's\n    Function(\"arg=`\", \"/*body`){});({x: this/**/\");\n    (function(arg=`/*``*/){/*body`){});({x: this/**/})\n\n    // Multiline Strings\n    [\n      '\\\n      a\\a',           // quote›‹punctuator, comment\n      \"\\\n      \\\\n\\\\b\"/**/     // quote›‹comment, comment\n    ];\n  }\n};\n\nconst ECMAScriptGrammar = {\n  Break: ({lf = true, crlf = false} = {}) =>\n    Matcher.define(\n      entity => Matcher.sequence`(\n        ${Matcher.join(lf && '\\\\n', crlf && '\\\\r\\\\n')}\n        ${entity((text, entity, match, state) => {\n          const group = state.context.group;\n          capture(group && group.closer === '\\n' ? close(text, state) || 'closer' : 'break', match, text);\n          match.flatten = false;\n        })}\n      )`,\n    ),\n  Whitespace: () =>\n    Matcher.define(\n      entity => Matcher.sequence`(\n        \\s+\n        ${entity((text, entity, match, state) => {\n          capture((match.flatten = state.lineOffset !== match.index) ? 'whitespace' : 'inset', match, text);\n        })}\n      )`,\n    ),\n  Escape: () =>\n    Matcher.define(\n      entity => Matcher.sequence`(\n        \\\\u[${ranges.HexDigit}][${ranges.HexDigit}][${ranges.HexDigit}][${ranges.HexDigit}]\n        ${entity((text, entity, match, state) => {\n          const context = state.context;\n          capture(\n            context.goal.type ||\n              ((match.flatten =\n                context.goal === ECMAScriptGoal &&\n                state.previousToken != null &&\n                state.previousToken.type === 'identifier' &&\n                ECMAScriptUnicodeIDContinue.test(String.fromCodePoint(parseInt(text.slice(2), 16))))\n                ? 'identifier' // `let i\\u0032` -> identifier tokens\n                : 'escape'),\n            match,\n            text,\n          );\n        })})\n      |(\n        ${entity((text, entity, match, state) => {\n          capture(state.context.goal.type || 'escape', match, (match.capture[keywords[text]] = text));\n        })}\n        \\\\f|\\\\n|\\\\r|\\\\t|\\\\v|\\\\c[${ranges.ControlLetter}]\n        |\\\\x[${ranges.HexDigit}][${ranges.HexDigit}]\n        |\\\\u\\{[${ranges.HexDigit}]*\\}\n        |\\\\.\n      )`,\n    ),\n  Comment: () =>\n    Matcher.define(\n      entity => Matcher.sequence`(\n        \\/\\/|\\/\\*\n        ${entity((text, entity, match, state) => {\n          const context = state.context;\n          capture(\n            context.goal === ECMAScriptGoal\n              ? open(text, state) ||\n                  // Safely fast skip to end of comment\n                  (forward(text === '//' ? '\\n' : '*/', match, state),\n                  // No need to track delimiter\n                  CommentGoal.type)\n              : context.goal !== CommentGoal\n              ? context.goal.type || 'sequence'\n              : context.group.closer !== text\n              ? CommentGoal.type\n              : close(text, state) || (match.punctuator = CommentGoal.type),\n            match,\n            text,\n          );\n        })}\n      )`,\n    ),\n  StringLiteral: () =>\n    Matcher.define(\n      entity => Matcher.sequence`(\n        \"|'\n        ${entity((text, entity, match, state) => {\n          const context = state.context;\n          capture(\n            context.goal === ECMAScriptGoal\n              ? open(text, state) ||\n                  // TODO: Investigate why regexp forward is slow\n                  // (void forward(text === '\"' ? /(?:[^\"\\\\\\n]+?(?=\\\\.|\")|\\\\.)*?\"/g : /(?:[^'\\\\\\n]+?(?=\\\\.|')|\\\\.)*?'/g, match, state)) ||\n                  ((match.punctuator = StringGoal.type), 'opener')\n              : context.goal !== StringGoal\n              ? context.goal.type || 'sequence'\n              : context.group.closer !== text\n              ? StringGoal.type\n              : ((match.flatten = false), close(text, state) || ((match.punctuator = StringGoal.type), 'closer')),\n            match,\n            text,\n          );\n        })}\n      )`,\n    ),\n  TemplateLiteral: () =>\n    Matcher.define(\n      entity => Matcher.sequence`(\n        ${ranges.GraveAccent}\n        ${entity((text, entity, match, state) => {\n          // const {goal, group} = state.context;\n          const context = state.context;\n          capture(\n            context.goal === ECMAScriptGoal\n              ? open(text, state) || ((match.punctuator = TemplateLiteralGoal.type), 'opener')\n              : context.goal !== TemplateLiteralGoal\n              ? ((match.flatten = true), context.goal.type || 'sequence')\n              : context.group.closer !== text\n              ? TemplateLiteralGoal.type\n              : close(text, state) || ((match.punctuator = TemplateLiteralGoal.type), 'closer'),\n            match,\n            text,\n          );\n        })}\n      )`,\n    ),\n  Opener: () =>\n    Matcher.define(\n      entity => Matcher.sequence`(\n        \\$\\{|\\{|\\(|\\[\n        ${entity((text, entity, match, state) => {\n          const context = state.context;\n          capture(\n            // openers && (text in openers ? openers.text : (openers.text = openers.includes(text)))\n            context.goal.punctuators && context.goal.punctuators[text] === true\n              ? (match.punctuator = 'combinator')\n              : context.goal.openers &&\n                context.goal.openers[text] === true &&\n                (text !== '[' || context.goal !== RegExpGoal || context.group.opener !== '[')\n              ? open(text, state) || 'opener'\n              : ((match.flatten = true), context.goal.type || 'sequence'),\n            match,\n            text,\n          );\n        })}\n      )`,\n    ),\n  Closer: () =>\n    Matcher.define(\n      entity => Matcher.sequence`(\n        \\}|\\)|\\]\n        ${entity((text, entity, match, state) => {\n          const context = state.context;\n          // const goal = state.context.goal;\n          // const {closers, punctuators, type} = state.context.goal;\n          // goal === ECMAScriptGoal || (goal.closers && goal.closers.includes(text))\n          // goal.punctuators && goal.punctuators.includes(text)\n          capture(\n            context.goal.punctuators && context.goal.punctuators[text] === true\n              ? (match.punctuator = 'combinator')\n              : context.goal.closers && context.goal.closers[text] === true\n              ? close(text, state) || 'closer'\n              : ((match.flatten = true), context.goal.type || 'sequence'),\n            match,\n            text,\n          );\n        })}\n      )`,\n    ),\n  Solidus: () =>\n    Matcher.define(\n      entity => Matcher.sequence`(\n        \\*\\/|\\/=|\\/\n        ${entity((text, entity, match, state) => {\n          let previousAtom;\n          const context = state.context;\n          capture(\n            context.goal === CommentGoal\n              ? (context.group.closer === text && close(text, state)) || (match.punctuator = context.goal.type)\n              : context.goal === RegExpGoal && context.group.closer !== ']' // ie /…*/ or /…/\n              ? close('/', state) || ((match.punctuator = context.goal.type), 'closer')\n              : context.goal !== ECMAScriptGoal\n              ? context.goal.type || 'sequence'\n              : text[0] === '*'\n              ? fault(text, state)\n              : // ECMAScriptGoal\n              /**\n               * TODO: Refine the necessary criteria for RegExp vs Div\n               * SEE: https://github.com/sweet-js/sweet-core/wiki/design\n               * SEE: https://inimino.org/~inimino/blog/javascript_semicolons\n               * SEE: https://github.com/guybedford/es-module-shims/blob/master/src/lexer.js\n               */\n              !(previousAtom = state.previousAtom) ||\n                (previousAtom.type === 'operator'\n                  ? previousAtom.text !== '++' && previousAtom.text !== '--'\n                  : previousAtom.type === 'closer'\n                  ? previousAtom.text === '}'\n                  : previousAtom.type === 'opener' || previousAtom.type === 'keyword')\n              ? open(text, state) || ((match.punctuator = 'pattern'), 'opener')\n              : (match.punctuator = 'operator'),\n            match,\n            text,\n          );\n        })}\n      )`,\n    ),\n  Operator: () =>\n    Matcher.define(\n      entity => Matcher.sequence`(\n        ${entity((text, entity, match, state) => {\n          // TODO: Add conditional lookahead (or look behined)\n          // const goal = state.context.goal;\n          const context = state.context;\n          capture(\n            context.goal === ECMAScriptGoal\n              ? 'operator'\n              : context.goal.punctuators && context.goal.punctuators[text] === true\n              ? (match.punctuator = 'punctuation')\n              : ((match.flatten = true), context.goal.type || 'sequence'),\n            match,\n            text,\n          );\n        })}\n        ,|;|\\.\\.\\.|\\.|:|\\?|=>\n        |\\+\\+|--\n        |\\+=|-=|\\*\\*=|\\*=\n        |&&|&=|&|\\|\\||\\|=|\\||%=|%|\\^=|\\^|~=|~\n        |<<=|<<|<=|<|>>>=|>>>|>>=|>>|>=|>\n        |!==|!=|!|===|==|=\n        |\\+|-|\\*\\*|\\*\n      )`,\n    ),\n  Keyword: () =>\n    Matcher.define(\n      entity => Matcher.sequence`\\b(\n        ${Object.keys(keywords).join('|')}\n        ${entity((text, entity, match, state) => {\n          let previousAtom, keywordSymbol;\n          // const goal = state.context.goal;\n          const context = state.context;\n          // TODO: Add conditional lookahead (or look behined)\n          capture(\n            (match.flatten = context.goal !== ECMAScriptGoal)\n              ? context.goal.type || 'sequence'\n              : ((keywordSymbol = keywords[text]), (previousAtom = state.previousAtom)) && previousAtom.text === '.'\n              ? 'identifier'\n              : 'keyword',\n            match,\n            text,\n          );\n          keywordSymbol &&\n            ((context.keywords = (context.keywords || 0) + 1),\n            (context[`${(match.capture[keywordSymbol] = text)}-keyword-index`] = match.index));\n        })}\n      )\\b(?=[^\\s$_:]|\\s+[^:])`,\n    ),\n  Identifier: (RegExpFlags = /^[gimsuy]+$/) =>\n    Matcher.define(\n      entity => Matcher.sequence`(\n        [${ranges.UnicodeIDStart}][${ranges.UnicodeIDContinue}]*\n        ${entity((text, entity, match, state) => {\n          let previousToken;\n          const context = state.context;\n          // TODO: Add conditional lookahead (or look behined)\n          capture(\n            context.goal !== ECMAScriptGoal\n              ? context.goal.type || 'sequence'\n              : (previousToken = state.previousToken) &&\n                previousToken.punctuator === 'pattern' &&\n                RegExpFlags.test(text)\n              ? ((match.punctuator = RegExpGoal.type), 'closer')\n              : ((match.flatten = true), 'identifier'),\n            match,\n            text,\n          );\n        })}\n      )`,\n      ECMAScriptIdentifierFlags,\n    ),\n  IdentifierStart: () =>\n    Matcher.define(\n      entity => Matcher.sequence`(\n        ${entity(symbols.UnicodeIDStart)}[${ranges.UnicodeIDStart}]\n      )`,\n      ECMAScriptIdentifierFlags,\n    ),\n  IdentifierContinue: () =>\n    Matcher.define(\n      entity => Matcher.sequence`(\n        ${entity(symbols.UnicodeIDContinue)}[${ranges.UnicodeIDContinue}]+\n      )`,\n      ECMAScriptIdentifierFlags,\n    ),\n};\n\nconst ECMAScriptIdentifierFlags = `${ranges.UnicodeIDStart}${ranges.UnicodeIDContinue}`.includes('\\\\p{')\n  ? 'u'\n  : undefined;\nconst ECMAScriptUnicodeIDContinue = RegExp(ECMAScriptGrammar.IdentifierContinue(), ECMAScriptIdentifierFlags);\n\nexport const matcher = Matcher.define(\n  entity => Matcher.sequence`\n    ${entity(ECMAScriptGrammar.Break())}\n    |${entity(ECMAScriptGrammar.Whitespace())}\n    |${entity(ECMAScriptGrammar.Escape())}\n    |${entity(ECMAScriptGrammar.Comment())}\n    |${entity(ECMAScriptGrammar.StringLiteral())}\n    |${entity(ECMAScriptGrammar.TemplateLiteral())}\n    |${entity(ECMAScriptGrammar.Opener())}\n    |${entity(ECMAScriptGrammar.Closer())}\n    |${entity(ECMAScriptGrammar.Solidus())}\n    |${entity(ECMAScriptGrammar.Operator())}\n    |${entity(ECMAScriptGrammar.Keyword())}\n    |${entity(ECMAScriptGrammar.Identifier())}\n    |\\d+\n    |.\n  `,\n  'gu',\n);\n\nmatcher.goal = ECMAScriptGoal;\n","﻿// / <reference path=\"../../../modules/matcher/types.d.ts\" />\n/// <reference path=\"./types.d.ts\" />\n\nexport const {createTokenFromMatch, createMatcherInstance, createString, countLineBreaks} = (() => {\n  const {\n    RegExp,\n    Object,\n    Object: {create, assign, setPrototypeOf, defineProperty, defineProperties, getOwnPropertyDescriptors},\n    String,\n  } = globalThis;\n\n  /** @typedef {RegExpConstructor['prototype']} Matcher */\n\n  /** @type {<T extends {}, U extends string | symbol, V>(target: T, property: U, value: V) => T & {readonly [property: U]: V }} */\n  const defineEnumerableConstant = (target, property, value) =>\n    defineProperty(target, property, {value, writable: false, configurable: false, enumerable: true});\n\n  /**\n   * @template {Matcher} T\n   * @template {{}} U\n   * @param {T} matcher\n   * @param {TokenizerState<T, U>} [state]\n   * @returns {TokenMatcher<U>}\n   */\n  const createMatcherInstance = (matcher, state) =>\n    defineProperty(\n      // (matcher = (matcher instanceof RegExp && createMatcherClone(matcher)) || RegExp(matcher, 'g')),\n      // 'state',\n      // defineEnumerableConstant(state || create(null), 'matcher', matcher),\n      ((state || (state = create(null))).matcher =\n        (matcher && matcher instanceof RegExp && createMatcherClone(matcher)) || RegExp(matcher, 'g')),\n      'state',\n      {value: state},\n    );\n\n  /**\n   * @template {Matcher} T\n   * @template {T} U\n   * @template {{}} V\n   * @type {(matcher: T & V, instance?: U) => U & V}\n   * @param {T} param0\n   * @param {U} [param1]\n   * @returns {U}\n   */\n  const createMatcherClone = ({constructor: {prototype}, source, flags, lastIndex, ...properties}, instance) => (\n    (instance = assign(instance || RegExp(source, flags || 'g'), properties)),\n    prototype && setPrototypeOf(instance, prototype),\n    instance\n  );\n\n  /** @type {(value: any) => string} */\n  const createString = String;\n\n  /** @type {(string: string, sequence: string , index?: number) => number} */\n  const indexOf = Function.call.bind(String.prototype.indexOf);\n\n  /** @type {(string: string) => number} */\n  const countLineBreaks = text => {\n    let breaks = 0;\n    for (let index = -1; (index = indexOf(text, '\\n', index + 1)) > -1; breaks++);\n    return breaks;\n  };\n\n  /**\n   * @type {<M extends MatchArray, T extends {}>(init: MatchResult<M>) => Token<T>}\n   * @param {MatchResult<MatchArray>} param0\n   */\n  const createTokenFromMatch = ({0: text, identity, capture, index}) => ({\n    type: (identity && (identity.description || identity)) || 'text',\n    text,\n    breaks: countLineBreaks(text),\n    inset: (capture && capture.inset) || '',\n    offset: index,\n    // hint: getOwnPropertyNames(capture).join(' '),\n    // capture,\n  });\n\n  return {createTokenFromMatch, createMatcherInstance, createString, countLineBreaks};\n})();\n","﻿/// <reference path=\"./types.d.ts\" />\n\nimport {createTokenFromMatch, createMatcherInstance, createString} from './helpers.js';\n\n/**\n * @type { {<T extends Matcher, U extends {} = {}>(sourceText: string, initialState?: Partial<TokenizerState<undefined, U>): IterableIterator<Token<U>>} }\n */\nconst createTokenizer = (() => {\n  /** @type {ObjectConstructor} */\n  const Object = globalThis.Object;\n  const {freeze, assign, defineProperties} = Object;\n  const properties = Object.getOwnPropertyDescriptors(\n    freeze(\n      class Tokenizer {\n        /**\n         * @template {Matcher} T\n         * @template {{}} U\n         */\n        *tokenize() {\n          'use strict';\n          /** @type {Token<U>} */\n          // let next;\n          /** @type {{createToken: typeof createTokenFromMatch, initializeState: <V>(state: V) => V & TokenizerState<T, U>}} */\n          const createToken = (this && this.createToken) || createTokenFromMatch;\n          /** @type {string} */\n          const string = createString(arguments[0]);\n          /** @type {TokenMatcher<U>} */\n          const matcher = createMatcherInstance(this.matcher, assign(arguments[1] || {}, {sourceText: string}));\n          /** @type {TokenizerState<T, U>} */\n          const state = matcher.state;\n          this.initializeState && this.initializeState(state);\n          matcher.exec = matcher.exec; //.bind(matcher);\n          // freeze(matcher);\n          // console.log(this, {string, matcher, state}, [...arguments]);\n          for (\n            let match, token, next, index = 0;\n            // Abort on first failed match\n            (match = matcher.exec(string)) ||\n            //   but first yield a lastToken if present\n            void (next && (yield next));\n            // We hold back one grace token\n            (token = createToken(match, state)) &&\n            //  until createToken(…) !== undefined (ie new token)\n            //  set the incremental token index for this lastToken\n            (((state.lastToken = token).index = index++),\n            //  and finally push the previous lastToken and yield\n            next && (yield next),\n            (next = token))\n          );\n\n          console.log({...state});\n        }\n      }.prototype,\n    ),\n  );\n  return instance => defineProperties(instance, properties);\n})();\n\nexport default //\n/**\n * @param {import('/modules/matcher/matcher.js').Matcher} matcher\n * @param {any} [overrides]\n */\n(matcher, overrides) => {\n  /** @type {ObjectConstructor} */\n  const {freeze} = globalThis.Object;\n\n  const tokenizer = createTokenizer({\n    createToken: createTokenFromMatch,\n    /** @type {(state: {}) =>  void} */\n    initializeState: undefined,\n    matcher: freeze(createMatcherInstance(matcher)),\n  });\n\n  // tokenizer.tokenize = createTokenizer.bind(tokenizer, matcherInstance);\n  const mode = {syntax: 'matcher', tokenizer};\n  const options = {};\n  overrides &&\n    ({\n      syntax: mode.syntax = mode.syntax,\n      syntax: options.syntax = mode.syntax,\n      aliases: options.aliases,\n      preregister: options.preregister,\n      createToken: tokenizer.createToken = tokenizer.createToken,\n      initializeState: tokenizer.initializeState,\n      // tokenizer: tokenizer.tokenize = createTokenizer.bind(tokenizer, matcherInstance),\n      ...overrides\n    } = overrides);\n  // const parser = new Parser({mode, tokenizer, url: import.meta.url});\n\n  freeze(tokenizer);\n\n  return (\n    /**\n     * @param {import('/markup/packages/tokenizer/lib/api').API} markup\n     */\n    async markup => {\n      const parser = markup.parsers[0];\n\n      options.preregister && options.preregister(parser);\n\n      parser.register(mode, options);\n      console.log(parser);\n      return {...overrides};\n    }\n  );\n};\n","﻿import {matcher} from './matcher.js';\nimport {initializeContext} from './helpers.js';\n// import {FaultGoal, goals, symbols} from './definitions.js';\nimport bootstrap from '../matcher/matcher.js';\nimport {countLineBreaks} from '../matcher/helpers.js';\n\nconst {goal: rootGoal} = matcher;\nconst {name: rootGoalName} = rootGoal;\n// const {\n//   [symbols.ECMAScriptGoal]: ECMAScriptGoal,\n//   [symbols.CommentGoal]: CommentGoal,\n//   [symbols.RegExpGoal]: RegExpGoal,\n//   [symbols.StringGoal]: StringGoal,\n//   [symbols.TemplateLiteralGoal]: TemplateLiteralGoal,\n// } = goals;\n\nexport default bootstrap(matcher, {\n  syntax: 'ecmascript',\n  aliases: ['es', 'js', 'javascript'],\n  initializeState: state => {\n    (state.groups = []).closers = [];\n    state.lineOffset = state.lineIndex = 0;\n    state.lineFault = false;\n    const contexts = (state.contexts = Array(100));\n    const context = initializeContext({\n      id: `«${rootGoal.name}»`,\n      number: (contexts.count = 1),\n      depth: 0,\n      parent: undefined,\n      goal: rootGoal,\n      group: undefined,\n      state,\n    });\n    contexts[-1] = state.context = context;\n  },\n  preregister: parser => {\n    parser.unregister('es');\n    parser.unregister('ecmascript');\n  },\n  createToken: (match, state) => {\n    let currentGoal,\n      goalName,\n      goalType,\n      contextId,\n      text,\n      type,\n      fault,\n      punctuator,\n      offset,\n      inset,\n      breaks,\n      delimiter,\n      comment,\n      whitespace,\n      flatten,\n      fold,\n      columnNumber,\n      lineNumber,\n      tokenNumber,\n      captureNumber,\n      hint;\n\n    const {context, nextContext, lineIndex, lineOffset, nextOffset, previousToken} = state;\n\n    /* Capture */\n\n    ({\n      0: text,\n      capture: {inset},\n      identity: type,\n      flatten,\n      fault,\n      punctuator,\n      index: offset,\n    } = match);\n\n    if (!text) return;\n\n    /* Context */\n\n    nextContext && (state.nextContext = void (nextContext !== context && (state.context = nextContext)));\n\n    ({id: contextId, goal: currentGoal} = context);\n    ({name: goalName, type: goalType} = currentGoal);\n\n    nextOffset &&\n      (state.nextOffset = void (nextOffset > offset && (text = match.input.slice(offset, nextOffset)),\n      (state.matcher.lastIndex = nextOffset)));\n\n    breaks = (text === '\\n' && 1) || countLineBreaks(text);\n    comment = type === 'comment' || punctuator === 'comment';\n    delimiter = type === 'closer' || type === 'opener';\n    whitespace = !delimiter && (type === 'whitespace' || type === 'break' || type === 'inset');\n\n    type || (type = (!delimiter && !fault && goalType) || 'text');\n\n    if (breaks) {\n      state.lineIndex += breaks;\n      state.lineOffset = offset + (text === '\\n' ? 1 : text.lastIndexOf('\\n'));\n    }\n\n    /* Flattening / Token Folding */\n\n    flatten === false || flatten === true || (flatten = !delimiter && currentGoal.flatten === true);\n\n    captureNumber = ++context.captureCount;\n\n    if (\n      (fold = flatten) && // fold only if flatten is allowed\n      previousToken != null &&\n      previousToken.context === context && // never fold across contexts\n      previousToken.fold === true &&\n      (previousToken.type === type || (currentGoal.fold === true && (previousToken.type = currentGoal.type)))\n    ) {\n      previousToken.text += text;\n      breaks && (previousToken.breaks += breaks);\n    } else {\n      /* Token Creation */\n      flatten = false;\n      columnNumber = 1 + (offset - lineOffset || 0);\n      lineNumber = 1 + (lineIndex || 0);\n      tokenNumber = ++context.tokenCount;\n\n      hint = `${(delimiter ? type : goalType && `in-${goalType}`) ||\n        ''}&#x000A;${contextId} #${tokenNumber}&#x000A;(${lineNumber}:${columnNumber})`;\n\n      return (state.previousToken = state[whitespace || comment ? 'previousTrivia' : 'previousAtom'] = {\n        type,\n        text,\n        offset,\n        breaks,\n        inset,\n        columnNumber,\n        lineNumber,\n        punctuator,\n        fault,\n        fold,\n        flatten,\n        delimiter,\n        whitespace,\n        comment,\n        hint,\n\n        captureNumber,\n        tokenNumber,\n\n        context,\n        lineIndex,\n        lineOffset,\n      });\n    }\n  },\n  sourceURL: './matcher.js',\n  sourceType: 'es',\n\n  resolveSourceType: (defaultType, {sourceType, resourceType, options}) => {\n    // console.log({defaultType, sourceType, resourceType});\n    if (resourceType === 'javascript' && !sourceType) return 'es';\n  },\n});\n","export * from './experimental.extended.js';\nimport experimentalExtendedAPI from './experimental.extended.js';\nimport experimentalES from '../../../experimental/es/playground.js';\n\n// Integrate experimental ECMAScript mapping it to the\n//   \"es\" mode and \"ecmascript\" alias, but leaving the\n//   normal JavaScript intact for both \"js\" and its\n//   \"javascript\" alias.\n\nexperimentalES(experimentalExtendedAPI);\n\nexport default experimentalExtendedAPI;\n"],"names":["document","Element","Node","Text","DocumentFragment","createElement","createText","createFragment","dom.document","pseudom.native","pseudom.pseudo","Tokenizer","sequence","countLineBreaks"],"mappings":"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"}