{"version":3,"file":"tokenizer.browser.es.js","sources":["../../packages/tokenizer/lib/core.js","../../packages/tokenizer/lib/api.js","../../packages/pseudom/pseudo.js","../../packages/pseudom/native.js","../../packages/pseudom/pseudom.js","../../packages/tokenizer/extensions/helpers.js","../../packages/tokenizer/extensions/dom.js","../../experimental/matcher/matcher.js","../../experimental/es/ranges.js","../../experimental/es/helpers.js","../../experimental/es/definitions.js","../../experimental/es/matcher.js","../../experimental/matcher/helpers.js","../../experimental/es/mode.js","../../experimental/es/playground.js","../../packages/tokenizer/browser/experimental.es.js"],"sourcesContent":["﻿export const TOKENIZERS = 'tokenizers';\nexport const MAPPINGS = 'mappings';\nexport const MODES = 'modes';\n\nconst none = {\n  syntax: 'markup',\n  matcher: /([\\s\\n]+)|(\\\\(?:(?:\\\\\\\\)*\\\\|[^\\\\\\s])?|\\/\\/+|\\/\\*+|\\*+\\/|\\(|\\)|\\[|\\]|,|;|\\.\\.\\.|\\.|\\b:\\/\\/\\b|::|:|\\?|`|\"|'|\\$\\{|\\{|\\}|=>|<\\/|\\/>|\\++|\\-+|\\*+|&+|\\|+|=+|!={0,3}|<{1,3}=?|>{1,2}=?)|[+\\-*/&|^%<>~!]=?/g,\n};\n\nconst define = (instance, property, value, options) => {\n  if (!instance.hasOwnProperty(property))\n    return (\n      Object.defineProperty(instance, property, {\n        value,\n        writable: (options && options.writable === true) || false,\n        configurable: (options && options.configurable === true) || false,\n        enumerable: !options || options.enumerable === true,\n      }),\n      value\n    );\n};\n\nconst EmptyTokenArray = (EmptyTokenArray =>\n  Object.freeze(\n    new (Object.freeze(Object.freeze(Object.setPrototypeOf(EmptyTokenArray.prototype, null)).constructor, null))(),\n  ))(\n  class EmptyTokenArray {\n    *[Symbol.iterator]() {}\n  },\n);\n\n/** @type {(string: string, sequence: string , index?: number) => number} */\nexport const indexOf = Function.call.bind(String.prototype.indexOf);\n/** @type {(string: string) => number} */\nexport const countLineBreaks = text => {\n  let lineBreaks = 0;\n  for (let index = -1; (index = indexOf(text, '\\n', index + 1)) > -1; lineBreaks++);\n  return lineBreaks;\n};\n\nexport const createBaselineTokenizer = () => {\n  return class Tokenizer {\n    *tokenize(sourceText) {\n      let match, lastIndex;\n      const matcher = RegExp(none.matcher);\n      const string = String(sourceText || '');\n\n      lastIndex = 0;\n      while ((match = matcher.exec(string))) {\n        const {0: text, index} = match;\n        const pre = lastIndex < index && string.slice(lastIndex, index);\n        lastIndex = matcher.lastIndex;\n        pre && (yield {text: pre, lineBreaks: countLineBreaks(pre)});\n        yield {text, lineBreaks: countLineBreaks(text)};\n      }\n    }\n  };\n};\n\n/** @param {typeof import('./tokenizer.js')['Tokenizer']} [Tokenizer] */\nexport const createParser = (Tokenizer = createBaselineTokenizer()) =>\n  class Parser {\n    constructor(options) {\n      if (options) {\n        const {mode, tokenizer, url, modes} = options;\n        if (mode) {\n          this.register((this.mode = mode));\n          tokenizer && this[TOKENIZERS].set(mode, tokenizer);\n        }\n        if (modes) for (const id in modes) this.register(modes[id]);\n        url && (this.MODULE_URL = url);\n      }\n    }\n\n    /**\n     * @param source {string}\n     * @param state {{sourceType?: string}}\n     */\n    tokenize(source, state = {}) {\n      const {\n        options: {\n          sourceType,\n          mode = (state.options.mode = (sourceType && this.get(sourceType)) || this.mode || none),\n        } = (state.options = {}),\n      } = state;\n      let tokenizer = mode && this[TOKENIZERS].get(mode);\n      if (!source || !mode) return EmptyTokenArray;\n      if (!tokenizer) {\n        if (typeof Tokenizer !== 'function') {\n          throw TypeError(\n            `Parse factory expected the first argument to be a Tokenizer constructor (not ${typeof Tokenizer}) — either define a tokenizer mapping for \"${sourceType ||\n              mode.syntax ||\n              'markup'}\" or pass the a constructor to the factory.`,\n          );\n        }\n        this[TOKENIZERS].set(mode, (tokenizer = new Tokenizer(mode)));\n      }\n      state.parser = this;\n      state.tokenize = (this.hasOwnProperty('tokenize') && this.tokenize) || (this.tokenize = this.tokenize.bind(this));\n      return tokenizer.tokenize(source, state);\n    }\n\n    get [TOKENIZERS]() {\n      return define(this, TOKENIZERS, new WeakMap());\n    }\n    get [MAPPINGS]() {\n      return define(this, MAPPINGS, Object.create(null));\n    }\n\n    get [MODES]() {\n      return define(this, MODES, Object.create(null));\n    }\n\n    get(id = 'default') {\n      const {[MAPPINGS]: mappings, [MODES]: modes} = this;\n      if (id in modes) return modes[id];\n      let mapping = mappings[id];\n      !mapping || mapping.syntax === id || (mapping = mappings[mapping.syntax]);\n      if (mapping) {\n        const {syntax, mode, factory, options} = mapping;\n        if (mode) {\n          return (modes[id] = mode);\n        }\n        if (factory) {\n          if (options.requires && options.requires.length > 0) {\n            const list = [];\n            for (const id of options.requires) id in modes || this.get(id) || list.push(id);\n            if (list.length) {\n              list.length > 1 && list.push(list.splice(-2, 2).join(' and '));\n              throw Error(`Cannot initialize \"${syntax}\" which requires the list mode(s): ${list.join(', ')}`);\n            }\n          }\n          return (mapping.mode = modes[id] = factory(options, modes));\n        }\n      }\n    }\n\n    /** @param {ModeFactory | Mode} mode @param {ModeOptions} [options] */\n    register(mode, options) {\n      if (!this[MAPPINGS]) return;\n\n      const {[MAPPINGS]: mappings, [MODES]: modes} = this;\n      const factory = typeof mode === 'function' && mode;\n      const {syntax, aliases = (options.aliases = []), preregister, tokenizer} = ({\n        syntax: options.syntax = mode.syntax,\n      } = options = {\n        syntax: undefined,\n        ...(factory ? factory.defaults : mode),\n        ...options,\n      });\n\n      if (!syntax || typeof syntax !== 'string') {\n        throw TypeError(`Cannot register \"${syntax}\" since it not valid string'`);\n      }\n\n      if (preregister) preregister(this);\n\n      if (mappings[syntax]) {\n        if (factory ? factory === mappings[syntax].factory : mode === modes[syntax]) return;\n        throw ReferenceError(`Cannot register \"${syntax}\" since it is already registered`);\n      }\n\n      const ids = [syntax];\n\n      if (aliases && aliases.length > 0) {\n        for (const alias of aliases) {\n          const mapping = mappings[alias];\n          if (!alias || typeof alias !== 'string') {\n            throw TypeError(`Cannot register \"${syntax}\" since it's alias \"${alias}\" not valid string'`);\n          }\n\n          if (alias in modes || (mapping && (mapping.syntax === alias || mapping.syntax[0] === alias[0]))) {\n            continue;\n          }\n\n          if (mapping) {\n            Object.defineProperty(mappings, alias, {writable: true, configurable: true});\n            delete mappings[alias];\n            ids.push(alias);\n          }\n\n          ids.push(alias);\n        }\n      }\n\n      const mapping = factory ? {syntax, factory, options} : {syntax, mode, options};\n      const descriptor = {value: mapping, writable: false, configurable: true};\n\n      for (const id of ids) Object.defineProperty(mappings, id, descriptor);\n\n      if (tokenizer) this[TOKENIZERS].set(mode, tokenizer);\n    }\n\n    unregister(id) {\n      const {[MAPPINGS]: mappings, [MODES]: modes} = this;\n      if (id in modes) {\n        throw ReferenceError(`Cannot unregister \"${id}\" since it's already been bootstrapped for use.`);\n      }\n      Object.defineProperty(mappings, id, {writable: true, configurable: true});\n      delete mappings[id];\n    }\n\n    /** @param {string} mode @param {string[]} requires */\n    requires(mode, requires) {\n      const missing = [];\n      for (const mode of requires) {\n        mode in this[MAPPINGS] || missing.push(`\"${mode}\"`);\n      }\n      if (!missing.length) return;\n      throw Error(`Cannot initialize \"${mode}\" which requires the missing mode(s): ${missing.join(', ')}`);\n    }\n  };\n\n/**\n * @typedef { Partial<{syntax: string, matcher: RegExp, [name:string]: Set | Map | {[name:string]: Set | Map | RegExp} }> } Mode\n * @typedef { {[name: string]: Mode} } Modes\n * @typedef { {[name: string]: {syntax: string} } } Mappings\n * @typedef { {aliases?: string[], syntax: string} } ModeOptions\n * @typedef { (options: ModeOptions, modes: Modes) => Mode } ModeFactory\n */\n","﻿//@ts-check\n\nclass TokenizerAPI {\n  /** @param {API.Options} [options] */\n  constructor(options) {\n    /** @type {API.Options} */\n    const {\n      parsers = [],\n      tokenize = (source, options = {}, flags) => {\n        /** @type {{[name: string]: any} & TokenizerAPI.State} */\n        const state = new TokenizerAPI.State({options, flags: {}});\n        //@ts-ignore\n        const variant = !options.variant ? 1 : parseInt(options.variant);\n        const {[variant >= 1 && variant <= parsers.length ? variant - 1 : (options.variant = 0)]: parser} = parsers;\n        this.lastVariant === (this.lastVariant = variant) ||\n          variant <= parsers.length ||\n          console.warn(\n            '[tokenize‹parser›] Variant %O[%d] out of bounds — using default parser: %o',\n            parsers,\n            variant,\n            parser.MODULE_URL || {parser},\n          );\n        options.tokenize = parser.tokenize;\n        if (flags && (flags.length > 0 || flags.size > 0)) {\n          typeof flags === 'string' || (flags = [...flags].join(' '));\n          /\\bwarmup\\b/i.test(flags) && (state.flags.warmup = true);\n          /\\bdebug\\b/i.test(flags) && (state.flags.debug = true);\n        }\n\n        let returned = UNSET;\n        try {\n          this.lastParser === (this.lastParser = parser) ||\n            console.info('[tokenize‹parser›]: %o', parser.MODULE_URL || {parser});\n          return (returned = parser.tokenize((this.lastSource = source), (this.lastState = state)));\n        } finally {\n          returned !== UNSET || !state.flags.debug || console.info('[tokenize‹state›]: %o', state);\n        }\n      },\n\n      warmup = (source, options, flags) => {\n        const key = (options && JSON.stringify(options)) || '';\n        let cache = (this.cache || (this.cache = new Map())).get(key);\n        cache || this.cache.set(key, (cache = new Set()));\n        if (!cache.has(source)) {\n          cache.add(source);\n          flags = `warmup ${(flags &&\n            (flags.length > 0 || flags.size > 0) &&\n            (typeof flags === 'string' || flags instanceof String ? flags : [...flags].join(' '))) ||\n            ''}`;\n          const tokens = tokenize(source, options, flags);\n          const snapshot = {...this};\n          for (const item of tokens);\n          console.log('[tokenize‹warmup›]: %o', snapshot);\n        }\n      },\n\n      render,\n    } = options;\n\n    Object.defineProperties(this, {\n      tokenize: {get: () => tokenize},\n      warmup: {get: () => warmup},\n      render: {get: () => render},\n      parsers: {get: () => parsers},\n    });\n  }\n}\n\nObject.freeze(Object.setPrototypeOf(TokenizerAPI.prototype, null));\n\nTokenizerAPI.State = class State {\n  constructor(...properties) {\n    Object.assign(this, ...properties);\n  }\n};\n\nObject.freeze(Object.setPrototypeOf(TokenizerAPI.State.prototype, null));\n\nconst UNSET = Symbol('');\n\nexport {TokenizerAPI};\n\n/**\n * @typedef {import('./legacy/parser.js').Parser & {MODULE_URL?: string}} Parser\n * @typedef {Partial<{variant?: number | string, fragment?: Fragment, [name: string]: any}>} Parser.Options\n */\n\n/**\n * @typedef {TokenizerAPI & {tokenize: API.tokenize, warmup: API.warmup, render: API.render, parsers: Parser[]}} API\n * @typedef {TokenizerAPI.State} API.State\n * @typedef {Partial<Pick<API, 'tokenize' | 'warmup' | 'render' | 'parsers'>>} API.Options\n * @typedef {<T extends {}>(source: string, options: Parser.Options, flags?: Flags) => IterableIterator<T>} API.tokenize\n * @typedef {(source: string, options: Parser.Options, flags?: Flags) => void} API.warmup\n * @typedef {(source: string, options: Parser.Options, flags?: Flags) => Promise<Fragment>} API.render\n */\n\n/**\n * @typedef {(string | Array<string> | Set<string>) & {length?: number, size?: number}} Flags\n * @typedef {DocumentFragment & {logs?: string[]}} Fragment\n */\n","const {assign, defineProperty} = Object;\n\nexport const document = void null;\n\nexport class Node {\n  get children() {\n    return defineProperty(this, 'children', {value: new Set()}).children;\n  }\n  get childElementCount() {\n    return (this.hasOwnProperty('children') && this.children.size) || 0;\n  }\n  get textContent() {\n    return (this.hasOwnProperty('children') && this.children.size && [...this.children].join('')) || '';\n  }\n  set textContent(text) {\n    this.hasOwnProperty('children') && this.children.size && this.children.clear();\n    text && this.children.add(new String(text));\n  }\n  appendChild(element) {\n    return element && this.children.add(element), element;\n  }\n  append(...elements) {\n    if (elements.length) for (const element of elements) element && this.children.add(element);\n  }\n  removeChild(element) {\n    element && this.hasOwnProperty('children') && this.children.size && this.children.delete(element);\n    return element;\n  }\n  remove(...elements) {\n    if (elements.length && this.hasOwnProperty('children') && this.children.size)\n      for (const element of elements) element && this.children.delete(element);\n  }\n}\n\nexport class Element extends Node {\n  get innerHTML() {\n    return this.textContent;\n  }\n  set innerHTML(text) {\n    this.textContent = text;\n  }\n  get outerHTML() {\n    let classList;\n    let {className, tag, innerHTML, dataset} = this;\n\n    className &&\n      (className = className.trim()) &&\n      ({\n        [className]: classList = (className &&\n          (Element.classLists[className] = [...new Set(className.split(/\\s+/g))].join(' '))) ||\n          '',\n      } = Element.classLists || (Element.classLists = Object.create(null)));\n\n    const openTag = [tag];\n\n    classList && openTag.push(`class=\"${classList}\"`);\n\n    if (dataset)\n      for (const [key, value] of Object.entries(dataset))\n        value == null || !key.trim || openTag.push(`data-${key}=${JSON.stringify(`${value}`)}`);\n\n    return `<${openTag.join(' ')}>${innerHTML || ''}</${tag}>`;\n  }\n\n  toString() {\n    return this.outerHTML;\n  }\n  toJSON() {\n    return this.toString();\n  }\n}\n\nexport class DocumentFragment extends Node {\n  toString() {\n    return this.textContent;\n  }\n  toJSON() {\n    return (this.childElementCount && [...this.children]) || [];\n  }\n  [Symbol.iterator]() {\n    return ((this.childElementCount && this.children) || '')[Symbol.iterator]();\n  }\n}\n\nexport class Text extends String {\n  toString() {\n    return encodeEntities(super.toString());\n  }\n}\n\nexport const createElement = (tag, properties, ...children) => {\n  const element = assign(new Element(), {\n    tag,\n    className: (properties && properties.className) || '',\n    properties,\n  });\n  children.length && defineProperty(element, 'children', {value: new Set(children)});\n  return element;\n};\n\nexport const createText = (content = '') => new Text(content);\nexport const encodeEntity = entity => `&#${entity.charCodeAt(0)};`;\nexport const encodeEntities = string => string.replace(/[\\u00A0-\\u9999<>\\&]/g, encodeEntity);\nexport const createFragment = () => new DocumentFragment();\n","export const {document, Element, Node, Text, DocumentFragment} =\n  'object' === typeof self && (self || 0).window === self && self;\n\nexport const {createElement, createText, createFragment} = {\n  createElement: (tag, properties, ...children) => {\n    const element = document.createElement(tag);\n    properties && Object.assign(element, properties);\n    if (!children.length) return element;\n    if (element.append) {\n      while (children.length > 500) element.append(...children.splice(0, 500));\n      children.length && element.append(...children);\n    } else if (element.appendChild) {\n      for (const child of children) element.appendChild(child);\n    }\n    return element;\n  },\n\n  createText: (content = '') => document.createTextNode(content),\n\n  createFragment: () => document.createDocumentFragment(),\n};\n","import * as pseudo from './pseudo.js';\nimport * as dom from './native.js';\nexport {encodeEntity, encodeEntities} from './pseudo.js';\n\n// TEST: Trace for ESM testing\ntypeof process === 'object' && console.info('[ESM]: %o', import.meta.url);\n\nexport const native = dom.document && dom;\nexport const {createElement, createText, createFragment} = native || pseudo;\nexport {pseudo};\n","// export {patterns, entities} from '../../grammars/common/patterns.js';\n// export * from '../../grammars/common/helpers.js';\n\n/// <reference lib=\"esnext.asynciterable\" />\n\nconst VOID = Symbol('[[Void]]');\n\n/**\n * @template T\n * @typedef {Promise<T> | T} async\n */\n\n/**\n * @template T\n * @typedef {{next(): async<IteratorResult<async<T>>>}} iterator\n */\n\n/**\n * @template T\n * @typedef {iterator<T> | {[Symbol.iterator](): iterator<T>}  | {[Symbol.asyncIterator](): iterator<T>}} iterable\n */\n\n/**\n * @template T, U\n * @param {iterable<T>} iterable\n * @param {(value: T) => U} ƒ\n */\nexport async function each(iterable, ƒ) {\n  const iterator =\n    (iterable && ('next' in iterable && typeof iterable.next === 'function' && iterable)) ||\n    ((Symbol.asyncIterator in iterable && iterable[Symbol.asyncIterator]()) ||\n      (Symbol.iterator in iterable && iterable[Symbol.iterator]()));\n  try {\n    if (iterator || typeof iterator.next === 'function') {\n      let result, done;\n      while (!done && (result = await iterator.next())) {\n        await ƒ(await result.value);\n        done = result.done;\n      }\n    }\n  } finally {\n    iterator &&\n      iterable !== iterator &&\n      'return' in iterator &&\n      typeof iterator.return === 'function' &&\n      iterator.return();\n  }\n}\n","import * as pseudom from '../../pseudom/pseudom.js';\n// export {encodeEntity, encodeEntities} from '../../pseudom/pseudom.js';\nimport {each} from './helpers.js';\n\n/// RUNTIME\n\n/** Uses lightweight proxy objects that can be serialized into HTML text */\nconst HTML_MODE = true;\n\nconst supported = !!pseudom.native;\nconst native = !HTML_MODE && supported;\nconst implementation = native ? pseudom.native : pseudom.pseudo;\nconst {createElement: Element, createText: Text, createFragment: Fragment} = implementation;\nconst Template = template =>\n  !supported || Template.supported === false\n    ? false\n    : Template.supported === true\n    ? document.createElement('template')\n    : (Template.supported = !!(\n        (template = document.createElement('template')) && 'HTMLTemplateElement' === (template.constructor || '').name\n      )) && template;\n\n/// IMPLEMENTATION\n\nclass MarkupRenderer {\n  constructor(options) {\n    // TODO: Consider making Renderer a thing\n    const {factory, defaults} = new.target;\n\n    const {SPAN = 'span', LINE = 'span', CLASS: classPrefix = 'markup', REFLOW = true} = {\n      ...defaults,\n      ...options,\n    };\n\n    const PUNCTUATOR = `punctuator`;\n    const LITERAL = `literal`;\n\n    this.renderers = {\n      line: factory(LINE, {markupHint: `${classPrefix}-line`, markupClass: classPrefix}),\n\n      fault: factory(SPAN, {markupHint: `fault`, markupClass: classPrefix}),\n      text: factory(SPAN, {markupHint: classPrefix, markupClass: classPrefix}),\n\n      whitespace: Text,\n      inset: factory(SPAN, {markupHint: `inset whitespace`, markupClass: classPrefix}),\n      break: factory(SPAN, {markupHint: `break whitespace`, markupClass: classPrefix}),\n\n      comment: factory(SPAN, {markupHint: `comment`, markupClass: classPrefix}),\n\n      keyword: factory(SPAN, {markupHint: `keyword`, markupClass: classPrefix}),\n      identifier: factory(SPAN, {markupHint: `identifier`, markupClass: classPrefix}),\n\n      sequence: factory(SPAN, {markupHint: `sequence`, markupClass: classPrefix}),\n\n      literal: factory(SPAN, {markupHint: LITERAL, markupClass: classPrefix}),\n      number: factory(SPAN, {markupHint: `${LITERAL} number`, markupClass: classPrefix}),\n      quote: factory(SPAN, {markupHint: `quote`, markupClass: classPrefix}),\n      pattern: factory(SPAN, {markupHint: `pattern`, markupClass: classPrefix}),\n\n      punctuator: factory(SPAN, {markupHint: PUNCTUATOR, markupClass: classPrefix}),\n      operator: factory(SPAN, {markupHint: `${PUNCTUATOR} operator`, markupClass: classPrefix}),\n      assigner: factory(SPAN, {markupHint: `${PUNCTUATOR} operator assigner`, markupClass: classPrefix}),\n      combinator: factory(SPAN, {markupHint: `${PUNCTUATOR} operator combinator`, markupClass: classPrefix}),\n      punctuation: factory(SPAN, {markupHint: `${PUNCTUATOR} punctuation`, markupClass: classPrefix}),\n\n      breaker: factory(SPAN, {markupHint: `${PUNCTUATOR} breaker`, markupClass: classPrefix}),\n      opener: factory(SPAN, {markupHint: `${PUNCTUATOR} opener`, markupClass: classPrefix}),\n      closer: factory(SPAN, {markupHint: `${PUNCTUATOR} closer`, markupClass: classPrefix}),\n      span: factory(SPAN, {markupHint: `${PUNCTUATOR} span`, markupClass: classPrefix}),\n    };\n\n    this.reflows = REFLOW;\n  }\n\n  async render(tokens, fragment) {\n    let logs, template, first, elements;\n    try {\n      fragment || (fragment = Fragment());\n      logs = fragment.logs; // || (fragment.logs = []);\n      elements = this.renderer(tokens);\n      if ((first = await elements.next()) && 'value' in first) {\n        template = Template();\n        if (!native && template && 'textContent' in fragment) {\n          logs && logs.push(`render method = 'text' in template`);\n          const body = [first.value];\n          first.done || (await each(elements, element => body.push(element)));\n          template.innerHTML = body.join('');\n          fragment.appendChild(template.content);\n        } else if ('push' in fragment) {\n          logs && logs.push(`render method = 'push' in fragment`);\n          fragment.push(first.value);\n          first.done || (await each(elements, element => fragment.push(element)));\n        } else if ('append' in fragment) {\n          logs && logs.push(`render method = 'append' in fragment`);\n          fragment.append(first.value);\n          first.done || (await each(elements, element => fragment.append(element)));\n        }\n      }\n      return fragment;\n    } finally {\n      template && (template.innerHTML = '');\n      template = fragment = logs = elements = first = null;\n    }\n  }\n\n  *renderer(tokens) {\n    let renderedLine, LineInset, normalizedLineInset, normalizedLineText, lineBreak, insetHint;\n    let type, text, punctuator, hint, lineInset, lineBreaks, renderer;\n    const {renderers, reflows} = this;\n    const createLine = reflows\n      ? () => (renderedLine = renderers.line())\n      : () => (renderedLine = renderers.line('', 'no-reflow'));\n    const emit = (renderer, text, type, hint) => {\n      (renderedLine || createLine()).appendChild((renderedLine.lastChild = renderer(text, hint || type)));\n    };\n    const emitInset = (text, hint) => emit(renderers.inset, text, 'inset', hint);\n    const emitBreak = hint => emit(renderers.break, '\\n', 'break', hint);\n    const Lines = /^/gm;\n\n    for (const token of tokens) {\n      if (!token || !token.text) continue;\n\n      ({type = 'text', text, punctuator, hint, lineInset, lineBreaks} = token);\n\n      renderer =\n        (punctuator &&\n          (renderers[punctuator] || (type && renderers[type]) || renderers.punctuator || renderers.operator)) ||\n        (type && (renderers[type] || (type !== 'whitespace' && type !== 'break' && renderers.text))) ||\n        Text;\n\n      // Normlize inset for { type != 'inset', inset = /\\s+/ }\n      if (reflows && lineBreaks && type !== 'break') {\n        LineInset = void (lineInset = lineInset || '');\n        insetHint = `${hint || ''} in-${type || ''}`;\n        for (const normlizedline of text.split(Lines)) {\n          (normalizedLineInset = normlizedline.startsWith(lineInset)\n            ? normlizedline.slice(0, lineInset.length)\n            : normlizedline.match(LineInset || (LineInset = RegExp(`^${lineInset.replace(/./g, '$&?')}`)))[0]) &&\n            emitInset(normalizedLineInset, insetHint);\n\n          (normalizedLineText = normalizedLineInset\n            ? normlizedline.slice(normalizedLineInset.length)\n            : normlizedline) &&\n            ((normalizedLineText === '\\n'\n              ? ((lineBreak = normalizedLineText), (normalizedLineText = ''))\n              : normalizedLineText.endsWith('\\n')\n              ? ((lineBreak = '\\n'),\n                (normalizedLineText = normalizedLineText.slice(0, normalizedLineText.endsWith('\\r\\n') ? -2 : -1)))\n              : !(lineBreak = '')) && emit(renderer, normalizedLineText, type, hint),\n            lineBreak && (emitBreak(), (renderedLine = void (yield renderedLine))));\n        }\n      } else {\n        // TODO: See if pseudom children can be optimized for WBR/BR clones\n        emit(renderer, text, type, hint);\n        type === 'break'\n          ? (renderedLine = void (yield renderedLine))\n          : type === 'whitespace' || renderedLine.appendChild(Element('wbr'));\n      }\n    }\n    renderedLine && (yield renderedLine);\n  }\n\n  /**\n   * @param {string} tag\n   * @param {Partial<HTMLElement>} [properties]\n   * @param {boolean} [unflattened]\n   */\n  static factory(tagName, elementProperties) {\n    const [\n      tag,\n      {\n        defaults = (this || MarkupRenderer).defaults,\n        markupClass = defaults.CLASS || MarkupRenderer.defaults.CLASS || 'markup',\n        markupHint = '',\n        ...properties\n      } = {},\n    ] = arguments;\n    properties.className = markupHint ? `${markupClass} ${markupHint}` : markupClass;\n    Object.freeze(properties);\n\n    return Object.freeze((content, hint) => {\n      let element, hintSeparator;\n\n      element =\n        (typeof content === 'string' && (content = Text(content))) || content != null\n          ? Element(tag, properties, content)\n          : Element(tag, properties);\n\n      typeof hint === 'string' && hint !== '' && (hintSeparator = hint.indexOf('\\n\\n')) !== -1\n        ? ((element.dataset = {hint: `${markupHint}${hint.slice(hintSeparator).replace(/\\n/g, '&#x000A;')}`}),\n          hintSeparator === 0 || (element.className = `${element.className} ${hint.slice(0, hintSeparator)}`))\n        : (hint && (element.className = `${element.className} ${hint}`),\n          (element.dataset = {hint: hint || markupHint || element.className}));\n\n      // (hint &&\n      //   (hint = hint) &&\n      //   ((element.className = `${element.className || ''} ${classHint || hint}`),\n      //   (element.dataset = {\n      //     // hint: (markupHint ? `${markupHint}\\n\\n${hint}` : hint).replace(/\\n/g, '&#x000A;'),\n      //     hint: (markupHint ? `${markupHint}\\n\\n${hint}` : hint).replace(/\\n/g, '&#x000A;'),\n      //   }))) ||\n      //   (element.className && (hint = element.className));\n\n      return element;\n    });\n  }\n}\n\nMarkupRenderer.defaults = Object.freeze({\n  /** Tag name of the element to use for rendering a token. */\n  SPAN: 'span',\n  /** Tag name of the element to use for grouping tokens in a single line. */\n  LINE: 'span',\n  /** The class name of the element to use for rendering a token. */\n  CLASS: 'markup',\n  /** Enable renderer-side unpacking { inset } || { breaks > 0 } tokens */\n  REFLOW: true,\n});\n\n/// INTERFACE\n\nexport default new MarkupRenderer();\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\n// const trace = /** @type {[function, any[]][]} */ [];\n\nclass Matcher extends RegExp {\n  /**\n   * @template T\n   * @param {Matcher.Pattern} pattern\n   * @param {Matcher.Flags} [flags]\n   * @param {Matcher.Entities} [entities]\n   * @param {T} [state]\n   */\n  constructor(pattern, flags, entities, state) {\n    // trace.push([new.target, [...arguments]]);\n    //@ts-ignore\n    super(pattern, flags);\n    // Object.assign(this, RegExp.prototype, new.target.prototype);\n    (pattern &&\n      pattern.entities &&\n      Symbol.iterator in pattern.entities &&\n      ((!entities && (entities = pattern.entities)) || entities === pattern.entities)) ||\n      Object.freeze((entities = (entities && Symbol.iterator in entities && [...entities]) || []));\n    /** @type {MatcherEntities} */\n    this.entities = entities;\n    /** @type {T} */\n    this.state = state;\n    this.capture = this.capture;\n    this.exec = this.exec;\n    // this.test = this.test;\n    ({\n      // LOOKAHEAD: this.LOOKAHEAD = Matcher.LOOKAHEAD,\n      // INSET: this.INSET = Matcher.INSET,\n      // OUTSET: this.OUTSET = Matcher.OUTSET,\n      DELIMITER: this.DELIMITER = Matcher.DELIMITER,\n      UNKNOWN: this.UNKNOWN = Matcher.UNKNOWN,\n    } = new.target);\n  }\n\n  /**\n   * @param {string} source\n   * @returns {MatcherMatchResult}\n   */\n  exec(source) {\n    /** @type {MatcherMatchArray} */\n    const match = super.exec(source);\n\n    // @ts-ignore\n    if (match === null) return null;\n\n    match.matcher = this;\n    match.capture = {};\n\n    //@ts-ignore\n    for (\n      let i = 0, entity;\n      match[++i] === undefined ||\n      void (\n        (entity = this.entities[(match.entity = i - 1)]) == null ||\n        (typeof entity === 'function'\n          ? entity(match[0], i, match, this.state)\n          : (match.capture[(match.identity = entity)] = match[0]))\n      );\n\n    );\n    // @ts-ignore\n    return match;\n  }\n\n  /**\n   * @param {Matcher.PatternFactory} factory\n   * @param {Matcher.Flags} [flags]\n   * @param {PropertyDescriptorMap} [properties]\n   */\n  static define(factory, flags, properties) {\n    /** @type {MatcherEntities} */\n    const entities = [];\n    entities.flags = '';\n    // const pattern = factory(entity => void entities.push(((entity != null || undefined) && entity) || undefined));\n    const pattern = factory(entity => {\n      if (entity !== null && entity instanceof Matcher) {\n        entities.push(...entity.entities);\n\n        !entity.flags || (entities.flags = entities.flags ? Matcher.flags(entities.flags, entity.flags) : entity.flags);\n\n        return entity.source;\n      } else {\n        entities.push(((entity != null || undefined) && entity) || undefined);\n      }\n    });\n    flags = Matcher.flags('g', flags == null ? pattern.flags : flags, entities.flags);\n    const matcher = new ((this && (this.prototype === Matcher.prototype || this.prototype instanceof RegExp) && this) ||\n      Matcher)(pattern, flags, entities);\n\n    properties && Object.defineProperties(matcher, properties);\n\n    return matcher;\n  }\n\n  static flags(...sources) {\n    let flags = '',\n      iterative;\n    for (const source of sources) {\n      if (!source || (typeof source !== 'string' && typeof source.flags !== 'string')) continue;\n      for (const flag of source.flags || source)\n        (flag === 'g' || flag === 'y' ? iterative || !(iterative = true) : flags.includes(flag)) || (flags += flag);\n    }\n    // console.log('%o: ', flags, ...sources);\n    return flags;\n  }\n\n  static get sequence() {\n    const {raw} = String;\n    const {replace} = Symbol;\n\n    /**\n     * @param {TemplateStringsArray} template\n     * @param  {...any} spans\n     * @returns {string}\n     */\n    const sequence = (template, ...spans) =>\n      sequence.WHITESPACE[replace](raw(template, ...spans.map(sequence.span)), '');\n    // const sequence = (template, ...spans) =>\n    //   sequence.WHITESPACE[replace](sequence.COMMENTS[replace](raw(template, ...spans.map(sequence.span)), ''), '');\n\n    /**\n     * @param {any} value\n     * @returns {string}\n     */\n    sequence.span = value =>\n      (value &&\n        // TODO: Don't coerce to string here?\n        (typeof value !== 'symbol' && `${value}`)) ||\n      '';\n\n    sequence.WHITESPACE = /^\\s+|\\s*\\n\\s*|\\s+$/g;\n    // sequence.COMMENTS = /(?:^|\\n)\\s*\\/\\/.*(?=\\n)|\\n\\s*\\/\\/.*(?:\\n\\s*)*$/g;\n\n    Object.defineProperty(Matcher, 'sequence', {value: Object.freeze(sequence), enumerable: true, writable: false});\n    return sequence;\n  }\n\n  static get join() {\n    const {sequence} = this;\n\n    const join = (...values) =>\n      values\n        .map(sequence.span)\n        .filter(Boolean)\n        .join('|');\n\n    Object.defineProperty(Matcher, 'join', {value: Object.freeze(join), enumerable: true, writable: false});\n\n    return join;\n  }\n}\n\nexport const {\n  // INSET = (Matcher.INSET = /* Symbol.for */ 'INSET'),\n  // OUTSET = (Matcher.OUTSET = /* Symbol.for */ 'OUTSET'),\n  DELIMITER = (Matcher.DELIMITER = /* Symbol.for */ 'DELIMITER'),\n  UNKNOWN = (Matcher.UNKNOWN = /* Symbol.for */ 'UNKNOWN'),\n  // LOOKAHEAD = (Matcher.LOOKAHEAD = /* Symbol.for */ 'LOOKAHEAD'),\n  escape = (Matcher.escape = /** @type {<T>(source: T) => string} */ ((() => {\n    const {replace} = Symbol;\n    return source => /[\\\\^$*+?.()|[\\]{}]/g[replace](source, '\\\\$&');\n  })())),\n  sequence,\n  matchAll = (Matcher.matchAll =\n    /**\n     * @template {RegExp} T\n     * @type {(string: Matcher.Text, matcher: T) => Matcher.Iterator<T> }\n     */\n    //@ts-ignore\n    (() =>\n      Function.call.bind(\n        // String.prototype.matchAll || // TODO: Uncomment eventually\n        {\n          /**\n           * @this {string}\n           * @param {RegExp | string} pattern\n           */\n          *matchAll() {\n            const matcher =\n              arguments[0] &&\n              (arguments[0] instanceof RegExp\n                ? Object.setPrototypeOf(RegExp(arguments[0].source, arguments[0].flags || 'g'), arguments[0])\n                : RegExp(arguments[0], 'g'));\n            const string = String(this);\n\n            if (!(matcher.flags.includes('g') || matcher.flags.includes('y'))) return void (yield matcher.exec(string));\n\n            for (\n              let match, lastIndex = -1;\n              lastIndex <\n              ((match = matcher.exec(string)) ? (lastIndex = matcher.lastIndex + (match[0].length === 0)) : lastIndex);\n              yield match, matcher.lastIndex = lastIndex\n            );\n          },\n        }.matchAll,\n      ))()),\n} = Matcher;\n\n/** @typedef {MatcherFlags} Matcher.Flags */\n/** @typedef {MatcherText} Matcher.Text */\n/** @typedef {MatcherOperator} Matcher.Operator */\n/** @typedef {MatcherIdentity} Matcher.Identity */\n/** @typedef {MatcherEntity} Matcher.Entity */\n/** @typedef {MatcherCapture} Matcher.Capture */\n/** @typedef {MatcherEntityFactory} Matcher.EntityFactory */\n/** @typedef {MatcherPatternFactory} Matcher.PatternFactory */\n/** @typedef {MatcherPattern} Matcher.Pattern */\n/** @typedef {MatcherEntities} Matcher.Entities */\n/** @template {RegExpMatchArray | RegExpExecArray} T @typedef {MatcherMatchArray} Matcher.MatchArray<T> */\n/** @template {RegExpMatchArray | RegExpExecArray} T @typedef {MatcherMatchResult} Matcher.MatchResult<T> */\n/** @template {RegExp} T @typedef {MatcherIterator} Matcher.Iterator<T> */\n\nexport {Matcher};\n","﻿export const {\n  ranges,\n  Null,\n  BinaryDigit,\n  DecimalDigit,\n  ControlLetter,\n  HexLetter,\n  HexDigit,\n  GraveAccent,\n  ZeroWidthNonJoiner,\n  ZeroWidthJoiner,\n  ZeroWidthNoBreakSpace,\n  Whitespace,\n  IdentifierStart,\n  IdentifierPart,\n  UnicodeIDStart,\n  UnicodeIDContinue,\n} = (factories => {\n  const {String, RegExp, Symbol, Object} = globalThis;\n  const {raw} = String;\n  const {replace: ReplaceSymbol} = Symbol;\n  const {defineProperty, create} = Object;\n\n  const RegExpClass = /^(?:\\[(?=.*?\\]$)|)((?:\\\\.|[^\\\\\\n\\[\\]]*)*)\\]?$/;\n\n  class RegExpRange extends RegExp {\n    constructor(source, flags) {\n      let range;\n      range =\n        source && typeof source === 'object' && source instanceof RegExp\n          ? (flags === undefined && (flags = source.flags), source.source)\n          : (typeof source === 'string' ? source : (source = `${source || ''}`)).trim() &&\n            (source = RegExpClass[ReplaceSymbol](source, '[$1]'));\n\n      if (!range || !RegExpClass.test(range)) {\n        throw TypeError(`Invalid Regular Expression class range: ${range}`);\n      }\n\n      typeof flags === 'string' || (flags = `${flags || ''}` || '');\n\n      flags.includes('u') || !(source.includes('\\\\p{') || source.includes('\\\\u')) || (flags += 'u');\n      super(source, flags);\n      defineProperty(this, 'range', {value: range.slice(1, -1), enumerable: true, writable: false});\n    }\n\n    toString() {\n      return this.range;\n    }\n\n    static range(strings, ...values) {\n      return new (this || RegExpRange)(raw(strings, ...values));\n    }\n  }\n\n  const safeRange = (strings, ...values) => {\n    try {\n      return RegExpRange.range(strings, ...values).source.slice(1, -1);\n    } catch (exception) {}\n  };\n\n  const descriptors = {\n    ranges: {\n      get() {\n        return ranges;\n      },\n      enumerable: true,\n      configurable: false,\n    },\n  };\n\n  for (const property in factories) {\n    descriptors[property] = {\n      get() {\n        const value = factories[property](safeRange, ranges);\n        defineProperty(ranges, property, {value, enumerable: true, configurable: false});\n        return value;\n      },\n      enumerable: true,\n      configurable: true,\n    };\n  }\n\n  /** @type {Record<keyof factories, string>} */\n  const ranges = create(null, descriptors);\n\n  return ranges;\n})({\n  Null: range => range`\\0`,\n  BinaryDigit: range => range`01`,\n  DecimalDigit: range => range`0-9`,\n  ControlLetter: range => range`a-zA-Z`,\n  HexLetter: range => range`a-fA-F`,\n  HexDigit: (range, {DecimalDigit, HexLetter}) => range`${DecimalDigit}${HexLetter}`,\n  GraveAccent: range => range`${'`'}`,\n  ZeroWidthNonJoiner: range => range`\\u200c`,\n  ZeroWidthJoiner: range => range`\\u200d`,\n  ZeroWidthNoBreakSpace: range => range`\\ufeff`,\n  CombiningGraphemeJoiner: range => range`\\u034f`,\n  Whitespace: (range, {ZeroWidthNoBreakSpace}) => range`\\s${ZeroWidthNoBreakSpace}`,\n  IdentifierStart: (range, {UnicodeIDStart}) => range`_$${UnicodeIDStart}`,\n  IdentifierPart: (range, {UnicodeIDContinue, ZeroWidthNonJoiner, ZeroWidthJoiner, CombiningGraphemeJoiner}) =>\n    range`$${UnicodeIDContinue}${ZeroWidthNonJoiner}${ZeroWidthJoiner}${CombiningGraphemeJoiner}`,\n  UnicodeIDStart: range =>\n    range`\\p{ID_Start}` ||\n    range`A-Za-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376-\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e-\\u066f\\u0671-\\u06d3\\u06d5\\u06e5-\\u06e6\\u06ee-\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4-\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f-\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc-\\u09dd\\u09df-\\u09e1\\u09f0-\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f-\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32-\\u0a33\\u0a35-\\u0a36\\u0a38-\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2-\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0-\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f-\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32-\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c-\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99-\\u0b9a\\u0b9c\\u0b9e-\\u0b9f\\u0ba3-\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60-\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0-\\u0ce1\\u0cf1-\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32-\\u0e33\\u0e40-\\u0e46\\u0e81-\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2-\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065-\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae-\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5-\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a-\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7c6\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd-\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5-\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab67\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc`,\n  UnicodeIDContinue: range =>\n    range`\\p{ID_Continue}` ||\n    range`0-9A-Z_a-z\\xaa\\xb5\\xb7\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0300-\\u0374\\u0376-\\u0377\\u037a-\\u037d\\u037f\\u0386-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u0483-\\u0487\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u0591-\\u05bd\\u05bf\\u05c1-\\u05c2\\u05c4-\\u05c5\\u05c7\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0610-\\u061a\\u0620-\\u0669\\u066e-\\u06d3\\u06d5-\\u06dc\\u06df-\\u06e8\\u06ea-\\u06fc\\u06ff\\u0710-\\u074a\\u074d-\\u07b1\\u07c0-\\u07f5\\u07fa\\u07fd\\u0800-\\u082d\\u0840-\\u085b\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u08d3-\\u08e1\\u08e3-\\u0963\\u0966-\\u096f\\u0971-\\u0983\\u0985-\\u098c\\u098f-\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bc-\\u09c4\\u09c7-\\u09c8\\u09cb-\\u09ce\\u09d7\\u09dc-\\u09dd\\u09df-\\u09e3\\u09e6-\\u09f1\\u09fc\\u09fe\\u0a01-\\u0a03\\u0a05-\\u0a0a\\u0a0f-\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32-\\u0a33\\u0a35-\\u0a36\\u0a38-\\u0a39\\u0a3c\\u0a3e-\\u0a42\\u0a47-\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a59-\\u0a5c\\u0a5e\\u0a66-\\u0a75\\u0a81-\\u0a83\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2-\\u0ab3\\u0ab5-\\u0ab9\\u0abc-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ad0\\u0ae0-\\u0ae3\\u0ae6-\\u0aef\\u0af9-\\u0aff\\u0b01-\\u0b03\\u0b05-\\u0b0c\\u0b0f-\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32-\\u0b33\\u0b35-\\u0b39\\u0b3c-\\u0b44\\u0b47-\\u0b48\\u0b4b-\\u0b4d\\u0b56-\\u0b57\\u0b5c-\\u0b5d\\u0b5f-\\u0b63\\u0b66-\\u0b6f\\u0b71\\u0b82-\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99-\\u0b9a\\u0b9c\\u0b9e-\\u0b9f\\u0ba3-\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd0\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55-\\u0c56\\u0c58-\\u0c5a\\u0c60-\\u0c63\\u0c66-\\u0c6f\\u0c80-\\u0c83\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbc-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5-\\u0cd6\\u0cde\\u0ce0-\\u0ce3\\u0ce6-\\u0cef\\u0cf1-\\u0cf2\\u0d00-\\u0d03\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4e\\u0d54-\\u0d57\\u0d5f-\\u0d63\\u0d66-\\u0d6f\\u0d7a-\\u0d7f\\u0d82-\\u0d83\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2-\\u0df3\\u0e01-\\u0e3a\\u0e40-\\u0e4e\\u0e50-\\u0e59\\u0e81-\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0edc-\\u0edf\\u0f00\\u0f18-\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e-\\u0f47\\u0f49-\\u0f6c\\u0f71-\\u0f84\\u0f86-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1049\\u1050-\\u109d\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u135d-\\u135f\\u1369-\\u1371\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176c\\u176e-\\u1770\\u1772-\\u1773\\u1780-\\u17d3\\u17d7\\u17dc-\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u19d0-\\u19da\\u1a00-\\u1a1b\\u1a20-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1aa7\\u1ab0-\\u1abd\\u1b00-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1bf3\\u1c00-\\u1c37\\u1c40-\\u1c49\\u1c4d-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1cd0-\\u1cd2\\u1cd4-\\u1cfa\\u1d00-\\u1df9\\u1dfb-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u203f-\\u2040\\u2054\\u2071\\u207f\\u2090-\\u209c\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d7f-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2de0-\\u2dff\\u3005-\\u3007\\u3021-\\u302f\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u3099-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua62b\\ua640-\\ua66f\\ua674-\\ua67d\\ua67f-\\ua6f1\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7c6\\ua7f7-\\ua827\\ua840-\\ua873\\ua880-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f7\\ua8fb\\ua8fd-\\ua92d\\ua930-\\ua953\\ua960-\\ua97c\\ua980-\\ua9c0\\ua9cf-\\ua9d9\\ua9e0-\\ua9fe\\uaa00-\\uaa36\\uaa40-\\uaa4d\\uaa50-\\uaa59\\uaa60-\\uaa76\\uaa7a-\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaef\\uaaf2-\\uaaf6\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab67\\uab70-\\uabea\\uabec-\\uabed\\uabf0-\\uabf9\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33-\\ufe34\\ufe4d-\\ufe4f\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff10-\\uff19\\uff21-\\uff3a\\uff3f\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc`,\n});\n","﻿//@ts-check\nimport {countLineBreaks} from '../../packages/tokenizer/lib/core.js';\n\n/** @typedef {typeof stats} ContextStats */\nconst stats = {\n  captureCount: 0,\n  contextCount: 0,\n  tokenCount: 0,\n  nestedCaptureCount: 0,\n  nestedContextCount: 0,\n  nestedTokenCount: 0,\n};\n\n/** @param {State} state */\n// TODO: Document initializeState\nexport const initializeState = state => {\n  /** @type {Groups} state */\n  (state.groups = []).closers = [];\n  state.lineOffset = state.lineIndex = 0;\n  state.totalCaptureCount = state.totalTokenCount = 0;\n\n  /** @type {Contexts} */\n  const contexts = (state.contexts = Array(100));\n  const context = initializeContext({\n    id: `«${state.matcher.goal.name}»`,\n    number: (contexts.count = state.totalContextCount = 1),\n    depth: 0,\n    parentContext: undefined,\n    goal: state.matcher.goal,\n    group: undefined,\n    state,\n    ...(state.USE_CONSTRUCTS === true ? {currentConstruct: new Construct()} : {}),\n  });\n  state.firstTokenContext = state.nextTokenContext = state.lastContext = state.context = contexts[-1] = context;\n  state.lastTokenContext = undefined;\n};\n\n/** @param {State} state */\n// TODO: Document finalizeState\nexport const finalizeState = state => {\n  const isValidState =\n    state.firstTokenContext === state.nextTokenContext &&\n    state.nextToken === undefined &&\n    state.nextOffset === undefined;\n\n  const {\n    flags: {debug = false} = {},\n    options: {console: {log = console.log, warn = console.warn} = console} = {},\n    error = (state.error = !isValidState ? 'Unexpected end of tokenizer state' : undefined),\n  } = state;\n\n  // if (!debug && error) throw Error(error);\n\n  // Finalize latent token artifacts\n  state.nextTokenContext = void (state.lastTokenContext = state.nextTokenContext);\n\n  // Finalize tokenization artifacts\n  // NOTE: don't forget to uncomment after debugging\n  state.context = state.contexts = state.groups = undefined;\n\n  // Output to console when necessary\n  debug && (error ? warn : log)(`[tokenizer]: ${error || 'done'} — %O`, state);\n};\n\n/** @param {Match} match @param {State} state @returns {Token}*/\nexport const createToken = (match, state) => {\n  let currentGoal,\n    // goalName,\n    currentGoalType,\n    contextId,\n    contextNumber,\n    contextDepth,\n    contextGroup,\n    parentContext,\n    tokenReference,\n    tokenContext,\n    nextToken,\n    text,\n    type,\n    fault,\n    punctuator,\n    offset,\n    lineInset,\n    lineBreaks,\n    isDelimiter,\n    isComment,\n    isWhitespace,\n    flatten,\n    fold,\n    columnNumber,\n    lineNumber,\n    tokenNumber,\n    captureNumber,\n    hint;\n\n  const {\n    context: currentContext,\n    nextContext,\n    lineIndex,\n    lineOffset,\n    nextOffset,\n    lastToken,\n    lastTrivia,\n    lastAtom,\n  } = state;\n\n  /* Capture */\n  ({\n    0: text,\n    capture: {inset: lineInset},\n    identity: type,\n    flatten,\n    fault,\n    punctuator,\n    index: offset,\n  } = match);\n\n  if (!text) return;\n\n  ({\n    id: contextId,\n    number: contextNumber,\n    depth: contextDepth,\n    goal: currentGoal,\n    group: contextGroup,\n    parentContext,\n  } = tokenContext = (type === 'opener' && nextContext) || currentContext);\n\n  currentGoalType = currentGoal.type;\n\n  nextOffset &&\n    (state.nextOffset = void (nextOffset > offset && (text = match.input.slice(offset, nextOffset)),\n    (state.matcher.lastIndex = nextOffset)));\n\n  lineBreaks = (text === '\\n' && 1) || countLineBreaks(text);\n  isDelimiter = type === 'closer' || type === 'opener';\n  isWhitespace = !isDelimiter && (type === 'whitespace' || type === 'break' || type === 'inset');\n\n  (isComment = type === 'comment' || punctuator === 'comment')\n    ? (type = 'comment')\n    : type || (type = (!isDelimiter && !fault && currentGoalType) || 'text');\n\n  if (lineBreaks) {\n    state.lineIndex += lineBreaks;\n    state.lineOffset = offset + (text === '\\n' ? 1 : text.lastIndexOf('\\n'));\n  }\n\n  /* Flattening / Token Folding */\n\n  flatten === false || flatten === true || (flatten = !isDelimiter && currentGoal.flatten === true);\n\n  captureNumber = ++tokenContext.captureCount;\n  state.totalCaptureCount++;\n\n  if (\n    (fold = flatten) && // fold only if flatten is allowed\n    lastToken != null &&\n    ((lastToken.contextNumber === contextNumber && lastToken.fold === true) ||\n      (type === 'closer' && flatten === true)) && // never fold across contexts\n    (lastToken.type === type || (currentGoal.fold === true && (lastToken.type = currentGoalType)))\n  ) {\n    lastToken.captureCount++;\n    lastToken.text += text;\n    lineBreaks && (lastToken.lineBreaks += lineBreaks);\n  } else {\n    // The generator retains this new as state.nextToken\n    //   which means tokenContext is state.nextTokenContext\n    //   and the fact that we are returning a token here will\n    //   yield the current state.nextToken so we need to also\n    //   set state.lastTokenContext to match\n    //\n    //   TODO: Add parity tests for tokenizer's token/context states\n    state.lastTokenContext = state.nextTokenContext;\n    state.nextTokenContext = tokenContext;\n\n    /* Token Creation */\n    flatten = false;\n    columnNumber = 1 + (offset - lineOffset || 0);\n    lineNumber = 1 + (lineIndex || 0);\n\n    tokenNumber = ++tokenContext.tokenCount;\n    state.totalTokenCount++;\n\n    // hint = `${(isDelimiter ? type : currentGoalType && `in-${currentGoalType}`) ||\n    hint = `${\n      currentGoalType\n        ? isDelimiter && currentGoal.opener === text\n          ? `${type}`\n          : `in-${currentGoalType}`\n        : isDelimiter\n        ? type\n        : ''\n    }\\n\\n${contextId} #${tokenNumber}\\n(${lineNumber}:${columnNumber})`;\n\n    tokenReference = isWhitespace || isComment ? 'lastTrivia' : 'lastAtom';\n\n    nextToken = tokenContext[tokenReference] = state[tokenReference] = tokenContext.lastToken = state.lastToken = {\n      text,\n      type,\n      offset,\n      punctuator,\n      hint,\n      lineOffset,\n      lineBreaks,\n      lineInset,\n      columnNumber,\n      lineNumber,\n      captureNumber,\n      captureCount: 1,\n      tokenNumber,\n      contextNumber,\n      contextDepth,\n\n      isWhitespace, // whitespace:\n      isDelimiter, // delimiter:\n      isComment, // comment:\n\n      // FIXME: Nondescript\n      fault,\n      fold,\n      flatten,\n\n      goal: currentGoal,\n      group: contextGroup,\n      state,\n      context: tokenContext,\n    };\n  }\n  /* Context */\n  !nextContext ||\n    ((state.nextContext = undefined), nextContext === currentContext) ||\n    ((state.lastContext = currentContext),\n    currentContext === nextContext.parentContext\n      ? (state.totalContextCount++,\n        (nextContext.precedingAtom = lastAtom),\n        (nextContext.precedingTrivia = lastTrivia),\n        (nextContext.precedingToken = lastToken))\n      : ((parentContext.nestedContextCount += currentContext.nestedContextCount + currentContext.contextCount),\n        (parentContext.nestedCaptureCount += currentContext.nestedCaptureCount + currentContext.captureCount),\n        (parentContext.nestedTokenCount += currentContext.nestedTokenCount + currentContext.tokenCount)),\n    (state.context = nextContext));\n\n  return nextToken;\n};\n\nexport const initializeContext = (assign =>\n  /**\n   * @template {Partial<Context>} T\n   * @template {{}} U\n   * @param {T | Context} context\n   * @param {U} [properties]\n   * @returns {Context & T & U}\n   */\n  (context, properties) => {\n    //@ts-ignore\n    return (\n      assign(context, stats, properties),\n      context.goal &&\n        context.goal.initializeContext &&\n        //@ts-ignore\n        context.goal.initializeContext(context),\n      context\n    );\n  })(Object.assign);\n\nexport const capture = (identity, match, text) => {\n  match.capture[(match.identity = identity)] = match[0];\n  (match.fault = identity === 'fault') && (match.flatten = false);\n  return match;\n};\n\n/**\n * Safely mutates matcher state to open a new context.\n *\n * @param {string} text - Text of the intended { type = \"opener\" } token\n * @param {State} state - Matcher state\n * @returns {undefined | string} - String when context is **not** open\n */\nexport const open = (text, state) => {\n  const {\n    contexts,\n    context: parentContext,\n    context: {depth: index, goal: initialGoal},\n    groups,\n  } = state;\n  const group = initialGoal.groups[text];\n\n  if (!group) return initialGoal.type || 'sequence';\n  groups.splice(index, groups.length, group);\n  groups.closers.splice(index, groups.closers.length, group.closer);\n\n  parentContext.contextCount++;\n\n  const goal = group.goal === undefined ? initialGoal : group.goal;\n\n  state.nextContext = contexts[index] = initializeContext({\n    id: `${parentContext.id} ${\n      goal !== initialGoal ? `\\n${goal[Symbol.toStringTag]} ${group[Symbol.toStringTag]}` : group[Symbol.toStringTag]\n    }`,\n    number: ++contexts.count,\n    depth: index + 1,\n    parentContext,\n    goal,\n    group,\n    state,\n  });\n};\n\n/**\n * Safely mutates matcher state to close the current context.\n *\n * @param {string} text - Text of the intended { type = \"closer\" } token\n * @param {State} state - Matcher state\n * @returns {undefined | string} - String when context is **not** closed\n */\nexport const close = (text, state) => {\n  const groups = state.groups;\n  const index = groups.closers.lastIndexOf(text);\n\n  if (index === -1 || index !== groups.length - 1) return fault(text, state);\n\n  groups.closers.splice(index, groups.closers.length);\n  groups.splice(index, groups.length);\n  state.nextContext = state.context.parentContext;\n};\n\n/**\n * Safely mutates matcher state to skip ahead.\n *\n * TODO: Finish implementing forward helper\n *\n * @param {string | RegExp} search\n * @param {Match} match\n * @param {State} state\n * @param {number} [delta]\n */\nexport const forward = (search, match, state, delta) => {\n  if (typeof search === 'string' && search.length) {\n    state.nextOffset = match.input.indexOf(search, match.index + match[0].length) + (0 + delta || 0);\n  } else if (search != null && typeof search === 'object') {\n    search.lastIndex = match.index + match[0].length;\n    search.exec(match.input);\n    state.nextOffset = search.lastIndex + (0 + delta || 0);\n  } else {\n    throw new TypeError(`forward invoked with an invalid search argument`);\n  }\n};\n\n/**\n * @returns {'fault'}\n */\nexport const fault = (text, state) => {\n  // console.warn(text, {...state});\n  return 'fault';\n};\n\nexport const generateDefinitions = ({groups, goals, identities, symbols, keywords, tokens}) => {\n  const {[symbols.FaultGoal]: FaultGoal} = goals;\n\n  const {create, freeze, entries, getOwnPropertySymbols, getOwnPropertyNames, setPrototypeOf} = Object;\n\n  const punctuators = create(null);\n\n  for (const opener of getOwnPropertyNames(groups)) {\n    const {[opener]: group} = groups;\n    'goal' in group && (group.goal = goals[group.goal] || FaultGoal);\n    'parentGoal' in group && (group.parentGoal = goals[group.parentGoal] || FaultGoal);\n    freeze(group);\n  }\n\n  for (const symbol of getOwnPropertySymbols(goals)) {\n    // @ts-ignore\n    const {[symbol]: goal} = goals;\n\n    goal.name = (goal.symbol = symbol).description.replace(/Goal$/, '');\n    goal[Symbol.toStringTag] = `«${goal.name}»`;\n    goal.tokens = tokens[symbol] = {};\n    goal.groups = [];\n\n    if (goal.punctuators) {\n      for (const punctuator of (goal.punctuators = [...goal.punctuators]))\n        punctuators[punctuator] = !(goal.punctuators[punctuator] = true);\n      freeze(setPrototypeOf(goal.punctuators, punctuators));\n    }\n\n    if (goal.closers) {\n      for (const closer of (goal.closers = [...goal.closers])) punctuators[closer] = !(goal.closers[closer] = true);\n      freeze(setPrototypeOf(goal.closers, punctuators));\n    }\n\n    if (goal.openers) {\n      for (const opener of (goal.openers = [...goal.openers])) {\n        const group = (goal.groups[opener] = {...groups[opener]});\n        punctuators[opener] = !(goal.openers[opener] = true);\n        GoalSpecificTokenRecord(goal, group.opener, 'opener', {group});\n        GoalSpecificTokenRecord(goal, group.closer, 'closer', {group});\n        group.description || (group.description = `${group.opener}…${group.closer}`);\n        group[Symbol.toStringTag] = `‹${group.opener}›`;\n      }\n      freeze(setPrototypeOf(goal.openers, punctuators));\n    }\n\n    freeze(goal.groups);\n    freeze(goal.tokens);\n    freeze(goal);\n  }\n\n  freeze(punctuators);\n  freeze(goals);\n  freeze(groups);\n  freeze(identities);\n  freeze(symbols);\n\n  for (const [identity, list] of entries({})) {\n    for (const keyword of list.split(/\\s+/)) {\n      keywords[keyword] = identity;\n    }\n  }\n\n  keywords[Symbol.iterator] = Array.prototype[Symbol.iterator].bind(Object.getOwnPropertyNames(keywords));\n  freeze(keywords);\n\n  /**\n   * Creates a symbolically mapped goal-specific token record\n   *\n   * @template {{}} T\n   * @param {Goal} goal\n   * @param {string} text\n   * @param {type} type\n   * @param {T} properties\n   */\n  function GoalSpecificTokenRecord(goal, text, type, properties) {\n    const symbol = Symbol(`‹${goal.name} ${text}›`);\n    return (goal.tokens[text] = goal.tokens[symbol] = tokens[symbol] = {symbol, text, type, goal, ...properties});\n  }\n};\n\n/**\n * @template {string} K\n * @template {string} I\n * @param {{[i in I]: K[]}} mappings\n */\nexport const Keywords = mappings => {\n  /** @type {{[k in K]: I}} */\n  //@ts-ignore\n  const keywords = {};\n\n  for (const identity in mappings) {\n    for (const keyword of mappings[identity]) {\n      keywords[keyword] = identity;\n    }\n  }\n  return keywords;\n};\n\nexport const Construct = class Construct extends Array {\n  constructor() {\n    super(...arguments);\n    this.text = arguments.length ? this.join(' ') : '';\n    this.last = arguments.length ? this[this.length - 1] : '';\n  }\n\n  add(text) {\n    this.length === 0 ? (this.text = text) : (this.text += ` ${text}`);\n    super.push((this.last = text));\n  }\n  set(text) {\n    this.previousText = this.text;\n    text === '' || text == null\n      ? ((this.last = this.text = ''), this.length === 0 || super.splice(0, this.length))\n      : this.length === 0\n      ? super.push((this.last = this.text = text))\n      : super.splice(0, this.length, (this.last = this.text = text));\n  }\n  clone() {\n    const clone = new Construct(...this);\n    clone.text = this.text;\n    clone.last = this.last;\n    return clone;\n  }\n};\n\n/** @typedef {import('./types').Match} Match */\n/** @typedef {import('./types').Groups} Groups */\n/** @typedef {import('./types').Group} Group */\n/** @typedef {import('./types').Goal} Goal */\n/** @typedef {import('./types').Context} Context */\n/** @typedef {import('./types').Contexts} Contexts */\n/** @typedef {import('./types').State} State */\n/** @typedef {import('./types').Token} Token */\n/** @typedef {Goal['type']} type */\n/** @typedef {{symbol: symbol, text: string, type: type, goal?: Goal, group?: Group}} token */\n","﻿//@ts-check\nimport {generateDefinitions, Keywords, Construct} from './helpers.js';\n\nconst DEBUG_CONSTRUCTS = Boolean(false);\n\nconst ECMAScriptGoalSymbol = Symbol('ECMAScriptGoal');\nconst CommentGoalSymbol = Symbol('CommentGoal');\nconst RegExpGoalSymbol = Symbol('RegExpGoal');\nconst StringGoalSymbol = Symbol('StringGoal');\nconst TemplateLiteralGoalSymbol = Symbol('TemplateLiteralGoal');\nconst FaultGoalSymbol = Symbol('FaultGoal');\n\nconst goals = {};\n\ngoals[ECMAScriptGoalSymbol] = {\n  type: undefined,\n  flatten: undefined,\n  fold: undefined,\n  openers: ['{', '(', '[', \"'\", '\"', '`', '/', '/*', '//'],\n  closers: ['}', ')', ']'],\n};\n\ngoals[CommentGoalSymbol] = {type: 'comment', flatten: true, fold: true};\n\ngoals[RegExpGoalSymbol] = {\n  type: 'pattern',\n  flatten: undefined,\n  fold: undefined,\n  openers: ['[', '(', '{'],\n  closers: [']', ')', '}'],\n  opener: '/',\n  closer: '/',\n  // punctuators: ['+', '*', '?', '|', '^', '{', '}', '(', ')'],\n  punctuators: ['+', '*', '?', '|', '^'],\n};\n\ngoals[StringGoalSymbol] = {type: 'quote', flatten: true, fold: true};\n\ngoals[TemplateLiteralGoalSymbol] = {\n  type: 'quote',\n  flatten: true,\n  fold: false,\n  openers: ['${'],\n  opener: '`',\n  closer: '`',\n};\n\ngoals[FaultGoalSymbol] = {type: 'fault'}; // , groups: {}\n\nconst {\n  [FaultGoalSymbol]: FaultGoal,\n  [ECMAScriptGoalSymbol]: ECMAScriptGoal,\n  [CommentGoalSymbol]: CommentGoal,\n  [RegExpGoalSymbol]: RegExpGoal,\n  [StringGoalSymbol]: StringGoal,\n  [TemplateLiteralGoalSymbol]: TemplateLiteralGoal,\n} = goals;\n\nconst groups = {\n  ['{']: {opener: '{', closer: '}'},\n  ['(']: {opener: '(', closer: ')'},\n  ['[']: {opener: '[', closer: ']'},\n  ['//']: {\n    opener: '//',\n    closer: '\\n',\n    goal: CommentGoalSymbol,\n    parentGoal: ECMAScriptGoalSymbol,\n    description: '‹comment›',\n  },\n  ['/*']: {\n    opener: '/*',\n    closer: '*/',\n    goal: CommentGoalSymbol,\n    parentGoal: ECMAScriptGoalSymbol,\n    description: '‹comment›',\n  },\n  ['/']: {\n    opener: '/',\n    closer: '/',\n    goal: RegExpGoalSymbol,\n    parentGoal: ECMAScriptGoalSymbol,\n    description: '‹pattern›',\n  },\n  [\"'\"]: {\n    opener: \"'\",\n    closer: \"'\",\n    goal: StringGoalSymbol,\n    parentGoal: ECMAScriptGoalSymbol,\n    description: '‹string›',\n  },\n  ['\"']: {\n    opener: '\"',\n    closer: '\"',\n    goal: StringGoalSymbol,\n    parentGoal: ECMAScriptGoalSymbol,\n    description: '‹string›',\n  },\n  ['`']: {\n    opener: '`',\n    closer: '`',\n    goal: TemplateLiteralGoalSymbol,\n    parentGoal: ECMAScriptGoalSymbol,\n    description: '‹template›',\n  },\n  ['${']: {\n    opener: '${',\n    closer: '}',\n    goal: ECMAScriptGoalSymbol,\n    parentGoal: TemplateLiteralGoalSymbol,\n    description: '‹span›',\n  },\n};\n\nconst identities = {\n  UnicodeIDStart: 'ECMAScriptUnicodeIDStart',\n  UnicodeIDContinue: 'ECMAScriptUnicodeIDContinue',\n  HexDigits: 'ECMAScriptHexDigits',\n  CodePoint: 'ECMAScriptCodePoint',\n  ControlEscape: 'ECMAScriptControlEscape',\n  ContextualWord: 'ECMAScriptContextualWord',\n  RestrictedWord: 'ECMAScriptRestrictedWord',\n  FutureReservedWord: 'ECMAScriptFutureReservedWord',\n  Keyword: 'ECMAScriptKeyword',\n  // MetaProperty: 'ECMAScriptMetaProperty',\n};\n\n/** @type {ECMAScript.Keywords} */\n// @ts-ignore\nconst keywords = Keywords({\n  // TODO: Let's make those constructs (this.new.target borks)\n  // [identities.MetaProperty]: 'new.target import.meta',\n  [identities.Keyword]: [\n    ...['await', 'break', 'case', 'catch', 'class', 'const', 'continue'],\n    ...['debugger', 'default', 'delete', 'do', 'else', 'export', 'extends'],\n    ...['finally', 'for', 'function', 'if', 'import', 'in', 'instanceof'],\n    ...['let', 'new', 'return', 'super', 'switch', 'this', 'throw', 'try'],\n    ...['typeof', 'var', 'void', 'while', 'with', 'yield'],\n  ],\n  [identities.RestrictedWord]: ['interface', 'implements', 'package', 'private', 'protected', 'public'],\n  [identities.FutureReservedWord]: ['enum'],\n  // NOTE: This is purposely not aligned with the spec\n  [identities.ContextualWord]: ['arguments', 'async', 'as', 'from', 'of', 'static', 'get', 'set'],\n});\n\n{\n  const operativeKeywords = new Set('await delete typeof void yield'.split(' '));\n  const declarativeKeywords = new Set('export import default async function class const let var'.split(' '));\n  const constructiveKeywords = new Set('await async function class await delete typeof void yield this new'.split(' '));\n\n  /**\n   * Determines if the capture is a valid keyword, identifier or undefined\n   * based on matcher state (ie lastAtom, context, intent) and subset\n   * of ECMAScript keyword rules of significant.\n   *\n   * TODO: Refactor or extensively test captureKeyword\n   * TODO: Document subset of ECMAScript keyword rules of significant\n   *\n   * @param {string} text - Matched by /\\b(‹text›)\\b(?=[^\\s$_:]|\\s+[^:]|$)\n   * @param {State} state\n   * @param {string} [intent]\n   */\n  const captureKeyword = (text, {lastAtom: pre, lineIndex, context}, intent) => {\n    //                              (a) WILL BE ‹fault› UNLESS  …\n    switch (intent || (intent = context.intent)) {\n      //  DESTRUCTURING INTENT  (ie Variable/Class/Function declarations)\n      case 'destructuring':\n      //  DECLARATION INTENT  (ie Variable/Class/Function declarations)\n      case 'declaration':\n        return (\n          //                        (b)   WILL BE ‹idenfitier›\n          //                              AFTER ‹.›  (as ‹operator›)\n          (pre !== undefined && pre.text === '.' && 'identifier') ||\n          //                        (c)   WILL BE ‹keyword›\n          //                              IF DECLARATIVE AND …\n          (declarativeKeywords.has(text) &&\n            //                      (c1)  NOT AFTER ‹keyword› …\n            (pre === undefined ||\n              pre.type !== 'keyword' ||\n              //                          UNLESS IS DIFFERENT\n              (pre.text !== text &&\n                //                        AND NOT ‹export› NOR ‹import›\n                !(text === 'export' || text === 'import') &&\n                //                  (c2)  FOLLOWS ‹export› OR ‹default›\n                (pre.text === 'export' ||\n                  pre.text === 'default' ||\n                  //                (c3)  IS ‹function› AFTER ‹async›\n                  (pre.text === 'async' && text === 'function')))) &&\n            'keyword')\n        );\n      default:\n        return (\n          //                        (b)   WILL BE ‹idenfitier› …\n          (((pre !== undefined &&\n            //                      (b1)  AFTER ‹.›  (as ‹operator›)\n            pre.text === '.') ||\n            //                      (b2)  OR ‹await› (not as ‹keyword›)\n            (text === 'await' && context.awaits === false) ||\n            //                      (b3)  OR ‹yield› (not as ‹keyword›)\n            (text === 'yield' && context.yields === false)) &&\n            'identifier') ||\n          //                        (c)   WILL BE ‹keyword› …\n          ((pre === undefined ||\n            //                      (c1)  NOT AFTER ‹keyword›\n            pre.type !== 'keyword' ||\n            //                      (c2)  UNLESS OPERATIVE\n            operativeKeywords.has(pre.text) ||\n            //                      (c3)  OR ‹if› AFTER ‹else›\n            (text === 'if' && pre.text === 'else') ||\n            //                      (c4)  OR ‹default› AFTER ‹export›\n            (text === 'default' && pre.text === 'export') ||\n            //                      (c5)  NOT AFTER ‹async›\n            //                            EXCEPT ‹function›\n            ((pre.text !== 'async' || text === 'function') &&\n              //                    (c6)  AND NOT AFTER ‹class›\n              //                          EXCEPT ‹extends›\n              (pre.text !== 'class' || text === 'extends') &&\n              //                    (c7)  AND NOT AFTER ‹for›\n              //                          EXCEPT ‹await› (as ‹keyword›)\n              (pre.text !== 'for' || text === 'await') &&\n              //                    (c6)  NOT AFTER ‹return›\n              //                          AND IS DIFFERENT\n              //                          AND IS NOT ‹return›\n              (pre.text !== 'return'\n                ? pre.text !== text\n                : text !== 'return'\n                ? //                (c7)  OR AFTER ‹return›\n                  //                      AND IS CONSTRUCTIVE\n                  constructiveKeywords.has(text)\n                : //                (c8)  OR AFTER ‹return›\n                  //                      AND IS ‹return›\n                  //                      WHEN ON NEXT LINE\n                  pre.lineNumber < 1 + lineIndex))) &&\n            'keyword')\n        );\n    }\n  };\n\n  const EmptyConstruct = Object.freeze(new Construct());\n  const initializeContext = context => {\n    if (context.state['USE_CONSTRUCTS'] !== true) return;\n    context.parentContext == null || context.parentContext.currentConstruct == null\n      ? (context.currentConstruct == null && (context.currentConstruct = EmptyConstruct),\n        (context.parentConstruct = context.openingConstruct = EmptyConstruct))\n      : (context.currentConstruct == null && (context.currentConstruct = new Construct()),\n        (context.parentConstruct = context.parentContext.currentConstruct),\n        context.parentContext.goal === ECMAScriptGoal && context.parentConstruct.add(context.group.description),\n        (context.openingConstruct = context.parentConstruct.clone()),\n        DEBUG_CONSTRUCTS === true && console.log(context));\n  };\n\n  goals[RegExpGoalSymbol].initializeContext = goals[StringGoalSymbol].initializeContext = goals[\n    TemplateLiteralGoalSymbol\n  ].initializeContext = initializeContext;\n\n  /** @param {Context} context */\n  goals[ECMAScriptGoalSymbol].initializeContext = context => {\n    context.captureKeyword = captureKeyword;\n    context.state['USE_CONSTRUCTS'] === true && initializeContext(context);\n  };\n}\n\nconst symbols = {\n  ECMAScriptGoal: ECMAScriptGoalSymbol,\n  CommentGoal: CommentGoalSymbol,\n  RegExpGoal: RegExpGoalSymbol,\n  StringGoal: StringGoalSymbol,\n  TemplateLiteralGoal: TemplateLiteralGoalSymbol,\n  FaultGoal: FaultGoalSymbol,\n};\n\n/** Unique token records @type {{[symbol: symbol]: }} */\nconst tokens = {};\n\ngenerateDefinitions({groups, goals, identities, symbols, keywords, tokens});\n\nexport {\n  identities,\n  goals,\n  groups,\n  symbols,\n  keywords,\n  FaultGoal,\n  ECMAScriptGoal,\n  CommentGoal,\n  RegExpGoal,\n  StringGoal,\n  TemplateLiteralGoal,\n};\n\n/** @typedef {import('./types').State} State */\n/** @typedef {import('./types').Context} Context */\n\n/**\n * @typedef {'await'|'break'|'case'|'catch'|'class'|'const'|'continue'|'debugger'|'default'|'delete'|'do'|'else'|'export'|'extends'|'finally'|'for'|'function'|'if'|'import'|'in'|'instanceof'|'new'|'return'|'super'|'switch'|'this'|'throw'|'try'|'typeof'|'var'|'void'|'while'|'with'|'yield'} ECMAScript.Keyword\n * @typedef {'interface'|'implements'|'package'|'private'|'protected'|'public'} ECMAScript.RestrictedWord\n * @typedef {'enum'} ECMAScript.FutureReservedWord\n * @typedef {'arguments'|'async'|'as'|'from'|'of'|'static'} ECMAScript.ContextualKeyword\n * @typedef {Record<ECMAScript.Keyword|ECMAScript.RestrictedWord|ECMAScript.FutureReservedWord|ECMAScript.ContextualKeyword, symbol>} ECMAScript.Keywords\n */\n\n// //@ts-ignore\n// const keywords = {};\n\n// function Symbolic(key, description = key) {\n//   return (symbols[key] = Symbol(description));\n// }\n","﻿// import {Matcher} from '../../../modules/matcher/matcher.js';\nimport {Matcher} from '../matcher/matcher.js';\nimport {HexDigit, DecimalDigit, BinaryDigit, ControlLetter, IdentifierStart, IdentifierPart} from './ranges.js';\nimport {keywords, ECMAScriptGoal, CommentGoal, RegExpGoal, StringGoal, TemplateLiteralGoal} from './definitions.js';\nimport {capture, forward, fault, open, close} from './helpers.js';\n\nDUMMY: async () => {\n  /* prettier-ignore */ // Make sure this block never lints\n  {\n    Identifiers: {\n      $\\u0032; \\u0024\\u0032; this.new.target;\n    }\n\n    Solidus: {\n                        // ExpressionStart never divide\n      ( ([              /([(regexp)])/g / [] ] ) );\n      ( [] /( [         /([(regexp)])/g / [] ] ) );\n      ( ([]) /( [       /([(regexp)])/g / [] ] ) );\n      ( [] /* */ /( [   /([(regexp)])/g / [] ] ) );\n      ( []/( [/*/*//*/*//([(regexp)])/g / [] ] ) );\n\n                        // Literals always divide (never ASI)\n      ( []              /([(div)])/g / [] );\n      ( ([])            /([(div)])/g / [] );\n      ( []/*/*//**//*/*//([(div)])/g / [] );\n\n      a = b             // Identifiers always divide (never ASI)\n                        /(div)/g.exec(c).map(d);\n\n                        // Declaration (ASI) then ExpressionStart\n      function ƒ () {}  /(regexp)/g.exec(c).map(d);\n\n\n      async () => {}    // Curly+LineBreak is ASI\n                        /(regexp)/g.exec(c).map(d);\n      async () => {}\n                        /(regexp)/g.exec(c).map(d);\n\n      async () => ({})  //\n                        /(div)/g.exec(c).map(d);\n\n                        // Function calls always in Expression\n      async ()          /(div)/g.exec(c).map(d);\n\n                        // FIXME: ObjectLiteral is \"a literal\"\n      const x = {}      /(div)/g.exec(c).map(d);\n\n                        // FIXME: Function/ClassExpression is \"an expression\"\n      const y = function ƒ () {}\n                        /(div)/g.exec(c).map(d);\n\n                        // Keyword always regexp (regardless of ASI)\n      return await/*/\\*//(regexp)/g.exec(c).map(d);\n\n      (async function* () {\n\n                        // Recursively operative Keywords\n                        yield   yield\n                        void    void\n                        typeof  typeof\n                        delete  delete\n                        await   await\n                        ('')\n\n                        await   new     class {}\n                        return  new     class {}\n                        yield   async   function () {}\n                        return\n                        return\n                        return  async   function () {}\n\n                        // FIXME: Non-Keywords\n                        async\n                        async   ('')\n      });\n\n      // Matt Austin's\n      Function(\"arg=`\", \"/*body`){});({x: this/**/\");\n      (function(arg=`/*``*/){/*body`){});({x: this/**/})\n    }\n\n    Strings: {\n      '@@'            // FIXME: Not a fault\n\n      '\\\n      a\\a'            // quote›‹punctuator, comment\n\n      \"\\\n      \\\\n\\\\b\"/**/     // quote›‹comment, comment\n    }\n\n    Numerals: {\n      0, -0, 1, -1, +1.1, 0.1, 0.1e3\n      0b01, 0x0123456789abcdef\n      // 1_1\n      NaN, Infinity, -Infinity\n    }\n  }\n};\n\nexport const matcher = (ECMAScript =>\n  Matcher.define(\n    // Matcher generator for this matcher instance\n    entity =>\n      Matcher.join(\n        entity(ECMAScript.Break()),\n        entity(ECMAScript.Whitespace()),\n        entity(ECMAScript.Escape()),\n        entity(ECMAScript.Comment()),\n        entity(ECMAScript.StringLiteral()),\n        entity(ECMAScript.TemplateLiteral()),\n        entity(ECMAScript.Opener()),\n        entity(ECMAScript.Closer()),\n        entity(ECMAScript.Solidus()),\n        entity(ECMAScript.Operator()),\n        entity(ECMAScript.Keyword()),\n        entity(ECMAScript.Number()),\n        entity(ECMAScript.Identifier()),\n\n        // Defines how to address non-entity character(s):\n        entity(\n          ECMAScript.Fallthrough({\n            type: 'fault',\n            flatten: true,\n          }),\n        ),\n      ),\n    // RegExp flags for this matcher instance\n    'gu',\n    // Property descriptors for this matcher instance\n    {\n      goal: {value: ECMAScriptGoal, enumerable: true, writable: false},\n    },\n  ))({\n  Fallthrough: ({fallthrough = '.', type, flatten} = {}) =>\n    Matcher.define(\n      (typeof fallthrough === 'string' || (fallthrough = '.'), type && typeof type === 'string')\n        ? entity => Matcher.sequence/* regexp */`(\n            ${fallthrough}\n            ${entity((text, entity, match, state) => {\n              capture(\n                type !== 'fault'\n                  ? type || state.context.goal.type || 'sequence'\n                  : state.context.goal !== ECMAScriptGoal\n                  ? state.context.goal.type || 'sequence'\n                  : fault(text, state),\n                match,\n                // text,\n              );\n              typeof flatten === 'boolean' && (match.flatten = flatten);\n            })}\n          )`\n        : entity => `${fallthrough}`,\n    ),\n  Break: ({lf = true, crlf = false} = {}) =>\n    Matcher.define(\n      entity => Matcher.sequence/* regexp */`(\n        ${Matcher.join(lf && '\\\\n', crlf && '\\\\r\\\\n')}\n        ${entity((text, entity, match, state) => {\n          match.format = 'whitespace';\n          capture(\n            state.context.group !== undefined && state.context.group.closer === '\\n'\n              ? close(text, state) || (state.context.goal === CommentGoal ? 'break' : 'closer')\n              : 'break',\n            match,\n            // text,\n          );\n          match.flatten = false;\n        })}\n      )`,\n    ),\n  Whitespace: () =>\n    Matcher.define(\n      entity => Matcher.sequence/* regexp */`(\n        \\s+\n        ${entity((text, entity, match, state) => {\n          match.format = 'whitespace';\n          capture((match.flatten = state.lineOffset !== match.index) ? 'whitespace' : 'inset', match); // , text\n        })}\n      )`,\n    ),\n  Escape: ({\n    IdentifierStartCharacter = RegExp(\n      Matcher.sequence/* regexp */`[${IdentifierStart}]`,\n      IdentifierPart.includes('\\\\p{') ? 'u' : '',\n    ),\n    IdentifierPartSequence = RegExp(Matcher.sequence/* regexp */`[${IdentifierPart}]+`, IdentifierPart.includes('\\\\p{') ? 'u' : ''),\n    fromUnicodeEscape = (fromCodePoint => text => fromCodePoint(parseInt(text.slice(2), 16)))(String.fromCodePoint),\n  } = {}) =>\n    Matcher.define(\n      entity => Matcher.sequence/* regexp */`(\n        \\\\u[${HexDigit}][${HexDigit}][${HexDigit}][${HexDigit}]\n        ${entity((text, entity, match, state) => {\n          match.format = 'escape';\n          capture(\n            state.context.goal.type ||\n              (state.context.goal === ECMAScriptGoal &&\n              state.lastToken != null &&\n              (state.lastToken.type === 'identifier'\n                ? IdentifierPartSequence.test(fromUnicodeEscape(text))\n                : IdentifierStartCharacter.test(fromUnicodeEscape(text)))\n                ? ((match.flatten = true), 'identifier')\n                : 'escape'),\n            match,\n            // text,\n          );\n        })}\n      )|(\n        \\\\f|\\\\n|\\\\r|\\\\t|\\\\v|\\\\c[${ControlLetter}]\n        |\\\\x[${HexDigit}][${HexDigit}]\n        |\\\\u\\{[${HexDigit}]*\\}\n        |\\\\[^]\n        ${entity((text, entity, match, state) => {\n          capture(state.context.goal.type || 'escape', match);\n          match.capture[keywords[text]] = text;\n        })}\n      )`,\n    ),\n  Comment: () =>\n    Matcher.define(\n      entity => Matcher.sequence/* regexp */`(\n        \\/\\/|\\/\\*\n        ${entity((text, entity, match, state) => {\n          match.format = 'punctuation';\n          capture(\n            state.context.goal === ECMAScriptGoal\n              ? open(text, state) ||\n                  // Safely fast forward to end of comment\n                  (text === '//' ? forward('\\n', match, state) : forward('*/', match, state),\n                  (match.punctuator = CommentGoal.type),\n                  'opener')\n              : state.context.goal !== CommentGoal\n              ? state.context.goal.type || 'sequence'\n              : state.context.group.closer !== text\n              ? CommentGoal.type\n              : close(text, state) || (match.punctuator = CommentGoal.type),\n            match,\n            // text,\n          );\n        })}\n      )`,\n    ),\n  StringLiteral: ({\n    SingleQuoteLookAhead = /(?:[^'\\\\\\n]+?(?=\\\\.|')|\\\\.)*?(?:'|$)/g,\n    DoubleQuoteLookAhead = /(?:[^\"\\\\\\n]+?(?=\\\\.|\")|\\\\.)*?(?:\"|$)/g,\n  } = {}) =>\n    Matcher.define(\n      entity => Matcher.sequence/* regexp */`(\n        \"|'\n        ${entity((text, entity, match, state) => {\n          match.format = 'punctuation';\n          capture(\n            state.context.goal === ECMAScriptGoal\n              ? open(text, state) ||\n                  // Safely fast forward to end of string\n                  (forward(text === '\"' ? DoubleQuoteLookAhead : SingleQuoteLookAhead, match, state, -1),\n                  // (match.flatten = true),\n                  (match.punctuator = StringGoal.type),\n                  'opener')\n              : state.context.goal !== StringGoal\n              ? state.context.goal.type || 'sequence'\n              : state.context.group.closer !== text\n              ? StringGoal.type\n              : close(text, state) ||\n                ((match.punctuator = StringGoal.type),\n                // (match.flatten = true),\n                'closer'),\n            match,\n            // text,\n          );\n        })}\n      )`,\n    ),\n  TemplateLiteral: () =>\n    Matcher.define(\n      entity => Matcher.sequence/* regexp */`(\n        ${'`'}\n        ${entity((text, entity, match, state) => {\n          match.format = 'punctuation';\n          capture(\n            state.context.goal === ECMAScriptGoal\n              ? open(text, state) ||\n                  // TODO: Explore fast forward in template string parts\n                  ((match.punctuator = TemplateLiteralGoal.type), 'opener')\n              : state.context.goal !== TemplateLiteralGoal\n              ? state.context.goal.type || 'sequence'\n              : state.context.group.closer !== text\n              ? TemplateLiteralGoal.type\n              : close(text, state) || ((match.punctuator = TemplateLiteralGoal.type), 'closer'),\n            match,\n            // text,\n          );\n        })}\n      )`,\n    ),\n  Opener: () =>\n    Matcher.define(\n      entity => Matcher.sequence/* regexp */`(\n        \\$\\{|\\{|\\(|\\[\n        ${entity((text, entity, match, state) => {\n          match.format = 'punctuation';\n          capture(\n            state.context.goal.punctuators !== undefined && state.context.goal.punctuators[text] === true\n              ? (match.punctuator = 'combinator')\n              : state.context.goal.openers &&\n                state.context.goal.openers[text] === true &&\n                (state.context.goal !== RegExpGoal || state.context.group.opener !== '[')\n              ? open(text, state) || 'opener'\n              : state.context.goal.type || 'sequence',\n            match,\n            // text,\n          );\n        })}\n      )`,\n    ),\n  Closer: () =>\n    Matcher.define(\n      entity => Matcher.sequence/* regexp */`(\n        \\}|\\)|\\]\n        ${entity((text, entity, match, state) => {\n          match.format = 'punctuation';\n          capture(\n            state.context.goal.punctuators && state.context.goal.punctuators[text] === true\n              ? (match.punctuator = 'combinator')\n              : state.context.goal.closers &&\n                state.context.goal.closers[text] === true &&\n                (state.context.goal !== RegExpGoal ||\n                  (state.context.group.opener !== '[' || text === state.context.group.closer))\n              ? close(text, state) || 'closer'\n              : state.context.goal.type || 'sequence',\n            match,\n            // text,\n          );\n        })}\n      )`,\n    ),\n  Solidus: () =>\n    // TODO: Refine the necessary criteria for RegExp vs Div\n    // TEST: [eval('var g;class x {}/1/g'), eval('var g=class x {}/1/g')]\n    Matcher.define(\n      entity => Matcher.sequence/* regexp */`(\n        \\*\\/|\\/=|\\/\n        ${entity((text, entity, match, state) => {\n          match.format = 'punctuation';\n          capture(\n            state.context.goal === CommentGoal\n              ? (state.context.group.closer === text && close(text, state)) ||\n                  (match.punctuator = state.context.goal.type)\n              : state.context.goal === RegExpGoal && state.context.group.closer !== ']'\n              ? close('/', state) || ((match.punctuator = state.context.goal.type), 'closer')\n              : state.context.goal !== ECMAScriptGoal\n              ? state.context.goal.type || 'sequence'\n              : text[0] === '*'\n              ? fault(text, state)\n              : state.lastAtom === undefined ||\n                (state.lastAtom.type === 'operator'\n                  ? state.lastAtom.text !== '++' && state.lastAtom.text !== '--'\n                  : state.lastAtom.type === 'closer'\n                  ? state.lastAtom.text === '}'\n                  : state.lastAtom.type === 'opener' || state.lastAtom.type === 'keyword')\n              ? open(text, state) || ((match.punctuator = 'pattern'), 'opener')\n              : (match.punctuator = 'operator'),\n            match,\n            // text,\n          );\n        })}\n      )`,\n    ),\n  Operator: () =>\n    Matcher.define(\n      entity => Matcher.sequence/* regexp */`(\n        ,|;|\\.\\.\\.|\\.|:|\\?|=>\n        |\\+\\+|--\n        |\\+=|-=|\\*\\*=|\\*=\n        |&&|&=|&|\\|\\||\\|=|\\||%=|%|\\^=|\\^|~=|~\n        |<<=|<<|<=|<|>>>=|>>>|>>=|>>|>=|>\n        |!==|!=|!|===|==|=\n        |\\+|-|\\*\\*|\\*\n        ${entity((text, entity, match, state) => {\n          match.format = 'punctuation';\n          capture(\n            state.context.goal === ECMAScriptGoal\n              ? (text === '*' && state.lastAtom && state.lastAtom.text === 'function' && 'keyword') || 'operator'\n              : state.context.goal.punctuators && state.context.goal.punctuators[text] === true\n              ? (match.punctuator = 'punctuation')\n              : state.context.goal.type || 'sequence',\n            match,\n            // text,\n          );\n        })}\n      )`,\n    ),\n  Keyword: () =>\n    Matcher.define(\n      entity => Matcher.sequence/* regexp */`\\b(\n        ${Matcher.join(...keywords).replace(/\\./g, '\\\\.')}\n        ${entity((text, entity, match, state) => {\n          match.format = 'identifier';\n          capture(\n            (match.flatten = state.context.goal !== ECMAScriptGoal)\n              ? state.context.goal.type || 'sequence'\n              : state.lastAtom !== undefined && state.lastAtom.text === '.'\n              ? 'identifier'\n              : state.context.captureKeyword === undefined\n              ? 'keyword'\n              : state.context.captureKeyword(text, state) || fault(text, state),\n            match,\n            // text,\n          );\n        })}\n      )\\b(?=[^\\s$_:]|\\s+[^:]|$)`,\n    ),\n  Identifier: ({RegExpFlags = /^[gimsuy]+$/} = {}) =>\n    Matcher.define(\n      entity => Matcher.sequence/* regexp */`(\n        [${IdentifierStart}][${IdentifierPart}]*\n        ${entity((text, entity, match, state) => {\n          match.format = 'identifier';\n          capture(\n            state.context.goal !== ECMAScriptGoal\n              ? state.context.goal.type || 'sequence'\n              : state.lastToken !== undefined && state.lastToken.punctuator === 'pattern' && RegExpFlags.test(text)\n              ? ((match.flatten = true), (match.punctuator = RegExpGoal.type), 'closer')\n              : ((match.flatten = true), 'identifier'),\n            match,\n            // text,\n          );\n        })}\n      )`,\n      `${IdentifierStart}${IdentifierPart}`.includes('\\\\p{') ? 'u' : '',\n    ),\n  Number: ({\n    NumericSeparator,\n    Digits = NumericSeparator\n      ? Digit => Matcher.sequence/* regexp */`[${Digit}][${Digit}${Matcher.escape(NumericSeparator)}]*`\n      : Digit => Matcher.sequence/* regexp */`[${Digit}]+`,\n    DecimalDigits = Digits(DecimalDigit),\n    HexDigits = Digits(HexDigit),\n    BinaryDigits = Digits(BinaryDigit),\n  } = {}) =>\n    Matcher.define(\n      entity => Matcher.sequence/* regexp */`\\b(\n        ${DecimalDigits}\\.${DecimalDigits}[eE]${DecimalDigits}\n        |\\.${DecimalDigits}[eE]${DecimalDigits}\n        |0[xX]${HexDigits}\n        |0[bB]${BinaryDigits}\n        |${DecimalDigits}\\.${DecimalDigits}\n        |\\.${DecimalDigits}\n        |${DecimalDigits}\n        ${entity((text, entity, match, state) => {\n          match.format = 'number';\n          capture(state.context.goal.type || 'number', match); // , text\n        })}\n      )\\b`,\n    ),\n});\n","﻿/// <reference path=\"./types.d.ts\" />\n\nimport {countLineBreaks} from '../../packages/tokenizer/lib/core.js';\n\nexport const {\n  createTokenFromMatch,\n  createMatcherInstance,\n  createString,\n  createMatcherTokenizer,\n  createMatcherMode,\n} = (() => {\n  const {\n    RegExp,\n    Object,\n    Object: {assign, create, freeze, defineProperty, defineProperties, getOwnPropertyNames, setPrototypeOf},\n    String,\n  } = globalThis;\n\n  /** @typedef {RegExpConstructor['prototype']} Matcher */\n\n  /**\n   * @template {Matcher} T\n   * @template {{}} U\n   * @param {T} matcher\n   * @param {TokenizerState<T, U>} [state]\n   * @returns {TokenMatcher<U>}\n   */\n  const createMatcherInstance = (matcher, state) =>\n    defineProperty(\n      ((state || (state = create(null))).matcher =\n        (matcher && matcher instanceof RegExp && createMatcherClone(matcher)) || RegExp(matcher, 'g')),\n      'state',\n      {value: state},\n    );\n\n  /**\n   * @template {Matcher} T\n   * @template {T} U\n   * @template {{}} V\n   * @type {(matcher: T & V, instance?: U) => U & V}\n   * @param {T} param0\n   * @param {U} [param1]\n   * @returns {U}\n   */\n  const createMatcherClone = ({constructor: {prototype}, source, flags, lastIndex, ...properties}, instance) => (\n    (instance = assign(instance || RegExp(source, flags || 'g'), properties)),\n    prototype && setPrototypeOf(instance, prototype),\n    instance\n  );\n\n  /** @type {(value: any) => string} */\n  const createString = String;\n\n  /**\n   * @type {<M extends MatchArray, T extends {}>(init: MatchResult<M>) => Token<T>}\n   * @param {MatchResult<MatchArray>} param0\n   */\n  const createTokenFromMatch = ({0: text, identity, capture, index}) => ({\n    type: (identity && (identity.description || identity)) || 'text',\n    text,\n    lineBreaks: countLineBreaks(text),\n    lineInset: (capture && capture.inset) || '',\n    offset: index,\n    capture,\n  });\n\n  const tokenizerProperties = Object.getOwnPropertyDescriptors(\n    freeze(\n      class Tokenizer {\n        /** @template {Matcher} T @template {{}} U */\n        *tokenize() {\n          /** @type {Token<U>} */\n          // let next;\n          /** @type {{createToken: typeof createTokenFromMatch, initializeState: <V>(state: V) => V & TokenizerState<T, U>}} */\n          const createToken = (this && this.createToken) || createTokenFromMatch;\n          /** @type {string} */\n          const string = createString(Object.keys({[arguments[0]]: 1})[0]);\n          /** @type {TokenMatcher<U>} */\n          const matcher = createMatcherInstance(this.matcher, assign(arguments[1] || {}, {sourceText: string}));\n          /** @type {TokenizerState<T, U>} */\n          const state = matcher.state;\n          this.initializeState && this.initializeState(state);\n          matcher.exec = matcher.exec;\n\n          for (\n            let match, capturedToken, retainedToken, index = 0;\n            // BAIL on first failed/empty match\n            ((match = matcher.exec(string)) !== null && match[0] !== '') ||\n            //   BUT first yield a nextToken if present\n            (retainedToken !== undefined && (yield retainedToken), (state.nextToken = undefined));\n\n          ) {\n            if ((capturedToken = createToken(match, state)) === undefined) continue;\n\n            // HOLD back one grace token\n            //   until createToken(…) !== undefined (ie new token)\n            //   set the incremental token index for this token\n            //   and keep it referenced directly on the state\n            (state.nextToken = capturedToken).index = index++;\n\n            //   THEN yield a previously held token\n            if (retainedToken !== undefined) yield retainedToken;\n\n            //   THEN finally clear the nextToken reference\n            retainedToken = capturedToken;\n            state.nextToken = undefined;\n          }\n\n          this.finalizeState && this.finalizeState(state);\n\n          // console.log({...state});\n        }\n      }.prototype,\n    ),\n  );\n\n  /**\n   * @type { {<T extends Matcher, U extends {} = {}>(sourceText: string, initialState?: Partial<TokenizerState<undefined, U>): IterableIterator<Token<U>>} }\n   */\n  const createMatcherTokenizer = instance => defineProperties(instance, tokenizerProperties);\n\n  /**\n   * @param {import('/modules/matcher/matcher.js').Matcher} matcher\n   * @param {any} [options]\n   */\n  const createMatcherMode = (matcher, options) => {\n    const tokenizer = createMatcherTokenizer({\n      createToken: createTokenFromMatch,\n      /** @type {(state: {}) =>  void} */\n      initializeState: undefined,\n      finalizeState: undefined,\n      matcher: freeze(createMatcherInstance(matcher)),\n    });\n\n    const mode = {syntax: 'matcher', tokenizer};\n    options &&\n      ({\n        syntax: mode.syntax = mode.syntax,\n        aliases: mode.aliases,\n        preregister: mode.preregister,\n        createToken: tokenizer.createToken = tokenizer.createToken,\n        initializeState: tokenizer.initializeState,\n        finalizeState: tokenizer.finalizeState,\n        ...mode.overrides\n      } = options);\n\n    freeze(tokenizer);\n\n    return mode;\n  };\n\n  return {createTokenFromMatch, createMatcherInstance, createString, createMatcherTokenizer, createMatcherMode};\n})();\n","﻿//@ts-check\n\nimport {matcher} from './matcher.js';\nimport {initializeState, finalizeState, createToken} from './helpers.js';\nimport {createMatcherMode} from '../matcher/helpers.js';\n\nexport const mode = createMatcherMode(matcher, {\n  USE_CONSTRUCTS: false,\n\n  syntax: 'ecmascript',\n  aliases: ['es', 'js', 'javascript'],\n\n  preregister: parser => {\n    parser.unregister('es');\n    parser.unregister('ecmascript');\n  },\n\n  initializeState: state => {\n    state.USE_CONSTRUCTS = mode.USE_CONSTRUCTS === true;\n    initializeState(state);\n  },\n\n  finalizeState: state => {\n    finalizeState(state);\n  },\n\n  createToken: (match, state) => {\n    const token = createToken(match, state);\n\n    if (state.USE_CONSTRUCTS === true && token !== undefined) {\n      const {type, text, context} = token;\n      if (token.goal === matcher.goal) {\n        switch (type) {\n          case 'inset':\n          case 'whitespace':\n          case 'opener':\n          case 'closer':\n            break;\n          case 'number':\n          case 'identifier':\n            context.currentConstruct.add(`‹${type}›`);\n            break;\n          case 'operator':\n            switch (text) {\n              case ',':\n              case ';':\n                context.currentConstruct.set('');\n                break;\n              case '?':\n              case '=':\n                context.currentConstruct.set(text);\n                break;\n              default:\n                context.currentConstruct.add(text);\n                break;\n            }\n            break;\n          case 'break':\n            context.currentConstruct.last !== undefined &&\n              (context.currentConstruct.last === 'return' ||\n                context.currentConstruct.last === 'throw' ||\n                context.currentConstruct.last === 'break' ||\n                context.currentConstruct.last === 'continue' ||\n                context.currentConstruct.last === 'yield' ||\n                context.currentConstruct.last === '{…}') &&\n              context.currentConstruct.set('');\n            break;\n          case 'keyword':\n            switch (text) {\n              case 'for':\n              case 'if':\n              case 'do':\n              case 'while':\n              case 'with':\n                context.currentConstruct.set(text);\n                break;\n              default:\n                context.currentConstruct.add(text);\n            }\n            break;\n        }\n        token.construct = context.currentConstruct.text;\n      }\n      token.isDelimiter || context.currentConstruct == null\n        ? context.openingConstruct == null ||\n          context.openingConstruct.length === 0 ||\n          (token.hint = `${token.hint}\\n\\n${context.openingConstruct.text}`)\n        : context.currentConstruct.length > 0\n        ? (token.hint = `${token.hint}\\n\\n${context.currentConstruct.text}`)\n        : context.currentConstruct.previousText &&\n          (token.hint = `${token.hint}\\n\\n${context.currentConstruct.previousText}\\n…`);\n    }\n    return token;\n  },\n});\n\n/** @typedef {import('./types').State} State */\n","﻿import {mode} from './mode.js';\n\nimport.meta.url.includes('/es/playground.js') && (mode.USE_CONSTRUCTS = true);\n\n/**\n * @param {import('/markup/packages/tokenizer/lib/api').API} markup\n */\nexport default ((\n  sourceURL = './matcher.js',\n  sourceType = 'es',\n  resolveSourceType = (defaultType, {sourceType, resourceType, options}) => {\n    if (!sourceType && resourceType === 'javascript') return 'es';\n  },\n) => async markup => {\n  markup.parsers[0].register(mode);\n  return {sourceURL, sourceType, resolveSourceType};\n})();\n","import {createParser} from '../lib/core.js';\nimport {TokenizerAPI} from '../lib/api.js';\nimport markupDOM from '../extensions/dom.js';\nimport experimentalES from '../../../experimental/es/playground.js';\n\n/** @type {{experimentalESAPI: import('../lib/api').API}} */\nconst {\n  experimentalESAPI: experimentalESAPI,\n  experimentalESAPI: {parsers, render, tokenize, warmup},\n} = {\n  //@ts-ignore\n  experimentalESAPI: new TokenizerAPI({\n    parsers: [new (createParser())({url: import.meta.url})],\n    render: (source, options, flags) => {\n      const fragment = options && options.fragment;\n      const debugging = flags && /\\bdebug\\b/i.test(typeof flags === 'string' ? flags : [...flags].join(' '));\n\n      debugging && console.info('render: %o', {api: experimentalESAPI, source, options, flags, fragment, debugging});\n      fragment && (fragment.logs = debugging ? [] : undefined);\n\n      return markupDOM.render(tokenize(source, options, flags), fragment);\n    },\n  }),\n};\n\n// Integrate experimental ECMAScript mapping it to the\n//   \"es\" mode and \"ecmascript\" alias, but leaving the\n//   normal JavaScript intact for both \"js\" and its\n//   \"javascript\" alias.\n\nexport const overrides = Object.freeze(experimentalES(experimentalESAPI));\n\nexport default experimentalESAPI;\nexport {parsers, tokenize, render, warmup};\n"],"names":["document","Element","Node","Text","DocumentFragment","createElement","createText","createFragment","dom.document","pseudom.native","native","pseudom.pseudo"],"mappings":"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"}