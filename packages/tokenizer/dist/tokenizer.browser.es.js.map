{"version":3,"file":"tokenizer.browser.es.js","sources":["../../packages/tokenizer/lib/core.js","../../packages/tokenizer/lib/api.js","../../packages/pseudom/pseudo.js","../../packages/pseudom/native.js","../../packages/pseudom/pseudom.js","../../packages/tokenizer/extensions/helpers.js","../../packages/tokenizer/extensions/dom.js","../../../modules/matcher/matcher.js","../../experimental/es/ranges.js","../../experimental/es/definitions.js","../../experimental/es/helpers.js","../../experimental/es/matcher.js","../../experimental/matcher/helpers.js","../../experimental/es/mode.js","../../experimental/es/playground.js","../../packages/tokenizer/browser/experimental.es.js"],"sourcesContent":["﻿export const TOKENIZERS = 'tokenizers';\nexport const MAPPINGS = 'mappings';\nexport const MODES = 'modes';\n\nconst none = {\n  syntax: 'markup',\n  matcher: /([\\s\\n]+)|(\\\\(?:(?:\\\\\\\\)*\\\\|[^\\\\\\s])?|\\/\\/+|\\/\\*+|\\*+\\/|\\(|\\)|\\[|\\]|,|;|\\.\\.\\.|\\.|\\b:\\/\\/\\b|::|:|\\?|`|\"|'|\\$\\{|\\{|\\}|=>|<\\/|\\/>|\\++|\\-+|\\*+|&+|\\|+|=+|!={0,3}|<{1,3}=?|>{1,2}=?)|[+\\-*/&|^%<>~!]=?/g,\n};\n\nconst define = (instance, property, value, options) => {\n  if (!instance.hasOwnProperty(property))\n    return (\n      Object.defineProperty(instance, property, {\n        value,\n        writable: (options && options.writable === true) || false,\n        configurable: (options && options.configurable === true) || false,\n        enumerable: !options || options.enumerable === true,\n      }),\n      value\n    );\n};\n\nconst EmptyTokenArray = (EmptyTokenArray =>\n  Object.freeze(\n    new (Object.freeze(Object.freeze(Object.setPrototypeOf(EmptyTokenArray.prototype, null)).constructor, null))(),\n  ))(\n  class EmptyTokenArray {\n    *[Symbol.iterator]() {}\n  },\n);\n\n/** @type {(string: string, sequence: string , index?: number) => number} */\nexport const indexOf = Function.call.bind(String.prototype.indexOf);\n/** @type {(string: string) => number} */\nexport const countLineBreaks = text => {\n  let breaks = 0;\n  for (let index = -1; (index = indexOf(text, '\\n', index + 1)) > -1; breaks++);\n  return breaks;\n};\n\nexport const createBaselineTokenizer = () => {\n  return class Tokenizer {\n    *tokenize(sourceText) {\n      let match, lastIndex;\n      const matcher = RegExp(none.matcher);\n      const string = String(sourceText || '');\n\n      lastIndex = 0;\n      while ((match = matcher.exec(string))) {\n        const {0: text, index} = match;\n        const pre = lastIndex < index && string.slice(lastIndex, index);\n        lastIndex = matcher.lastIndex;\n        pre && (yield {text: pre, breaks: countLineBreaks(pre)});\n        yield {text, breaks: countLineBreaks(text)};\n      }\n    }\n  };\n};\n\n/** @param {typeof import('./tokenizer.js')['Tokenizer']} [Tokenizer] */\nexport const createParser = (Tokenizer = createBaselineTokenizer()) =>\n  class Parser {\n    constructor(options) {\n      if (options) {\n        const {mode, tokenizer, url, modes} = options;\n        if (mode) {\n          this.register((this.mode = mode));\n          tokenizer && this[TOKENIZERS].set(mode, tokenizer);\n        }\n        if (modes) for (const id in modes) this.register(modes[id]);\n        url && (this.MODULE_URL = url);\n      }\n    }\n\n    /**\n     * @param source {string}\n     * @param state {{sourceType?: string}}\n     */\n    tokenize(source, state = {}) {\n      const {\n        options: {\n          sourceType,\n          mode = (state.options.mode = (sourceType && this.get(sourceType)) || this.mode || none),\n        } = (state.options = {}),\n      } = state;\n      let tokenizer = mode && this[TOKENIZERS].get(mode);\n      if (!source || !mode) return EmptyTokenArray;\n      if (!tokenizer) {\n        if (typeof Tokenizer !== 'function') {\n          throw TypeError(\n            `Parse factory expected the first argument to be a Tokenizer constructor (not ${typeof Tokenizer}) — either define a tokenizer mapping for \"${sourceType ||\n              mode.syntax ||\n              'markup'}\" or pass the a constructor to the factory.`,\n          );\n        }\n        this[TOKENIZERS].set(mode, (tokenizer = new Tokenizer(mode)));\n      }\n      state.parser = this;\n      state.tokenize = (this.hasOwnProperty('tokenize') && this.tokenize) || (this.tokenize = this.tokenize.bind(this));\n      return tokenizer.tokenize(source, state);\n    }\n\n    get [TOKENIZERS]() {\n      return define(this, TOKENIZERS, new WeakMap());\n    }\n    get [MAPPINGS]() {\n      return define(this, MAPPINGS, Object.create(null));\n    }\n\n    get [MODES]() {\n      return define(this, MODES, Object.create(null));\n    }\n\n    get(id = 'default') {\n      const {[MAPPINGS]: mappings, [MODES]: modes} = this;\n      if (id in modes) return modes[id];\n      let mapping = mappings[id];\n      !mapping || mapping.syntax === id || (mapping = mappings[mapping.syntax]);\n      if (mapping) {\n        const {syntax, mode, factory, options} = mapping;\n        if (mode) {\n          return (modes[id] = mode);\n        }\n        if (factory) {\n          if (options.requires && options.requires.length > 0) {\n            const list = [];\n            for (const id of options.requires) id in modes || this.get(id) || list.push(id);\n            if (list.length) {\n              list.length > 1 && list.push(list.splice(-2, 2).join(' and '));\n              throw Error(`Cannot initialize \"${syntax}\" which requires the list mode(s): ${list.join(', ')}`);\n            }\n          }\n          return (mapping.mode = modes[id] = factory(options, modes));\n        }\n      }\n    }\n\n    /** @param {ModeFactory | Mode} mode @param {ModeOptions} [options] */\n    register(mode, options) {\n      if (!this[MAPPINGS]) return;\n\n      const {[MAPPINGS]: mappings, [MODES]: modes} = this;\n      const factory = typeof mode === 'function' && mode;\n      const {syntax, aliases = (options.aliases = []), preregister, tokenizer} = ({\n        syntax: options.syntax = mode.syntax,\n      } = options = {\n        syntax: undefined,\n        ...(factory ? factory.defaults : mode),\n        ...options,\n      });\n\n      if (!syntax || typeof syntax !== 'string') {\n        throw TypeError(`Cannot register \"${syntax}\" since it not valid string'`);\n      }\n\n      if (preregister) preregister(this);\n\n      if (mappings[syntax]) {\n        if (factory ? factory === mappings[syntax].factory : mode === modes[syntax]) return;\n        throw ReferenceError(`Cannot register \"${syntax}\" since it is already registered`);\n      }\n\n      const ids = [syntax];\n\n      if (aliases && aliases.length > 0) {\n        for (const alias of aliases) {\n          const mapping = mappings[alias];\n          if (!alias || typeof alias !== 'string') {\n            throw TypeError(`Cannot register \"${syntax}\" since it's alias \"${alias}\" not valid string'`);\n          }\n\n          if (alias in modes || (mapping && (mapping.syntax === alias || mapping.syntax[0] === alias[0]))) {\n            continue;\n          }\n\n          if (mapping) {\n            Object.defineProperty(mappings, alias, {writable: true, configurable: true});\n            delete mappings[alias];\n            ids.push(alias);\n          }\n\n          ids.push(alias);\n        }\n      }\n\n      const mapping = factory ? {syntax, factory, options} : {syntax, mode, options};\n      const descriptor = {value: mapping, writable: false, configurable: true};\n\n      for (const id of ids) Object.defineProperty(mappings, id, descriptor);\n\n      if (tokenizer) this[TOKENIZERS].set(mode, tokenizer);\n    }\n\n    unregister(id) {\n      const {[MAPPINGS]: mappings, [MODES]: modes} = this;\n      if (id in modes) {\n        throw ReferenceError(`Cannot unregister \"${id}\" since it's already been bootstrapped for use.`);\n      }\n      Object.defineProperty(mappings, id, {writable: true, configurable: true});\n      delete mappings[id];\n    }\n\n    /** @param {string} mode @param {string[]} requires */\n    requires(mode, requires) {\n      const missing = [];\n      for (const mode of requires) {\n        mode in this[MAPPINGS] || missing.push(`\"${mode}\"`);\n      }\n      if (!missing.length) return;\n      throw Error(`Cannot initialize \"${mode}\" which requires the missing mode(s): ${missing.join(', ')}`);\n    }\n  };\n\n/**\n * @typedef { Partial<{syntax: string, matcher: RegExp, [name:string]: Set | Map | {[name:string]: Set | Map | RegExp} }> } Mode\n * @typedef { {[name: string]: Mode} } Modes\n * @typedef { {[name: string]: {syntax: string} } } Mappings\n * @typedef { {aliases?: string[], syntax: string} } ModeOptions\n * @typedef { (options: ModeOptions, modes: Modes) => Mode } ModeFactory\n */\n","﻿class TokenizerAPI {\n  /** @param {API.Options} [options] */\n  constructor(options) {\n    /** @type {API.Options} */\n    const {\n      parsers = [],\n      tokenize = (source, options = {}, flags) => {\n        const state = new TokenizerAPI.State({options, flags: {}});\n        const variant = !options.variant ? 1 : parseInt(options.variant);\n        const {[variant >= 1 && variant <= parsers.length ? variant - 1 : (options.variant = 0)]: parser} = parsers;\n        this.lastVariant === (this.lastVariant = variant) ||\n          variant <= parsers.length ||\n          console.warn(\n            '[tokenize‹parser›] Variant %O[%d] out of bounds — using default parser: %o',\n            parsers,\n            variant,\n            parser.MODULE_URL || {parser},\n          );\n        options.tokenize = parser.tokenize;\n        if (flags && (flags.length > 0 || flags.size > 0)) {\n          typeof flags === 'string' || (flags = [...flags].join(' '));\n          /\\bwarmup\\b/i.test(flags) && (state.flags.warmup = true);\n          /\\bdebug\\b/i.test(flags) && (state.flags.debug = true);\n        }\n\n        let returned = UNSET;\n        try {\n          this.lastParser === (this.lastParser = parser) ||\n            console.info('[tokenize‹parser›]: %o', parser.MODULE_URL || {parser});\n          return (returned = parser.tokenize(source, state));\n        } finally {\n          returned !== UNSET || !state.flags.debug || console.info('[tokenize‹state›]: %o', state);\n        }\n      },\n\n      warmup = (source, options, flags) => {\n        // Object.defineProperty(options, 'warmup', {value: true});\n        const key = (options && JSON.stringify(options)) || '';\n        let cache = (this.cache || (this.cache = new Map())).get(key);\n        cache || this.cache.set(key, (cache = new Set()));\n        if (!cache.has(source)) {\n          flags = `warmup ${(flags &&\n            (flags.length > 0 || flags.size > 0) &&\n            (typeof flags === 'string' || flags instanceof String ? flags : [...flags].join(' '))) ||\n            ''}`;\n          for (const item of tokenize(source, options, flags));\n        }\n        cache.add(source);\n      },\n\n      render,\n    } = options;\n\n    Object.defineProperties(this, {\n      tokenize: {get: () => tokenize},\n      warmup: {get: () => warmup},\n      render: {get: () => render},\n      parsers: {get: () => parsers},\n    });\n  }\n}\n\nObject.freeze(Object.setPrototypeOf(TokenizerAPI.prototype, null));\n\nTokenizerAPI.State = class State {\n  constructor(...properties) {\n    Object.assign(this, ...properties);\n  }\n};\n\nObject.freeze(Object.setPrototypeOf(TokenizerAPI.State.prototype, null));\n\nconst UNSET = Symbol('');\n\nexport {TokenizerAPI};\n\n/**\n * @typedef {import('./parser.js').Parser & {MODULE_URL?: string}} Parser\n * @typedef {Partial<{variant?: number, fragment?: Fragment, [name: string]: any}>} Parser.Options\n */\n\n/**\n * @typedef {TokenizerAPI & {tokenize: API.tokenize, warmup: API.warmup, render: API.render, parsers: Parser[]}} API\n * @typedef {TokenizerAPI.State} API.State\n * @typedef {Partial<Pick<API, 'tokenize' | 'warmup' | 'render' | 'parsers'>>} API.Options\n * @typedef {<T extends {}>(source: string, options: Parser.Options, flags?: Flags) => IterableIterator<T>} API.tokenize\n * @typedef {(source: string, options: Parser.Options, flags?: Flags) => void} API.warmup\n * @typedef {(source: string, options: Parser.Options, flags?: Flags) => Promise<Fragment>} API.render\n */\n\n/**\n * @typedef {(string | Array<string> | Set<string>) & {length?: number, size?: number}} Flags\n * @typedef {DocumentFragment & {logs?: string[]}} Fragment\n */\n","const {assign, defineProperty} = Object;\n\nexport const document = void null;\n\nexport class Node {\n  get children() {\n    return defineProperty(this, 'children', {value: new Set()}).children;\n  }\n  get childElementCount() {\n    return (this.hasOwnProperty('children') && this.children.size) || 0;\n  }\n  get textContent() {\n    return (this.hasOwnProperty('children') && this.children.size && [...this.children].join('')) || '';\n  }\n  set textContent(text) {\n    this.hasOwnProperty('children') && this.children.size && this.children.clear();\n    text && this.children.add(new String(text));\n  }\n  appendChild(element) {\n    return element && this.children.add(element), element;\n  }\n  append(...elements) {\n    if (elements.length) for (const element of elements) element && this.children.add(element);\n  }\n  removeChild(element) {\n    element && this.hasOwnProperty('children') && this.children.size && this.children.delete(element);\n    return element;\n  }\n  remove(...elements) {\n    if (elements.length && this.hasOwnProperty('children') && this.children.size)\n      for (const element of elements) element && this.children.delete(element);\n  }\n}\n\nexport class Element extends Node {\n  get innerHTML() {\n    return this.textContent;\n  }\n  set innerHTML(text) {\n    this.textContent = text;\n  }\n  get outerHTML() {\n    let classList;\n    let {className, tag, innerHTML, dataset} = this;\n\n    className &&\n      (className = className.trim()) &&\n      ({\n        [className]: classList = (className &&\n          (Element.classLists[className] = [...new Set(className.split(/\\s+/g))].join(' '))) ||\n          '',\n      } = Element.classLists || (Element.classLists = Object.create(null)));\n\n    const openTag = [tag];\n\n    classList && openTag.push(`class=\"${classList}\"`);\n\n    if (dataset)\n      for (const [key, value] of Object.entries(dataset))\n        value == null || !key.trim || openTag.push(`data-${key}=${JSON.stringify(`${value}`)}`);\n\n    return `<${openTag.join(' ')}>${innerHTML || ''}</${tag}>`;\n  }\n\n  toString() {\n    return this.outerHTML;\n  }\n  toJSON() {\n    return this.toString();\n  }\n}\n\nexport class DocumentFragment extends Node {\n  toString() {\n    return this.textContent;\n  }\n  toJSON() {\n    return (this.childElementCount && [...this.children]) || [];\n  }\n  [Symbol.iterator]() {\n    return ((this.childElementCount && this.children) || '')[Symbol.iterator]();\n  }\n}\n\nexport class Text extends String {\n  toString() {\n    return encodeEntities(super.toString());\n  }\n}\n\nexport const createElement = (tag, properties, ...children) => {\n  const element = assign(new Element(), {\n    tag,\n    className: (properties && properties.className) || '',\n    properties,\n  });\n  children.length && defineProperty(element, 'children', {value: new Set(children)});\n  return element;\n};\n\nexport const createText = (content = '') => new Text(content);\nexport const encodeEntity = entity => `&#${entity.charCodeAt(0)};`;\nexport const encodeEntities = string => string.replace(/[\\u00A0-\\u9999<>\\&]/g, encodeEntity);\nexport const createFragment = () => new DocumentFragment();\n","export const {document, Element, Node, Text, DocumentFragment} =\n  'object' === typeof self && (self || 0).window === self && self;\n\nexport const {createElement, createText, createFragment} = {\n  createElement: (tag, properties, ...children) => {\n    const element = document.createElement(tag);\n    properties && Object.assign(element, properties);\n    if (!children.length) return element;\n    if (element.append) {\n      while (children.length > 500) element.append(...children.splice(0, 500));\n      children.length && element.append(...children);\n    } else if (element.appendChild) {\n      for (const child of children) element.appendChild(child);\n    }\n    return element;\n  },\n\n  createText: (content = '') => document.createTextNode(content),\n\n  createFragment: () => document.createDocumentFragment(),\n};\n","import * as pseudo from './pseudo.js';\nimport * as dom from './native.js';\nexport {encodeEntity, encodeEntities} from './pseudo.js';\n\n// TEST: Trace for ESM testing\ntypeof process === 'object' && console.info('[ESM]: %o', import.meta.url);\n\nexport const native = dom.document && dom;\nexport const {createElement, createText, createFragment} = native || pseudo;\nexport {pseudo};\n","// export {patterns, entities} from '../../grammars/common/patterns.js';\n// export * from '../../grammars/common/helpers.js';\n\n/// <reference lib=\"esnext.asynciterable\" />\n\nconst VOID = Symbol('[[Void]]');\n\n/**\n * @template T\n * @typedef {Promise<T> | T} async\n */\n\n/**\n * @template T\n * @typedef {{next(): async<IteratorResult<async<T>>>}} iterator\n */\n\n/**\n * @template T\n * @typedef {iterator<T> | {[Symbol.iterator](): iterator<T>}  | {[Symbol.asyncIterator](): iterator<T>}} iterable\n */\n\n/**\n * @template T, U\n * @param {iterable<T>} iterable\n * @param {(value: T) => U} ƒ\n */\nexport async function each(iterable, ƒ) {\n  const iterator =\n    (iterable && ('next' in iterable && typeof iterable.next === 'function' && iterable)) ||\n    ((Symbol.asyncIterator in iterable && iterable[Symbol.asyncIterator]()) ||\n      (Symbol.iterator in iterable && iterable[Symbol.iterator]()));\n  try {\n    if (iterator || typeof iterator.next === 'function') {\n      let result, done;\n      while (!done && (result = await iterator.next())) {\n        await ƒ(await result.value);\n        done = result.done;\n      }\n    }\n  } finally {\n    iterator &&\n      iterable !== iterator &&\n      'return' in iterator &&\n      typeof iterator.return === 'function' &&\n      iterator.return();\n  }\n}\n","import * as pseudom from '../../pseudom/pseudom.js';\n// export {encodeEntity, encodeEntities} from '../../pseudom/pseudom.js';\nimport {each} from './helpers.js';\n\n/// RUNTIME\n\n/** Uses lightweight proxy objects that can be serialized into HTML text */\nconst HTML_MODE = true;\n\nconst supported = !!pseudom.native;\nconst native = !HTML_MODE && supported;\nconst implementation = native ? pseudom.native : pseudom.pseudo;\nconst {createElement: Element, createText: Text, createFragment: Fragment} = implementation;\nconst Template = template =>\n  !supported || Template.supported === false\n    ? false\n    : Template.supported === true\n    ? document.createElement('template')\n    : (Template.supported = !!(\n        (template = document.createElement('template')) && 'HTMLTemplateElement' === (template.constructor || '').name\n      )) && template;\n\n/// IMPLEMENTATION\n\nclass MarkupRenderer {\n  constructor(options) {\n    // TODO: Consider making Renderer a thing\n    const {factory, defaults} = new.target;\n\n    const {SPAN = 'span', LINE = 'span', CLASS = 'markup', REFLOW = true} = {\n      ...defaults,\n      ...options,\n    };\n\n    this.renderers = {\n      line: factory(LINE, {className: `${CLASS} ${CLASS}-line`}),\n      // indent: factory(SPAN, {className: `${CLASS} ${CLASS}-indent whitespace`}),\n      inset: factory(SPAN, {className: `${CLASS} inset whitespace`}),\n      break: factory(SPAN, {className: `${CLASS} break whitespace`}),\n      // break: Text,\n      // whitespace: factory(SPAN, {className: `${CLASS} whitespace`}),\n      whitespace: Text,\n      text: factory(SPAN, {className: CLASS}),\n\n      // variable: factory('var', {className: `${CLASS} variable`}),\n      fault: factory(SPAN, {className: `${CLASS} fault`}),\n      keyword: factory(SPAN, {className: `${CLASS} keyword`}),\n      identifier: factory(SPAN, {className: `${CLASS} identifier`}),\n      quote: factory(SPAN, {className: `${CLASS} quote`}),\n\n      operator: factory(SPAN, {className: `${CLASS} punctuator operator`}),\n      assigner: factory(SPAN, {className: `${CLASS} punctuator operator assigner`}),\n      combinator: factory(SPAN, {className: `${CLASS} punctuator operator combinator`}),\n      punctuation: factory(SPAN, {className: `${CLASS} punctuator punctuation`}),\n\n      breaker: factory(SPAN, {className: `${CLASS} punctuator breaker`}),\n      opener: factory(SPAN, {className: `${CLASS} punctuator opener`}),\n      closer: factory(SPAN, {className: `${CLASS} punctuator closer`}),\n      span: factory(SPAN, {className: `${CLASS} punctuator span`}),\n      pattern: factory(SPAN, {className: `${CLASS} pattern`}),\n      sequence: factory(SPAN, {className: `${CLASS} sequence`}),\n      literal: factory(SPAN, {className: `${CLASS} literal`}),\n      // indent: factory(SPAN, {className: `${CLASS} sequence indent`}),\n      comment: factory(SPAN, {className: `${CLASS} comment`}),\n      // code: factory(SPAN, {className: `${CLASS}`}),\n    };\n\n    this.reflows = REFLOW;\n  }\n\n  async render(tokens, fragment) {\n    let logs, template, first, elements;\n    try {\n      fragment || (fragment = Fragment());\n      logs = fragment.logs; // || (fragment.logs = []);\n      elements = this.renderer(tokens);\n      if ((first = await elements.next()) && 'value' in first) {\n        template = Template();\n        if (!native && template && 'textContent' in fragment) {\n          logs && logs.push(`render method = 'text' in template`);\n          const body = [first.value];\n          first.done || (await each(elements, element => body.push(element)));\n          template.innerHTML = body.join('');\n          fragment.appendChild(template.content);\n        } else if ('push' in fragment) {\n          logs && logs.push(`render method = 'push' in fragment`);\n          fragment.push(first.value);\n          first.done || (await each(elements, element => fragment.push(element)));\n        } else if ('append' in fragment) {\n          logs && logs.push(`render method = 'append' in fragment`);\n          fragment.append(first.value);\n          first.done || (await each(elements, element => fragment.append(element)));\n        }\n      }\n      return fragment;\n    } finally {\n      template && (template.innerHTML = '');\n      template = fragment = logs = elements = first = null;\n    }\n  }\n\n  *renderer(tokens) {\n    const {renderers, reflows} = this;\n    let renderedLine, LineInset, lineInset, lineText, lineBreak, insetHint;\n    const createLine = reflows\n      ? () => (renderedLine = renderers.line())\n      : () => (renderedLine = renderers.line('', 'no-reflow'));\n    const emit = (renderer, text, type, hint) => {\n      (renderedLine || createLine()).appendChild((renderedLine.lastChild = renderer(text, hint || type)));\n    };\n    const emitInset = (text, hint) => emit(renderers.inset, text, 'inset', hint);\n    const emitBreak = hint => emit(renderers.break, '\\n', 'break', hint);\n    const Lines = /^/gm;\n\n    for (const token of tokens) {\n      if (!token || !token.text) continue;\n\n      let {type = 'text', text, inset, punctuator, breaks, hint} = token;\n      let renderer =\n        (punctuator && (renderers[punctuator] || (type && renderers[type]) || renderers.operator)) ||\n        (type && renderers[type]) ||\n        (type !== 'whitespace' && type !== 'break' && renderers.text) ||\n        Text;\n\n      // Normlize inset for { type != 'inset', inset = /\\s+/ }\n      if (reflows && breaks && type !== 'break') {\n        LineInset = void (inset = inset || '');\n        insetHint = `${hint || ''} in-${type || ''}`;\n        for (const line of text.split(Lines)) {\n          (lineInset = line.startsWith(inset)\n            ? line.slice(0, inset.length)\n            : line.match(LineInset || (LineInset = RegExp(`^${inset.replace(/./g, '$&?')}`)))[0]) &&\n            emitInset(lineInset, insetHint);\n\n          (lineText = lineInset ? line.slice(lineInset.length) : line) &&\n            ((lineText === '\\n'\n              ? ((lineBreak = lineText), (lineText = ''))\n              : lineText.endsWith('\\n')\n              ? ((lineBreak = '\\n'), (lineText = lineText.slice(0, lineText.endsWith('\\r\\n') ? -2 : -1)))\n              : !(lineBreak = '')) && emit(renderer, lineText, type, hint),\n            lineBreak && (emitBreak(), (renderedLine = void (yield renderedLine))));\n        }\n      } else {\n        // TODO: See if pseudom children can be optimized for WBR/BR clones\n        emit(renderer, text, type, hint);\n        type === 'break'\n          ? (renderedLine = void (yield renderedLine))\n          : type === 'whitespace' || renderedLine.appendChild(Element('wbr'));\n      }\n    }\n    renderedLine && (yield renderedLine);\n  }\n\n  /**\n   * @param {string} tag\n   * @param {Partial<HTMLElement>} [properties]\n   * @param {boolean} [unflattened]\n   */\n  static factory(tagName, elementProperties) {\n    const [tag, properties] = arguments;\n    return Object.defineProperties(\n      (content, hint) => {\n        typeof content === 'string' && (content = Text(content));\n        const element = content != null ? Element(tag, properties, content) : Element(tag, properties);\n        element &&\n          (hint = typeof hint === 'string' && `${element.className || ''} ${hint}`.trim()) &&\n          ((element.className = hint.split(/&#x[\\da-f];/i, 1)[0]), (element.dataset = {hint: hint.slice(6).trim()}));\n        return element;\n      },\n      {\n        // flatten: {\n        //   value: !arguments[2] || (/\\bunflatten\\b/i.test(arguments[2]) ? false : /\\bflatten\\b/i.test(arguments[2])),\n        // },\n      },\n    );\n  }\n}\n\nMarkupRenderer.defaults = Object.freeze({\n  /** Tag name of the element to use for rendering a token. */\n  SPAN: 'span',\n  /** Tag name of the element to use for grouping tokens in a single line. */\n  LINE: 'span',\n  /** The class name of the element to use for rendering a token. */\n  CLASS: 'markup',\n  /** Enable renderer-side unpacking { inset } || { breaks > 0 } tokens */\n  REFLOW: true,\n});\n\n/// INTERFACE\n\nexport default new MarkupRenderer();\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\n// const trace = /** @type {[function, any[]][]} */ [];\n\nclass Matcher extends RegExp {\n\t/**\n\t * @template T\n\t * @param {Matcher.Pattern} pattern\n\t * @param {Matcher.Flags} [flags]\n\t * @param {Matcher.Entities} [entities]\n\t * @param {T} [state]\n\t */\n\tconstructor(pattern, flags, entities, state) {\n\t\t// trace.push([new.target, [...arguments]]);\n\t\t//@ts-ignore\n\t\tsuper(pattern, flags);\n\t\t// Object.assign(this, RegExp.prototype, new.target.prototype);\n\t\t(pattern &&\n\t\t\tpattern.entities &&\n\t\t\tSymbol.iterator in pattern.entities &&\n\t\t\t((!entities && (entities = pattern.entities)) || entities === pattern.entities)) ||\n\t\t\tObject.freeze((entities = (entities && Symbol.iterator in entities && [...entities]) || []));\n\t\t/** @type {MatcherEntities} */\n\t\tthis.entities = entities;\n\t\t/** @type {T} */\n\t\tthis.state = state;\n\t\tthis.capture = this.capture;\n\t\tthis.exec = this.exec;\n\t\t// this.test = this.test;\n\t\t({\n\t\t\t// LOOKAHEAD: this.LOOKAHEAD = Matcher.LOOKAHEAD,\n\t\t\t// INSET: this.INSET = Matcher.INSET,\n\t\t\t// OUTSET: this.OUTSET = Matcher.OUTSET,\n\t\t\tDELIMITER: this.DELIMITER = Matcher.DELIMITER,\n\t\t\tUNKNOWN: this.UNKNOWN = Matcher.UNKNOWN,\n\t\t} = new.target);\n\t}\n\n\t/**\n\t * @template {MatcherMatchResult} T\n\t * @param {string} text\n\t * @param {number} capture\n\t * @param {T} match\n\t * @returns {T}\n\t */\n\tcapture(text, capture, match) {\n\t\tif (capture === 0) return void (match.capture = {});\n\t\tif (text === undefined) return;\n\t\tconst index = capture - 1;\n\t\tconst {\n\t\t\tentities: {[index]: entity},\n\t\t\tstate,\n\t\t} = this;\n\t\ttypeof entity === 'function'\n\t\t\t? ((match.entity = index), entity(text, capture, match, state))\n\t\t\t: entity == null || //entity === INSET ||\n\t\t\t  // entity === OUTSET ||\n\t\t\t  // entity === DELIMITER ||\n\t\t\t  // entity === LOOKAHEAD ||\n\t\t\t  // entity === UNKNOWN ||\n\t\t\t  (match.entity !== undefined || ((match.identity = entity), (match.entity = index)),\n\t\t\t  (match.capture[entity] = text));\n\t}\n\n\t/**\n\t * @param {string} source\n\t * @returns {MatcherMatchResult}\n\t */\n\texec(source) {\n\t\t// const tracing = trace.length;\n\t\t// trace.push([this.exec, [...arguments]]);\n\t\t/** @type {MatcherMatchArray} */\n\t\tconst match = super.exec(source);\n\t\t// console.log(trace.slice(tracing, trace.length));\n\t\tmatch &&\n\t\t\t(match.forEach(this.capture || Matcher.prototype.capture, (match.matcher = this)),\n\t\t\tmatch.identity || (match.capture[this.UNKNOWN || Matcher.UNKNOWN] = match[0]));\n\n\t\t// @ts-ignore\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {Matcher.PatternFactory} factory\n\t * @param {Matcher.Flags} [flags]\n\t */\n\tstatic define(factory, flags) {\n\t\t/** @type {MatcherEntities} */\n\t\tconst entities = [];\n\t\tentities.flags = '';\n\t\t// const pattern = factory(entity => void entities.push(((entity != null || undefined) && entity) || undefined));\n\t\tconst pattern = factory(entity => {\n\t\t\tif (entity !== null && entity instanceof Matcher) {\n\t\t\t\tentities.push(...entity.entities);\n\n\t\t\t\t!entity.flags || (entities.flags = entities.flags ? Matcher.flags(entities.flags, entity.flags) : entity.flags);\n\n\t\t\t\treturn entity.source;\n\t\t\t} else {\n\t\t\t\tentities.push(((entity != null || undefined) && entity) || undefined);\n\t\t\t}\n\t\t});\n\t\tflags = Matcher.flags('g', flags == null ? pattern.flags : flags, entities.flags);\n\t\treturn new ((this && (this.prototype === Matcher.prototype || this.prototype instanceof RegExp) && this) ||\n\t\t\tMatcher)(pattern, flags, entities);\n\t}\n\n\tstatic flags(...sources) {\n\t\tlet flags = '',\n\t\t\titerative;\n\t\tfor (const source of sources) {\n\t\t\tif (!source || (typeof source !== 'string' && typeof source.flags !== 'string')) continue;\n\t\t\tfor (const flag of source.flags || source)\n\t\t\t\t(flag === 'g' || flag === 'y' ? iterative || !(iterative = true) : flags.includes(flag)) || (flags += flag);\n\t\t}\n\t\t// console.log('%o: ', flags, ...sources);\n\t\treturn flags;\n\t}\n\n\tstatic get sequence() {\n\t\tconst {raw} = String;\n\t\tconst {replace} = Symbol;\n\t\t/**\n\t\t * @param {TemplateStringsArray} template\n\t\t * @param  {...any} spans\n\t\t * @returns {string}\n\t\t */\n\t\tconst sequence = (template, ...spans) =>\n\t\t\tsequence.WHITESPACE[replace](raw(template, ...spans.map(sequence.span)), '');\n\t\t/**\n\t\t * @param {any} value\n\t\t * @returns {string}\n\t\t */\n\t\tsequence.span = value =>\n\t\t\t(value &&\n\t\t\t\t// TODO: Don't coerce to string here?\n\t\t\t\t(typeof value !== 'symbol' && `${value}`)) ||\n\t\t\t'';\n\n\t\tsequence.WHITESPACE = /^\\s+|\\s*\\n\\s*|\\s+$/g;\n\n\t\tObject.defineProperty(Matcher, 'sequence', {value: Object.freeze(sequence), enumerable: true, writable: false});\n\t\treturn sequence;\n\t}\n\n\tstatic get join() {\n\t\tconst {sequence} = this;\n\n\t\tconst join = (...values) =>\n\t\t\tvalues\n\t\t\t\t.map(sequence.span)\n\t\t\t\t.filter(Boolean)\n\t\t\t\t.join('|');\n\n\t\tObject.defineProperty(Matcher, 'join', {value: Object.freeze(join), enumerable: true, writable: false});\n\n\t\treturn join;\n\t}\n}\n\nexport const {\n\t// INSET = (Matcher.INSET = /* Symbol.for */ 'INSET'),\n\t// OUTSET = (Matcher.OUTSET = /* Symbol.for */ 'OUTSET'),\n\tDELIMITER = (Matcher.DELIMITER = /* Symbol.for */ 'DELIMITER'),\n\tUNKNOWN = (Matcher.UNKNOWN = /* Symbol.for */ 'UNKNOWN'),\n\t// LOOKAHEAD = (Matcher.LOOKAHEAD = /* Symbol.for */ 'LOOKAHEAD'),\n\tescape = (Matcher.escape = /** @type {<T>(source: T) => string} */ ((() => {\n\t\tconst {replace} = Symbol;\n\t\treturn source => /[\\\\^$*+?.()|[\\]{}]/g[replace](source, '\\\\$&');\n\t})())),\n\tsequence,\n\tmatchAll = (Matcher.matchAll =\n\t\t/**\n\t\t * @template {RegExp} T\n\t\t * @type {(string: Matcher.Text, matcher: T) => Matcher.Iterator<T> }\n\t\t */\n\t\t//@ts-ignore\n\t\t(() =>\n\t\t\tFunction.call.bind(\n\t\t\t\t// String.prototype.matchAll || // TODO: Uncomment eventually\n\t\t\t\t{\n\t\t\t\t\t/**\n\t\t\t\t\t * @this {string}\n\t\t\t\t\t * @param {RegExp | string} pattern\n\t\t\t\t\t */\n\t\t\t\t\t*matchAll() {\n\t\t\t\t\t\tconst matcher =\n\t\t\t\t\t\t\targuments[0] &&\n\t\t\t\t\t\t\t(arguments[0] instanceof RegExp\n\t\t\t\t\t\t\t\t? Object.setPrototypeOf(RegExp(arguments[0].source, arguments[0].flags || 'g'), arguments[0])\n\t\t\t\t\t\t\t\t: RegExp(arguments[0], 'g'));\n\t\t\t\t\t\tconst string = String(this);\n\n\t\t\t\t\t\tif (!(matcher.flags.includes('g') || matcher.flags.includes('y'))) return void (yield matcher.exec(string));\n\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tlet match, lastIndex = -1;\n\t\t\t\t\t\t\tlastIndex <\n\t\t\t\t\t\t\t((match = matcher.exec(string)) ? (lastIndex = matcher.lastIndex + (match[0].length === 0)) : lastIndex);\n\t\t\t\t\t\t\tyield match, matcher.lastIndex = lastIndex\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t}.matchAll,\n\t\t\t))()),\n} = Matcher;\n\n/** @typedef {MatcherFlags} Matcher.Flags */\n/** @typedef {MatcherText} Matcher.Text */\n/** @typedef {MatcherOperator} Matcher.Operator */\n/** @typedef {MatcherIdentity} Matcher.Identity */\n/** @typedef {MatcherEntity} Matcher.Entity */\n/** @typedef {MatcherCapture} Matcher.Capture */\n/** @typedef {MatcherEntityFactory} Matcher.EntityFactory */\n/** @typedef {MatcherPatternFactory} Matcher.PatternFactory */\n/** @typedef {MatcherPattern} Matcher.Pattern */\n/** @typedef {MatcherEntities} Matcher.Entities */\n/** @template {RegExpMatchArray | RegExpExecArray} T @typedef {MatcherMatchArray} Matcher.MatchArray<T> */\n/** @template {RegExpMatchArray | RegExpExecArray} T @typedef {MatcherMatchResult} Matcher.MatchResult<T> */\n/** @template {RegExp} T @typedef {MatcherIterator} Matcher.Iterator<T> */\n\nexport {Matcher};\n","﻿export const {\n  ranges,\n  Digit,\n  ControlLetter,\n  HexLetter,\n  HexDigit,\n  GraveAccent,\n  Null,\n  ZeroWidthNonJoiner,\n  ZeroWidthJoiner,\n  ZeroWidthNoBreakSpace,\n  Whitespace,\n  ID_Start,\n  ID_Continue,\n  UnicodeIDStart,\n  UnicodeIDContinue,\n} = (factories => {\n  const {String, RegExp, Symbol, Object, Proxy} = globalThis;\n  const {raw} = String;\n  const {replace: ReplaceSymbol} = Symbol;\n  const {defineProperty, create} = Object;\n\n  const RegExpClass = /^(?:\\[(?=.*?\\]$)|)((?:\\\\.|[^\\\\\\n\\[\\]]*)*)\\]?$/;\n\n  class RegExpRange extends RegExp {\n    constructor(source, flags) {\n      let range;\n      range =\n        source && typeof source === 'object' && source instanceof RegExp\n          ? (flags === undefined && (flags = source.flags), source.source)\n          : (typeof source === 'string' ? source : (source = `${source || ''}`)).trim() &&\n            (source = RegExpClass[ReplaceSymbol](source, '[$1]'));\n\n      if (!range || !RegExpClass.test(range)) {\n        throw TypeError(`Invalid Regular Expression class range: ${range}`);\n      }\n\n      typeof flags === 'string' || (flags = `${flags || ''}` || '');\n\n      flags.includes('u') || !(source.includes('\\\\p{') || source.includes('\\\\u')) || (flags += 'u');\n      super(source, flags);\n      defineProperty(this, 'range', {value: range.slice(1, -1), enumerable: true, writable: false});\n    }\n\n    toString() {\n      return this.range;\n    }\n\n    static range(strings, ...values) {\n      return new (this || RegExpRange)(raw(strings, ...values));\n    }\n  }\n\n  const safeRange = (strings, ...values) => {\n    try {\n      return RegExpRange.range(strings, ...values).source.slice(1, -1);\n    } catch (exception) {}\n  };\n\n  const descriptors = {\n    ranges: {\n      get() {\n        return ranges;\n      },\n      enumerable: true,\n      configurable: false,\n    },\n  };\n\n  for (const property in factories) {\n    descriptors[property] = {\n      get() {\n        const value = factories[property](safeRange, ranges);\n        defineProperty(ranges, property, {value, enumerable: true, configurable: false});\n        return value;\n      },\n      enumerable: true,\n      configurable: true,\n    };\n  }\n\n  /** @type {Record<keyof factories, string>} */\n  const ranges = create(null, descriptors);\n\n  return ranges;\n})({\n  UnicodeIDStart: (range, {ID_Start}) => range`_$${ID_Start}`,\n  UnicodeIDContinue: (range, {ID_Continue, ZeroWidthNonJoiner, ZeroWidthJoiner, CombiningGraphemeJoiner}) =>\n    range`_$${ID_Continue}${ZeroWidthNonJoiner}${ZeroWidthJoiner}${CombiningGraphemeJoiner}`,\n  Null: range => range`\\0`,\n  Digit: range => range`0-9`,\n  ControlLetter: range => range`a-zA-Z`,\n  HexLetter: range => range`a-fA-F`,\n  HexDigit: (range, {Digit, HexLetter}) => range`${Digit}${HexLetter}`,\n  GraveAccent: range => range`${'`'}`,\n  ZeroWidthNonJoiner: range => range`\\u200c`,\n  ZeroWidthJoiner: range => range`\\u200d`,\n  ZeroWidthNoBreakSpace: range => range`\\ufeff`,\n  CombiningGraphemeJoiner: range => range`\\u034f`,\n  Whitespace: (range, {ZeroWidthNoBreakSpace}) => range`\\s${ZeroWidthNoBreakSpace}`,\n  ID_Start: range =>\n    range`\\p{ID_Start}` ||\n    range`a-zA-Z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7b9\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab65\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc`,\n  ID_Continue: range =>\n    range`\\p{ID_Continue}` ||\n    range`0-9a-zA-Z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7b9\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab65\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f`,\n});\n","﻿/** Symbol map @type {{ [key: string]: symbol }} */\nconst symbols = {};\n\n/** Unique token records @type {{[symbol: symbol]: }} */\nconst tokens = {};\n\nconst identities = {\n  UnicodeIDStart: 'ECMAScriptUnicodeIDStart',\n  UnicodeIDContinue: 'ECMAScriptUnicodeIDContinue',\n  HexDigits: 'ECMAScriptHexDigits',\n  CodePoint: 'ECMAScriptCodePoint',\n  ControlEscape: 'ECMAScriptControlEscape',\n  ContextualWord: 'ECMAScriptContextualWord',\n  RestrictedWord: 'ECMAScriptRestrictedWord',\n  FutureReservedWord: 'ECMAScriptFutureReservedWord',\n  Keyword: 'ECMAScriptKeyword',\n};\n\nconst goals = {\n  [Symbolic('ECMAScriptGoal')]: {\n    type: undefined,\n    flatten: undefined,\n    fold: undefined,\n    openers: ['{', '(', '[', \"'\", '\"', '`', '/', '/*', '//'],\n    closers: ['}', ')', ']'],\n  },\n  [Symbolic('CommentGoal')]: {type: 'comment', flatten: true, fold: true},\n  [Symbolic('RegExpGoal')]: {\n    type: 'pattern',\n    flatten: undefined,\n    fold: undefined,\n    openers: ['['],\n    closers: [']'],\n    punctuators: ['+', '*', '?', '|', '^', '{', '}', '(', ')'],\n  },\n  [Symbolic('StringGoal')]: {type: 'quote', flatten: true, fold: true},\n  [Symbolic('TemplateLiteralGoal')]: {\n    type: 'quote',\n    flatten: true,\n    fold: false,\n    openers: ['${'],\n  },\n  [Symbolic('FaultGoal')]: {type: 'fault', groups: {}},\n};\n\nconst {[symbols.FaultGoal]: FaultGoal} = goals;\n\nconst groups = {\n  ['{']: {opener: '{', closer: '}'},\n  ['(']: {opener: '(', closer: ')'},\n  ['[']: {opener: '[', closer: ']'},\n  ['//']: {opener: '//', closer: '\\n', goal: symbols.CommentGoal, parentGoal: symbols.ECMAScriptGoal},\n  ['/*']: {opener: '/*', closer: '*/', goal: symbols.CommentGoal, parentGoal: symbols.ECMAScriptGoal},\n  ['/']: {opener: '/', closer: '/', goal: symbols.RegExpGoal, parentGoal: symbols.ECMAScriptGoal},\n  [\"'\"]: {opener: \"'\", closer: \"'\", goal: symbols.StringGoal, parentGoal: symbols.ECMAScriptGoal},\n  ['\"']: {opener: '\"', closer: '\"', goal: symbols.StringGoal, parentGoal: symbols.ECMAScriptGoal},\n  ['`']: {\n    opener: '`',\n    closer: '`',\n    goal: symbols.TemplateLiteralGoal,\n    parentGoal: symbols.ECMAScriptGoal,\n  },\n  ['${']: {\n    opener: '${',\n    closer: '}',\n    goal: symbols.ECMAScriptGoal,\n    parentGoal: symbols.TemplateLiteralGoal,\n  },\n};\n\n/**  @type {ECMAScript.Keywords} */\nconst keywords = {};\n\n{\n  const {create, freeze, entries, getOwnPropertySymbols, getOwnPropertyNames, setPrototypeOf} = Object;\n\n  // const lookups = new Set();\n  // lookups.punctuators = new Set();\n  // lookups.openers = new Set();\n  // lookups.closers = new Set();\n\n  const punctuators = create(null);\n  // const openers = [];\n  // const closers = [];\n\n  for (const opener of getOwnPropertyNames(groups)) {\n    const {[opener]: group} = groups;\n    'goal' in group && (group.goal = goals[group.goal] || FaultGoal);\n    'parentGoal' in group && (group.parentGoal = goals[group.parentGoal] || FaultGoal);\n    freeze(group);\n  }\n\n  for (const symbol of getOwnPropertySymbols(goals)) {\n    const {[symbol]: goal} = goals;\n\n    goal.name = (goal.symbol = symbol).description.replace(/Goal$/, '');\n    goal.tokens = tokens[symbol] = {};\n    goal.groups = [];\n\n    if (goal.punctuators) {\n      for (const punctuator of (goal.punctuators = [...goal.punctuators]))\n        punctuators[punctuator] = !(goal.punctuators[punctuator] = true);\n      freeze(setPrototypeOf(goal.punctuators, punctuators));\n    }\n\n    if (goal.closers) {\n      for (const closer of (goal.closers = [...goal.closers])) punctuators[closer] = !(goal.closers[closer] = true);\n      freeze(setPrototypeOf(goal.closers, punctuators));\n    }\n\n    if (goal.openers) {\n      for (const opener of (goal.openers = [...goal.openers])) {\n        const group = (goal.groups[opener] = groups[opener]);\n        punctuators[opener] = !(goal.openers[opener] = true);\n        GoalSpecificTokenRecord(goal, group.opener, 'opener', {group});\n        GoalSpecificTokenRecord(goal, group.closer, 'closer', {group});\n      }\n      freeze(setPrototypeOf(goal.openers, punctuators));\n    }\n\n    freeze(goal.groups);\n    freeze(goal.tokens);\n    freeze(goal);\n  }\n\n  freeze(punctuators);\n  // freeze(closers);\n  // freeze(openers);\n\n  freeze(goals);\n  freeze(groups);\n  freeze(identities);\n  freeze(symbols);\n\n  for (const [identity, list] of entries({\n    [identities.Keyword]:\n      'await break case catch class const continue debugger default delete do else export extends finally for function if import in instanceof let new return super switch this throw try typeof var void while with yield',\n    [identities.RestrictedWord]: 'interface implements package private protected public',\n    [identities.FutureReservedWord]: 'enum',\n    [identities.ContextualWord]: 'arguments async as from of static',\n  })) {\n    for (const keyword of list.split(/\\s+/)) keywords[keyword] = identity;\n  }\n  freeze(keywords);\n}\n\nexport {identities, goals, groups, symbols, keywords, FaultGoal};\n\n/**\n * Creates a symbolically mapped goal-specific token record\n *\n * @template {{}} T\n * @param {goal} goal\n * @param {string} text\n * @param {type} type\n * @param {T} properties\n */\nfunction GoalSpecificTokenRecord(goal, text, type, properties) {\n  const symbol = Symbol(`‹${goal.name} ${text}›`);\n  return (goal.tokens[text] = goal.tokens[symbol] = tokens[symbol] = {symbol, text, type, goal, ...properties});\n}\n\nfunction Symbolic(key, description = key) {\n  return (symbols[key] = Symbol(description));\n}\n\n/** @typedef {typeof goals} goals */\n/** @typedef {goals[keyof goals]} goal */\n/** @typedef {goal['type']} type */\n/** @typedef {{symbol: symbol, text: string, type: type, goal?: goal, group?: group}} token */\n/** @typedef {typeof groups} groups */\n/** @typedef {groups[keyof groups]} group */\n\n/**\n * @typedef {'await'|'break'|'case'|'catch'|'class'|'const'|'continue'|'debugger'|'default'|'delete'|'do'|'else'|'export'|'extends'|'finally'|'for'|'function'|'if'|'import'|'in'|'instanceof'|'new'|'return'|'super'|'switch'|'this'|'throw'|'try'|'typeof'|'var'|'void'|'while'|'with'|'yield'} ECMAScript.Keyword\n * @typedef {'interface'|'implements'|'package'|'private'|'protected'|'public'} ECMAScript.RestrictedWord\n * @typedef {'enum'} ECMAScript.FutureReservedWord\n * @typedef {'arguments'|'async'|'as'|'from'|'of'|'static'} ECMAScript.ContextualKeyword\n * @typedef {Record<ECMAScript.Keyword|ECMAScript.RestrictedWord|ECMAScript.FutureReservedWord|ECMAScript.ContextualKeyword, symbol>} ECMAScript.Keywords\n */\n","﻿/** Creates a list from a Whitespace-separated string @type { (string) => string[] } */\nexport const List = RegExp.prototype[Symbol.split].bind(/\\s+/g);\n\nconst stats = {\n  captureCount: 0,\n  contextCount: 0,\n  tokenCount: 0,\n  totalCaptures: 0,\n  totalContexts: 0,\n  totalTokens: 0,\n};\n\n/** @template {{}} T @param {T} context @returns {T & stats} */\nexport const initializeContext = context => Object.assign(context, stats);\n\nexport const capture = (identity, match, text) => {\n  match.capture[(match.identity = identity)] = text || match[0];\n  (match.fault = identity === 'fault') && (match.flatten = false);\n  return match;\n};\n\n/**\n * Safely mutates matcher state to open a new context.\n *\n * @param {*} text - Text of the intended { type = \"opener\" } token\n * @param {*} state - Matcher state\n * @returns {undefined | string} - String when context is **not** open\n */\nexport const open = (text, state) => {\n  // const {goal: initialGoal, groups} = state;\n  const {\n    contexts,\n    context: parentContext,\n    context: {depth: index, goal: initialGoal},\n    groups,\n  } = state;\n  const group = initialGoal.groups[text];\n\n  if (!group) return initialGoal.type || 'sequence';\n  groups.splice(index, groups.length, group);\n  groups.closers.splice(index, groups.closers.length, group.closer);\n\n  parentContext.contextCount++;\n\n  const goal = group.goal === undefined ? initialGoal : group.goal;\n\n  state.nextContext = contexts[index] = initializeContext({\n    id: `${parentContext.id}${goal !== initialGoal ? ` ‹${group.opener}›&#x000A;«${goal.name}»` : ` ‹${group.opener}›`}`,\n    number: contexts.count++,\n    depth: index + 1,\n    parentContext,\n    goal,\n    group,\n    state,\n  });\n};\n\n/**\n * Safely mutates matcher state to close the current context.\n *\n * @param {*} text - Text of the intended { type = \"closer\" } token\n * @param {*} state - Matcher state\n * @returns {undefined | string} - String when context is **not** closed\n */\nexport const close = (text, state) => {\n  // const {goal: initialGoal, group: initialGroup, groups} = state;\n  const {\n    contexts,\n    context: {\n      goal: initialGoal,\n      group: initialGroup,\n      parentContext,\n      captureCount,\n      contextCount,\n      tokenCount,\n      totalCaptures,\n      totalContexts,\n      totalTokens,\n    },\n    groups,\n  } = state;\n  const index = groups.closers.lastIndexOf(text);\n\n  if (index === -1 || index !== groups.length - 1) return fault(text, state);\n\n  parentContext.totalContexts += totalContexts + contextCount;\n  parentContext.totalCaptures += totalCaptures + captureCount;\n  parentContext.totalTokens += totalTokens + tokenCount;\n\n  groups.closers.splice(index, groups.closers.length);\n  groups.splice(index, groups.length);\n  state.nextContext = parentContext;\n};\n\nexport const forward = (search, match, state) => {\n  search &&\n    (typeof search === 'object'\n      ? ((search.lastIndex = match.index + match[0].length), (state.nextOffset = match.input.search(search)))\n      : (state.nextOffset = match.input.indexOf(search, match.index + match[0].length)));\n};\n\n/**\n * @returns {'fault'}\n */\nexport const fault = (text, state) => {\n  console.warn(text, {...state});\n  return 'fault';\n};\n","﻿import {Matcher} from '../../../modules/matcher/matcher.js';\nimport {HexDigit, ControlLetter, GraveAccent, UnicodeIDStart, UnicodeIDContinue} from './ranges.js';\nimport {keywords, goals, symbols, FaultGoal} from './definitions.js';\nimport {capture, forward, fault, open, close} from './helpers.js';\n\nconst dummy = async () => {\n  /*\n  prettier-ignore\n  */ //               // Make sure this block never lints\n  {\n    let i\\u0032;\n    this.new.target;\n\n    a = b             // Identifiers always divide (never ASI)\n                      /(div)/g.exec(c).map(d);\n\n                      // ExpressionStart never divide\n    ( ([              /([(regexp)])/g ] )/ [] );\n    ( [] /( [         /([(regexp)])/g ] )/ [] );\n    ( ([]) /( [       /([(regexp)])/g ] )/ [] );\n    ( [] /* */ /( [   /([(regexp)])/g ] )/ [] );\n\n                      // Literals always divide (never ASI)\n    ( []              /([(div)])/g / [] );\n    ( ([])            /([(div)])/g / [] );\n    ( [] /* */        /([(div)])/g / [] );\n                      // FIXME: ObjectLiteral is \"a literal\"\n    const x = {}      /(div)/g.exec(c).map(d);\n\n\n                      // Declaration (ASI) then ExpressionStart\n    function ƒ () {}  /(regexp)/g.exec(c).map(d);\n\n                      // FIXME: Function/ClassExpression is \"an expression\"\n    const y = function ƒ () {}\n                      /(div)/g.exec(c).map(d);\n\n                      // Keyword always regexp (regardless of ASI)\n    return await/*  *//(regexp)/g.exec(c).map(d);\n\n    // Matt Austin's\n    Function(\"arg=`\", \"/*body`){});({x: this/**/\");\n    (function(arg=`/*``*/){/*body`){});({x: this/**/})\n\n    // Multiline Strings\n    [\n      '\\\n      a\\a',           // quote›‹punctuator, comment\n      \"\\\n      \\\\n\\\\b\"/**/     // quote›‹comment, comment\n    ];\n  }\n};\n\nexport const matcher = (() => {\n  const {\n    [symbols.ECMAScriptGoal]: ECMAScriptGoal,\n    [symbols.CommentGoal]: CommentGoal,\n    [symbols.RegExpGoal]: RegExpGoal,\n    [symbols.StringGoal]: StringGoal,\n    [symbols.TemplateLiteralGoal]: TemplateLiteralGoal,\n  } = goals;\n\n  const ECMAScriptGrammar = {\n    Break: ({lf = true, crlf = false} = {}) =>\n      Matcher.define(\n        entity => Matcher.sequence`(\n        ${Matcher.join(lf && '\\\\n', crlf && '\\\\r\\\\n')}\n        ${entity((text, entity, match, state) => {\n          const group = state.context.group;\n          capture(group && group.closer === '\\n' ? close(text, state) || 'closer' : 'break', match, text);\n          match.flatten = false;\n        })}\n      )`,\n      ),\n    Whitespace: () =>\n      Matcher.define(\n        entity => Matcher.sequence`(\n        \\s+\n        ${entity((text, entity, match, state) => {\n          capture((match.flatten = state.lineOffset !== match.index) ? 'whitespace' : 'inset', match, text);\n        })}\n      )`,\n      ),\n    Escape: () =>\n      Matcher.define(\n        entity => Matcher.sequence`(\n        \\\\u[${HexDigit}][${HexDigit}][${HexDigit}][${HexDigit}]\n        ${entity((text, entity, match, state) => {\n          const context = state.context;\n          capture(\n            context.goal.type ||\n              ((match.flatten =\n                context.goal === ECMAScriptGoal &&\n                state.previousToken != null &&\n                state.previousToken.type === 'identifier' &&\n                ECMAScriptUnicodeIDContinue.test(String.fromCodePoint(parseInt(text.slice(2), 16))))\n                ? 'identifier' // `let i\\u0032` -> identifier tokens\n                : 'escape'),\n            match,\n            text,\n          );\n        })})\n      |(\n        ${entity((text, entity, match, state) => {\n          capture(state.context.goal.type || 'escape', match, (match.capture[keywords[text]] = text));\n        })}\n        \\\\f|\\\\n|\\\\r|\\\\t|\\\\v|\\\\c[${ControlLetter}]\n        |\\\\x[${HexDigit}][${HexDigit}]\n        |\\\\u\\{[${HexDigit}]*\\}\n        |\\\\.\n      )`,\n      ),\n    Comment: () =>\n      Matcher.define(\n        entity => Matcher.sequence`(\n        \\/\\/|\\/\\*\n        ${entity((text, entity, match, state) => {\n          const context = state.context;\n          capture(\n            context.goal === ECMAScriptGoal\n              ? open(text, state) ||\n                  // Safely fast skip to end of comment\n                  (forward(text === '//' ? '\\n' : '*/', match, state),\n                  // No need to track delimiter\n                  CommentGoal.type)\n              : context.goal !== CommentGoal\n              ? context.goal.type || 'sequence'\n              : context.group.closer !== text\n              ? CommentGoal.type\n              : close(text, state) || (match.punctuator = CommentGoal.type),\n            match,\n            text,\n          );\n        })}\n      )`,\n      ),\n    StringLiteral: () =>\n      Matcher.define(\n        entity => Matcher.sequence`(\n        \"|'\n        ${entity((text, entity, match, state) => {\n          const context = state.context;\n          capture(\n            context.goal === ECMAScriptGoal\n              ? open(text, state) ||\n                  // TODO: Investigate why regexp forward is slow\n                  // (void forward(text === '\"' ? /(?:[^\"\\\\\\n]+?(?=\\\\.|\")|\\\\.)*?\"/g : /(?:[^'\\\\\\n]+?(?=\\\\.|')|\\\\.)*?'/g, match, state)) ||\n                  ((match.punctuator = StringGoal.type), 'opener')\n              : context.goal !== StringGoal\n              ? context.goal.type || 'sequence'\n              : context.group.closer !== text\n              ? StringGoal.type\n              : ((match.flatten = false), close(text, state) || ((match.punctuator = StringGoal.type), 'closer')),\n            match,\n            text,\n          );\n        })}\n      )`,\n      ),\n    TemplateLiteral: () =>\n      Matcher.define(\n        entity => Matcher.sequence`(\n        ${GraveAccent}\n        ${entity((text, entity, match, state) => {\n          // const {goal, group} = state.context;\n          const context = state.context;\n          capture(\n            context.goal === ECMAScriptGoal\n              ? open(text, state) || ((match.punctuator = TemplateLiteralGoal.type), 'opener')\n              : context.goal !== TemplateLiteralGoal\n              ? ((match.flatten = true), context.goal.type || 'sequence')\n              : context.group.closer !== text\n              ? TemplateLiteralGoal.type\n              : close(text, state) || ((match.punctuator = TemplateLiteralGoal.type), 'closer'),\n            match,\n            text,\n          );\n        })}\n      )`,\n      ),\n    Opener: () =>\n      Matcher.define(\n        entity => Matcher.sequence`(\n        \\$\\{|\\{|\\(|\\[\n        ${entity((text, entity, match, state) => {\n          const context = state.context;\n          capture(\n            // openers && (text in openers ? openers.text : (openers.text = openers.includes(text)))\n            context.goal.punctuators && context.goal.punctuators[text] === true\n              ? (match.punctuator = 'combinator')\n              : context.goal.openers &&\n                context.goal.openers[text] === true &&\n                (text !== '[' || context.goal !== RegExpGoal || context.group.opener !== '[')\n              ? open(text, state) || 'opener'\n              : ((match.flatten = true), context.goal.type || 'sequence'),\n            match,\n            text,\n          );\n        })}\n      )`,\n      ),\n    Closer: () =>\n      Matcher.define(\n        entity => Matcher.sequence`(\n        \\}|\\)|\\]\n        ${entity((text, entity, match, state) => {\n          const context = state.context;\n          // const goal = state.context.goal;\n          // const {closers, punctuators, type} = state.context.goal;\n          // goal === ECMAScriptGoal || (goal.closers && goal.closers.includes(text))\n          // goal.punctuators && goal.punctuators.includes(text)\n          capture(\n            context.goal.punctuators && context.goal.punctuators[text] === true\n              ? (match.punctuator = 'combinator')\n              : context.goal.closers && context.goal.closers[text] === true\n              ? close(text, state) || 'closer'\n              : ((match.flatten = true), context.goal.type || 'sequence'),\n            match,\n            text,\n          );\n        })}\n      )`,\n      ),\n    Solidus: () =>\n      Matcher.define(\n        entity => Matcher.sequence`(\n        \\*\\/|\\/=|\\/\n        ${entity((text, entity, match, state) => {\n          let previousAtom;\n          const context = state.context;\n          capture(\n            context.goal === CommentGoal\n              ? (context.group.closer === text && close(text, state)) || (match.punctuator = context.goal.type)\n              : context.goal === RegExpGoal && context.group.closer !== ']' // ie /…*/ or /…/\n              ? close('/', state) || ((match.punctuator = context.goal.type), 'closer')\n              : context.goal !== ECMAScriptGoal\n              ? context.goal.type || 'sequence'\n              : text[0] === '*'\n              ? fault(text, state)\n              : // ECMAScriptGoal\n              /**\n               * TODO: Refine the necessary criteria for RegExp vs Div\n               * SEE: https://github.com/sweet-js/sweet-core/wiki/design\n               * SEE: https://inimino.org/~inimino/blog/javascript_semicolons\n               * SEE: https://github.com/guybedford/es-module-shims/blob/master/src/lexer.js\n               */\n              !(previousAtom = state.previousAtom) ||\n                (previousAtom.type === 'operator'\n                  ? previousAtom.text !== '++' && previousAtom.text !== '--'\n                  : previousAtom.type === 'closer'\n                  ? previousAtom.text === '}'\n                  : previousAtom.type === 'opener' || previousAtom.type === 'keyword')\n              ? open(text, state) || ((match.punctuator = 'pattern'), 'opener')\n              : (match.punctuator = 'operator'),\n            match,\n            text,\n          );\n        })}\n      )`,\n      ),\n    Operator: () =>\n      Matcher.define(\n        entity => Matcher.sequence`(\n        ${entity((text, entity, match, state) => {\n          // TODO: Add conditional lookahead (or look behined)\n          // const goal = state.context.goal;\n          const context = state.context;\n          capture(\n            context.goal === ECMAScriptGoal\n              ? 'operator'\n              : context.goal.punctuators && context.goal.punctuators[text] === true\n              ? (match.punctuator = 'punctuation')\n              : ((match.flatten = true), context.goal.type || 'sequence'),\n            match,\n            text,\n          );\n        })}\n        ,|;|\\.\\.\\.|\\.|:|\\?|=>\n        |\\+\\+|--\n        |\\+=|-=|\\*\\*=|\\*=\n        |&&|&=|&|\\|\\||\\|=|\\||%=|%|\\^=|\\^|~=|~\n        |<<=|<<|<=|<|>>>=|>>>|>>=|>>|>=|>\n        |!==|!=|!|===|==|=\n        |\\+|-|\\*\\*|\\*\n      )`,\n      ),\n    Keyword: () =>\n      Matcher.define(\n        entity => Matcher.sequence`\\b(\n        ${Object.keys(keywords)\n          .filter(Boolean)\n          .join('|')}\n        ${entity((text, entity, match, state) => {\n          let previousAtom, keywordSymbol;\n          // const goal = state.context.goal;\n          const context = state.context;\n          // TODO: Add conditional lookahead (or look behined)\n          capture(\n            (match.flatten = context.goal !== ECMAScriptGoal)\n              ? context.goal.type || 'sequence'\n              : ((keywordSymbol = keywords[text]), (previousAtom = state.previousAtom)) && previousAtom.text === '.'\n              ? 'identifier'\n              : 'keyword',\n            match,\n            text,\n          );\n          keywordSymbol &&\n            ((context.keywords = (context.keywords || 0) + 1),\n            (context[`${(match.capture[keywordSymbol] = text)}-keyword-index`] = match.index));\n        })}\n      )\\b(?=[^\\s$_:]|\\s+[^:])`,\n      ),\n    Identifier: (RegExpFlags = /^[gimsuy]+$/) =>\n      Matcher.define(\n        entity => Matcher.sequence`(\n        [${UnicodeIDStart}][${UnicodeIDContinue}]*\n        ${entity((text, entity, match, state) => {\n          let previousToken;\n          const context = state.context;\n          // TODO: Add conditional lookahead (or look behined)\n          capture(\n            context.goal !== ECMAScriptGoal\n              ? context.goal.type || 'sequence'\n              : (previousToken = state.previousToken) &&\n                previousToken.punctuator === 'pattern' &&\n                RegExpFlags.test(text)\n              ? ((match.punctuator = RegExpGoal.type), 'closer')\n              : ((match.flatten = true), 'identifier'),\n            match,\n            text,\n          );\n        })}\n      )`,\n        ECMAScriptIdentifierFlags,\n      ),\n    IdentifierStart: () =>\n      Matcher.define(\n        entity => Matcher.sequence`(\n        ${entity(symbols.UnicodeIDStart)}[${UnicodeIDStart}]\n      )`,\n        ECMAScriptIdentifierFlags,\n      ),\n    IdentifierContinue: () =>\n      Matcher.define(\n        entity => Matcher.sequence`(\n        ${entity(symbols.UnicodeIDContinue)}[${UnicodeIDContinue}]+\n      )`,\n        ECMAScriptIdentifierFlags,\n      ),\n  };\n\n  const ECMAScriptIdentifierFlags = `${UnicodeIDStart}${UnicodeIDContinue}`.includes('\\\\p{') ? 'u' : undefined;\n  const ECMAScriptUnicodeIDContinue = RegExp(ECMAScriptGrammar.IdentifierContinue(), ECMAScriptIdentifierFlags);\n\n  const matcher = Matcher.define(\n    entity => Matcher.sequence`\n    ${entity(ECMAScriptGrammar.Break())}\n    |${entity(ECMAScriptGrammar.Whitespace())}\n    |${entity(ECMAScriptGrammar.Escape())}\n    |${entity(ECMAScriptGrammar.Comment())}\n    |${entity(ECMAScriptGrammar.StringLiteral())}\n    |${entity(ECMAScriptGrammar.TemplateLiteral())}\n    |${entity(ECMAScriptGrammar.Opener())}\n    |${entity(ECMAScriptGrammar.Closer())}\n    |${entity(ECMAScriptGrammar.Solidus())}\n    |${entity(ECMAScriptGrammar.Operator())}\n    |${entity(ECMAScriptGrammar.Keyword())}\n    |${entity(ECMAScriptGrammar.Identifier())}\n    |\\d+\n    |.\n  `,\n    'gu',\n  );\n\n  matcher.goal = ECMAScriptGoal;\n\n  return matcher;\n})();\n","﻿/// <reference path=\"./types.d.ts\" />\n\nimport {countLineBreaks} from '../../packages/tokenizer/lib/core.js';\n\nexport const {\n  createTokenFromMatch,\n  createMatcherInstance,\n  createString,\n  createMatcherTokenizer,\n  createMatcherMode,\n} = (() => {\n  const {\n    RegExp,\n    Object,\n    Object: {assign, create, freeze, defineProperty, defineProperties, getOwnPropertyNames, setPrototypeOf},\n    String,\n  } = globalThis;\n\n  /** @typedef {RegExpConstructor['prototype']} Matcher */\n\n  /**\n   * @template {Matcher} T\n   * @template {{}} U\n   * @param {T} matcher\n   * @param {TokenizerState<T, U>} [state]\n   * @returns {TokenMatcher<U>}\n   */\n  const createMatcherInstance = (matcher, state) =>\n    defineProperty(\n      ((state || (state = create(null))).matcher =\n        (matcher && matcher instanceof RegExp && createMatcherClone(matcher)) || RegExp(matcher, 'g')),\n      'state',\n      {value: state},\n    );\n\n  /**\n   * @template {Matcher} T\n   * @template {T} U\n   * @template {{}} V\n   * @type {(matcher: T & V, instance?: U) => U & V}\n   * @param {T} param0\n   * @param {U} [param1]\n   * @returns {U}\n   */\n  const createMatcherClone = ({constructor: {prototype}, source, flags, lastIndex, ...properties}, instance) => (\n    (instance = assign(instance || RegExp(source, flags || 'g'), properties)),\n    prototype && setPrototypeOf(instance, prototype),\n    instance\n  );\n\n  /** @type {(value: any) => string} */\n  const createString = String;\n\n  /**\n   * @type {<M extends MatchArray, T extends {}>(init: MatchResult<M>) => Token<T>}\n   * @param {MatchResult<MatchArray>} param0\n   */\n  const createTokenFromMatch = ({0: text, identity, capture, index}) => ({\n    type: (identity && (identity.description || identity)) || 'text',\n    text,\n    breaks: countLineBreaks(text),\n    inset: (capture && capture.inset) || '',\n    offset: index,\n    capture,\n  });\n\n  const tokenizerProperties = Object.getOwnPropertyDescriptors(\n    freeze(\n      class Tokenizer {\n        /**\n         * @template {Matcher} T\n         * @template {{}} U\n         */\n        *tokenize() {\n          'use strict';\n          /** @type {Token<U>} */\n          // let next;\n          /** @type {{createToken: typeof createTokenFromMatch, initializeState: <V>(state: V) => V & TokenizerState<T, U>}} */\n          const createToken = (this && this.createToken) || createTokenFromMatch;\n          /** @type {string} */\n          const string = createString(Object.keys({[arguments[0]]: 1})[0]);\n          /** @type {TokenMatcher<U>} */\n          const matcher = createMatcherInstance(this.matcher, assign(arguments[1] || {}, {sourceText: string}));\n          /** @type {TokenizerState<T, U>} */\n          const state = matcher.state;\n          this.initializeState && this.initializeState(state);\n          matcher.exec = matcher.exec; //.bind(matcher);\n          // freeze(matcher);\n          // console.log(this, {string, matcher, state}, [...arguments]);\n          for (\n            let match, token, next, index = 0;\n            // Abort on first failed/empty match\n            ((match = matcher.exec(string)) && match[0] !== '') ||\n            //   but first yield a lastToken if present\n            void (next && (yield next));\n            // We hold back one grace token\n            (token = createToken(match, state)) &&\n            //  until createToken(…) !== undefined (ie new token)\n            //  set the incremental token index for this lastToken\n            (((state.lastToken = token).index = index++),\n            //  and finally push the previous lastToken and yield\n            next && (yield next),\n            (next = token))\n          );\n\n          console.log({...state});\n        }\n      }.prototype,\n    ),\n  );\n\n  /**\n   * @type { {<T extends Matcher, U extends {} = {}>(sourceText: string, initialState?: Partial<TokenizerState<undefined, U>): IterableIterator<Token<U>>} }\n   */\n  const createMatcherTokenizer = instance => defineProperties(instance, tokenizerProperties);\n\n  /**\n   * @param {import('/modules/matcher/matcher.js').Matcher} matcher\n   * @param {any} [options]\n   */\n  const createMatcherMode = (matcher, options) => {\n    const tokenizer = createMatcherTokenizer({\n      createToken: createTokenFromMatch,\n      /** @type {(state: {}) =>  void} */\n      initializeState: undefined,\n      matcher: freeze(createMatcherInstance(matcher)),\n    });\n\n    const mode = {syntax: 'matcher', tokenizer};\n    options &&\n      ({\n        syntax: mode.syntax = mode.syntax,\n        aliases: mode.aliases,\n        preregister: mode.preregister,\n        createToken: tokenizer.createToken = tokenizer.createToken,\n        initializeState: tokenizer.initializeState,\n        ...mode.overrides\n      } = options);\n\n    freeze(tokenizer);\n\n    return mode;\n  };\n\n  return {createTokenFromMatch, createMatcherInstance, createString, createMatcherTokenizer, createMatcherMode};\n})();\n","﻿import {matcher} from './matcher.js';\nimport {initializeContext} from './helpers.js';\nimport {createMatcherMode} from '../matcher/helpers.js';\nimport {countLineBreaks} from '../../packages/tokenizer/lib/core.js';\n\nexport const mode = createMatcherMode(matcher, {\n  syntax: 'ecmascript',\n  aliases: ['es', 'js', 'javascript'],\n  initializeState: state => {\n    (state.groups = []).closers = [];\n    state.lineOffset = state.lineIndex = 0;\n    state.lineFault = false;\n    const contexts = (state.contexts = Array(100));\n    const context = initializeContext({\n      id: `«${matcher.goal.name}»`,\n      number: (contexts.count = 1),\n      depth: 0,\n      parent: undefined,\n      goal: matcher.goal,\n      group: undefined,\n      state,\n    });\n    contexts[-1] = state.context = context;\n  },\n  preregister: parser => {\n    parser.unregister('es');\n    parser.unregister('ecmascript');\n  },\n  createToken: (match, state) => {\n    let currentGoal,\n      goalName,\n      goalType,\n      contextId,\n      text,\n      type,\n      fault,\n      punctuator,\n      offset,\n      inset,\n      breaks,\n      delimiter,\n      comment,\n      whitespace,\n      flatten,\n      fold,\n      columnNumber,\n      lineNumber,\n      tokenNumber,\n      captureNumber,\n      hint;\n\n    const {context, nextContext, lineIndex, lineOffset, nextOffset, previousToken} = state;\n\n    /* Capture */\n\n    ({\n      0: text,\n      capture: {inset},\n      identity: type,\n      flatten,\n      fault,\n      punctuator,\n      index: offset,\n    } = match);\n\n    if (!text) return;\n\n    /* Context */\n\n    nextContext && (state.nextContext = void (nextContext !== context && (state.context = nextContext)));\n\n    ({id: contextId, goal: currentGoal} = context);\n    ({name: goalName, type: goalType} = currentGoal);\n\n    nextOffset &&\n      (state.nextOffset = void (nextOffset > offset && (text = match.input.slice(offset, nextOffset)),\n      (state.matcher.lastIndex = nextOffset)));\n\n    breaks = (text === '\\n' && 1) || countLineBreaks(text);\n    comment = type === 'comment' || punctuator === 'comment';\n    delimiter = type === 'closer' || type === 'opener';\n    whitespace = !delimiter && (type === 'whitespace' || type === 'break' || type === 'inset');\n\n    type || (type = (!delimiter && !fault && goalType) || 'text');\n\n    if (breaks) {\n      state.lineIndex += breaks;\n      state.lineOffset = offset + (text === '\\n' ? 1 : text.lastIndexOf('\\n'));\n    }\n\n    /* Flattening / Token Folding */\n\n    flatten === false || flatten === true || (flatten = !delimiter && currentGoal.flatten === true);\n\n    captureNumber = ++context.captureCount;\n\n    if (\n      (fold = flatten) && // fold only if flatten is allowed\n      previousToken != null &&\n      previousToken.context === context && // never fold across contexts\n      previousToken.fold === true &&\n      (previousToken.type === type || (currentGoal.fold === true && (previousToken.type = currentGoal.type)))\n    ) {\n      previousToken.text += text;\n      breaks && (previousToken.breaks += breaks);\n    } else {\n      /* Token Creation */\n      flatten = false;\n      columnNumber = 1 + (offset - lineOffset || 0);\n      lineNumber = 1 + (lineIndex || 0);\n      tokenNumber = ++context.tokenCount;\n\n      hint = `${(delimiter ? type : goalType && `in-${goalType}`) ||\n        ''}&#x000A;${contextId} #${tokenNumber}&#x000A;(${lineNumber}:${columnNumber})`;\n\n      return (state.previousToken = state[whitespace || comment ? 'previousTrivia' : 'previousAtom'] = {\n        type,\n        text,\n        offset,\n        breaks,\n        inset,\n        columnNumber,\n        lineNumber,\n        punctuator,\n        fault,\n        fold,\n        flatten,\n        delimiter,\n        whitespace,\n        comment,\n        hint,\n\n        captureNumber,\n        tokenNumber,\n\n        context,\n        lineIndex,\n        lineOffset,\n      });\n    }\n  },\n});\n","﻿import {mode} from './mode.js';\n\n/**\n * @param {import('/markup/packages/tokenizer/lib/api').API} markup\n */\nexport default ((\n  sourceURL = './matcher.js',\n  sourceType = 'es',\n  resolveSourceType = (defaultType, {sourceType, resourceType, options}) => {\n    // console.log({defaultType, sourceType, resourceType});\n    if (resourceType === 'javascript' && !sourceType) return 'es';\n  },\n) => async markup => {\n  markup.parsers[0].register(mode);\n  return {sourceURL, sourceType, resolveSourceType};\n})();\n","import {createParser} from '../lib/core.js';\nimport {TokenizerAPI} from '../lib/api.js';\nimport markupDOM from '../extensions/dom.js';\nimport experimentalES from '../../../experimental/es/playground.js';\n\n/** @type {{experimentalESAPI: import('../lib/api').API}} */\nconst {\n  experimentalESAPI: experimentalESAPI,\n  experimentalESAPI: {parsers, render, tokenize, warmup},\n} = {\n  //@ts-ignore\n  experimentalESAPI: new TokenizerAPI({\n    parsers: [new (createParser())({url: import.meta.url})],\n    render: (source, options, flags) => {\n      const fragment = options && options.fragment;\n      const debugging = flags && /\\bdebug\\b/i.test(typeof flags === 'string' ? flags : [...flags].join(' '));\n\n      debugging && console.info('render: %o', {api: experimentalESAPI, source, options, flags, fragment, debugging});\n      fragment && (fragment.logs = debugging ? [] : undefined);\n\n      return markupDOM.render(tokenize(source, options, flags), fragment);\n    },\n  }),\n};\n\n// Integrate experimental ECMAScript mapping it to the\n//   \"es\" mode and \"ecmascript\" alias, but leaving the\n//   normal JavaScript intact for both \"js\" and its\n//   \"javascript\" alias.\n\nexport const overrides = Object.freeze(experimentalES(experimentalESAPI));\n\nexport default experimentalESAPI;\nexport {parsers, tokenize, render, warmup};\n"],"names":["document","Element","Node","Text","DocumentFragment","createElement","createText","createFragment","dom.document","pseudom.native","pseudom.pseudo"],"mappings":"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"}