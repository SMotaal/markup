{"version":3,"file":"tokenizer.experimental.js","sources":["../../packages/tokenizer/lib/experimental/contextualizer.js","../../packages/tokenizer/lib/experimental/contexts.js","../../packages/tokenizer/lib/core.js","../../packages/tokenizer/lib/experimental/synthesizer.js","../../packages/tokenizer/lib/experimental/tokenizer.js","../../packages/tokenizer/lib/experimental/parser.js","../../packages/tokenizer/tokenizer.experimental.js","../../packages/grammar/common/helpers.js","../../packages/grammar/css/css-grammar.js","../../packages/grammar/html/html-grammar.js","../../packages/grammar/markdown/markdown-grammar.js","../../packages/grammar/common/patterns.js","../../packages/grammar/javascript/javascript-grammar.js","../../packages/grammar/typescript/typescript-grammar.js","../../packages/grammar/javascript/javascript-extended-grammar.js","../../packages/tokenizer/tokenizer.experimental.extended.js"],"sourcesContent":["﻿/** Shared context state handler for token generator instances  */\nexport class Contextualizer {\n  constructor(tokenizer) {\n    // Local contextualizer state\n    let definitions, context;\n\n    // Tokenizer mode\n    const {defaults = {}, mode = defaults.mode, initializeContext} = tokenizer;\n\n    if (!mode) throw Error(`Contextualizer constructed without a mode`);\n\n    const prime = next => (\n      definitions !== next &&\n        next &&\n        ((context = mappings.get((definitions = next))) ||\n          ((context = this.contextualize(definitions)),\n          initializeContext && apply(initializeContext, tokenizer, [context]))),\n      (next != null && context) || ((definitions = mode), (context = root))\n    );\n\n    Object.defineProperties(this, {\n      mode: {value: mode, writable: false},\n      prime: {value: prime, writable: false},\n    });\n\n    // Eagerly contextualize \"root\" definitions on first use\n    if (!(context = mappings.get((definitions = mode)))) {\n      const {\n        // Parent goal\n        syntax,\n        matcher = (mode.matcher = (defaults && defaults.matcher) || undefined),\n        quotes,\n        punctuation = (mode.punctuation = {}),\n        punctuators = (mode.punctuators = {aggregators: {}}),\n        punctuators: {aggregators = (punctuators.aggregators = {})},\n        patterns = (mode.patterns = {maybeKeyword: null}),\n        patterns: {\n          maybeKeyword = (patterns.maybeKeyword =\n            (defaults && defaults.patterns && defaults.patterns.maybeKeyword) || undefined),\n        },\n        spans: {['(spans)']: spans} = (mode.spans = {}),\n      } = mode;\n\n      context = {syntax, goal: syntax, mode, punctuators, punctuation, aggregators, matcher, quotes, spans};\n\n      initializeContext && apply(initializeContext, tokenizer, [context]);\n\n      mappings.set(mode, context);\n    }\n\n    const root = context;\n  }\n\n  contextualize(definitions) {\n    const mode = this.mode;\n\n    const {\n      // Parent goal\n      syntax = (definitions.syntax = mode.syntax),\n\n      // Lexical goal\n      goal = (definitions.goal = syntax),\n\n      // Assumes shared parent and unrelated production lexicons\n      punctuators = (definitions.punctuators = goal === syntax ? mode.punctuators : {}),\n      aggregators = (definitions.aggregate =\n        (punctuators && punctuators.aggregators) || (punctuators.aggregators = {})),\n\n      // Assumes specific overrides\n      punctuation = definitions.punctuation || {},\n\n      // Contextual identity\n      punctuator,\n      closer,\n\n      // Contextual grammar\n      spans,\n      matcher = (definitions.matcher = mode.matcher),\n      quotes = (definitions.quotes = mode.quotes),\n      forming = (definitions.forming = goal === mode.syntax),\n    } = definitions;\n\n    const context = {\n      mode,\n      syntax,\n      goal,\n      punctuation,\n      punctuator,\n      punctuators,\n      aggregators,\n      closer,\n      spans,\n      matcher,\n      quotes,\n      forming,\n    };\n\n    mappings.set(definitions, context);\n    return context;\n  }\n\n  /** @deprecate Historical convenience sometimes used cautiously */\n  normalize({\n    syntax,\n    goal = syntax,\n    quote,\n    comment,\n    closure,\n    span,\n    grouping = comment || closure || span || undefined,\n    punctuator,\n    spans = (grouping && grouping.spans) || undefined,\n    matcher = (grouping && grouping.matcher) || undefined,\n    quotes = (grouping && grouping.quotes) || undefined,\n    punctuators = {aggregators: {}},\n    punctuation,\n    opener = quote || (grouping && grouping.opener) || undefined,\n    closer = quote || (grouping && grouping.closer) || undefined,\n    hinter,\n    open = (grouping && grouping.open) || undefined,\n    close = (grouping && grouping.close) || undefined,\n  }) {\n    return {\n      syntax,\n      goal,\n      punctuator,\n      spans,\n      matcher,\n      quotes,\n      punctuators,\n      punctuation,\n      opener,\n      closer,\n      hinter,\n      open,\n      close,\n    };\n  }\n}\n\nObject.freeze(Object.freeze(Contextualizer.prototype).constructor);\n\nconst mappings = new WeakMap();\nconst {apply} = Reflect;\n","﻿import {Contextualizer} from './contextualizer.js';\n\n/** Private context state handler for token generator instances */\nexport class Contexts {\n  /** @param {Tokenizer} tokenizer */\n  constructor(tokenizer) {\n    ({\n      syntax: this.syntax,\n      syntax: this.goal,\n      syntax: (this.hints = new Hints()).top,\n      [Definitions]: this.definitions = (this.contextualizer.mode[Definitions] = {}),\n    } = (this.contextualizer =\n      // TODO: Undo if concurrent parsing shows side-effects\n      tokenizer.contextualizer || (tokenizer.contextualizer = new Contextualizer(tokenizer))).mode);\n    (this.stack = [(this.root = this.contextualizer.prime(null))]).hints = [(this.hint = this.hints.toString())];\n  }\n\n  /**\n   * @param {Token} nextToken\n   * @param {TokenizerState} state\n   * @param {TokenizerContext} context\n   */\n  close(nextToken, state, context) {\n    const childContext = context;\n    let after, parentToken;\n    const {stack, hints, syntax, contextualizer} = this;\n\n    const childIndex = stack.length - 1;\n    const childDefinitions = childIndex && stack[childIndex];\n\n    // TODO: Handle childContext.closer !== childDefinitions.closer\n    if (childDefinitions) {\n      const {hinter, punctuator} = childDefinitions;\n      stack.pop();\n      stack.includes(childDefinitions) || hints.delete(hinter);\n      (punctuator === 'opener' && (nextToken.punctuator = 'closer')) ||\n        (punctuator && (nextToken.punctuator = punctuator));\n      nextToken.type = 'punctuator';\n      after = childDefinitions.close && childDefinitions.close(nextToken, state, childContext);\n    }\n\n    const parentIndex = stack.length - 1;\n    const parentDefinitions = stack[parentIndex];\n    const parentHint = stack.hints[parentIndex];\n\n    // TODO: Verify coherent goal, context, and hints\n    (parentDefinitions &&\n      (this.hint = parentHint) &&\n      (context = contextualizer.prime(parentDefinitions)) &&\n      (this.goal = context.goal || syntax)) ||\n      ((this.goal = (context = contextualizer.prime(null)).goal || syntax) && (this.hint = stack.hints[0] || syntax));\n    parentToken = (nextToken.parent && nextToken.parent.parent) || undefined;\n\n    return {context, after, parentToken};\n  }\n\n  /**\n   * @param {Token} nextToken\n   * @param {TokenizerState} state\n   * @param {TokenizerContext} context\n   */\n  open(nextToken, state, context) {\n    let childDefinitions, parentToken, after;\n    let {punctuator, text} = nextToken;\n    const parentContext = context;\n    const {definitions, stack, hints, hint, syntax, contextualizer} = this;\n    const hinter = punctuator ? `${syntax}-${punctuator}` : hint;\n    const contextID = `${hinter},${text}`;\n    const definedDefinitions = definitions[contextID];\n    const {\n      mode: {matchers, comments, spans, closures},\n    } = parentContext;\n\n    if (punctuator === 'span' && parentContext.spans) {\n      const span = parentContext.spans.get(text);\n      punctuator = nextToken.punctuator = 'span';\n      childDefinitions =\n        definedDefinitions ||\n        contextualizer.normalize({\n          syntax,\n          goal: syntax,\n          span,\n          matcher: span.matcher || (matchers && matchers.span) || undefined,\n          spans: (spans && spans[text]) || undefined,\n          hinter,\n          punctuator,\n          punctuation: (definedDefinitions && definedDefinitions.punctuation) || {},\n        });\n    } else if (parentContext.punctuator !== 'quote') {\n      if (punctuator === 'quote') {\n        childDefinitions =\n          definedDefinitions ||\n          contextualizer.normalize({\n            syntax,\n            goal: punctuator,\n            quote: text,\n            matcher: (matchers && matchers.quote) || undefined,\n            spans: (spans && spans[text]) || undefined,\n            hinter,\n            punctuator,\n            punctuation: (definedDefinitions && definedDefinitions.punctuation) || {},\n          });\n      } else if (punctuator === 'comment') {\n        const comment = comments.get(text);\n        childDefinitions =\n          definedDefinitions ||\n          contextualizer.normalize({\n            syntax,\n            goal: punctuator,\n            comment,\n            matcher: comment.matcher || (matchers && matchers.comment) || undefined,\n            hinter,\n            punctuator,\n            punctuation: (definedDefinitions && definedDefinitions.punctuation) || {},\n          });\n      } else if (punctuator === 'closure') {\n        const closure = (definedDefinitions && definedDefinitions.closure) || closures.get(text);\n        punctuator = nextToken.punctuator = 'opener';\n        closure &&\n          (childDefinitions =\n            definedDefinitions ||\n            contextualizer.normalize({\n              syntax,\n              goal: syntax,\n              closure,\n              matcher: closure.matcher || (matchers && matchers.closure) || undefined,\n              hinter,\n              punctuator,\n              punctuation: (definedDefinitions && definedDefinitions.punctuation) || {\n                ...((closure && closure.punctuation) || undefined),\n              },\n            }));\n      }\n    }\n\n    if (childDefinitions) {\n      (contextID && definitions[contextID]) || (definitions[contextID] = childDefinitions);\n      const childIndex = stack.push(childDefinitions) - 1;\n      hints.add(hinter);\n      this.goal = (childDefinitions && childDefinitions.goal) || syntax;\n      this.hint = stack.hints[childIndex] = `${hints.toString()} in-${this.goal}`;\n      parentToken = nextToken;\n      context = contextualizer.prime(childDefinitions);\n      nextToken.type = 'punctuator';\n      after = childDefinitions.open && childDefinitions.open(nextToken, state, context);\n    }\n\n    return {context, after, parentToken};\n  }\n}\n\nObject.freeze(Object.freeze(Contexts.prototype).constructor);\n\nconst Definitions = Symbol('[definitions]');\n\nconst Hints = Object.freeze(\n  Object.defineProperties(\n    class Hints extends Set {\n      toString() {\n        return `${(this.root && ` ${this.root}`) || ''}${(this.top && ` ${this.top}`) || ''}${(this.size &&\n          ` ${this.join(' ')}`) ||\n          ''}`.trim();\n      }\n    }.prototype,\n    {join: Object.getOwnPropertyDescriptor(Array.prototype, 'join')},\n  ),\n).constructor;\n\n/** @typedef {import('./types').Contextualizer} Contextualizer */\n/** @typedef {import('./types').Token} Token */\n/** @typedef {import('./types').Tokenizer} Tokenizer */\n/** @typedef {import('./types').TokenizerState} TokenizerState */\n/** @typedef {import('./types').TokenizerContext} TokenizerContext */\n","﻿export const TOKENIZERS = 'tokenizers';\nexport const MAPPINGS = 'mappings';\nexport const MODES = 'modes';\n\nconst none = {\n  syntax: 'markup',\n  matcher: /([\\s\\n]+)|(\\\\(?:(?:\\\\\\\\)*\\\\|[^\\\\\\s])?|\\/\\/+|\\/\\*+|\\*+\\/|\\(|\\)|\\[|\\]|,|;|\\.\\.\\.|\\.|\\b:\\/\\/\\b|::|:|\\?|`|\"|'|\\$\\{|\\{|\\}|=>|<\\/|\\/>|\\++|\\-+|\\*+|&+|\\|+|=+|!={0,3}|<{1,3}=?|>{1,2}=?)|[+\\-*/&|^%<>~!]=?/g,\n};\n\nconst define = (instance, property, value, options) => {\n  if (!instance.hasOwnProperty(property))\n    return (\n      Object.defineProperty(instance, property, {\n        value,\n        writable: (options && options.writable === true) || false,\n        configurable: (options && options.configurable === true) || false,\n        enumerable: !options || options.enumerable === true,\n      }),\n      value\n    );\n};\n\n/** The identity empty immutable iterable for debugging. */\nconst EmptyTokenArray = (EmptyTokenArray =>\n  Object.freeze(\n    new (Object.freeze(Object.freeze(Object.setPrototypeOf(EmptyTokenArray.prototype, null)).constructor, null))(),\n  ))(\n  class EmptyTokenArray {\n    *[Symbol.iterator]() {}\n  },\n);\n\n/**\n * Returns the first occurance of a sequence in the string\n * starting from the index (or 0 where undefined), always\n * returning -1 or the index of the occurance.\n *\n * @see https://tc39.es/ecma262/#sec-string.prototype.indexof\n * @type {(string: string, sequence: string , index?: number) => number}\n */\nexport const indexOf = Function.call.bind(String.prototype.indexOf);\n\n/**\n * Returns the total number of `\\n` sequences in the string.\n *\n * @type {(string: string) => number}\n */\nexport const countLineBreaks = text => {\n  let lineBreaks = 0;\n  for (let index = -1; (index = indexOf(text, '\\n', index + 1)) !== -1; lineBreaks++);\n  return lineBreaks;\n};\n\nexport const createBaselineTokenizer = () => {\n  return class Tokenizer {\n    *tokenize(sourceText) {\n      let match, lastIndex;\n      const matcher = RegExp(none.matcher);\n      const string = String(sourceText || '');\n\n      lastIndex = 0;\n      while ((match = matcher.exec(string))) {\n        const {0: text, index} = match;\n        const pre = lastIndex < index && string.slice(lastIndex, index);\n        lastIndex = matcher.lastIndex;\n        pre && (yield {text: pre, lineBreaks: countLineBreaks(pre)});\n        yield {text, lineBreaks: countLineBreaks(text)};\n      }\n    }\n  };\n};\n\n/** @param {typeof import('./tokenizer.js')['Tokenizer']} [Tokenizer] */\nexport const createParser = (Tokenizer = createBaselineTokenizer()) =>\n  class Parser {\n    constructor(options) {\n      if (options) {\n        const {mode, tokenizer, url, modes} = options;\n        if (mode) {\n          this.register((this.mode = mode));\n          tokenizer && this[TOKENIZERS].set(mode, tokenizer);\n        }\n        if (modes) for (const id in modes) this.register(modes[id]);\n        url && (this.MODULE_URL = url);\n      }\n    }\n\n    /**\n     * @param source {string}\n     * @param state {{sourceType?: string}}\n     */\n    tokenize(source, state = {}) {\n      const {\n        options: {\n          sourceType,\n          mode = (state.options.mode = (sourceType && this.get(sourceType)) || this.mode || none),\n        } = (state.options = {}),\n      } = state;\n      let tokenizer = mode && this[TOKENIZERS].get(mode);\n      if (!source || !mode) return EmptyTokenArray;\n      if (!tokenizer) {\n        if (typeof Tokenizer !== 'function') {\n          throw TypeError(\n            `Parse factory expected the first argument to be a Tokenizer constructor (not ${typeof Tokenizer}) — either define a tokenizer mapping for \"${sourceType ||\n              mode.syntax ||\n              'markup'}\" or pass the a constructor to the factory.`,\n          );\n        }\n        this[TOKENIZERS].set(mode, (tokenizer = new Tokenizer(mode)));\n      }\n      state.parser = this;\n      state.tokenize = (this.hasOwnProperty('tokenize') && this.tokenize) || (this.tokenize = this.tokenize.bind(this));\n      return tokenizer.tokenize(source, state);\n    }\n\n    get [TOKENIZERS]() {\n      return define(this, TOKENIZERS, new WeakMap());\n    }\n    get [MAPPINGS]() {\n      return define(this, MAPPINGS, Object.create(null));\n    }\n\n    get [MODES]() {\n      return define(this, MODES, Object.create(null));\n    }\n\n    get(id = 'default') {\n      const {[MAPPINGS]: mappings, [MODES]: modes} = this;\n      if (id in modes) return modes[id];\n      let mapping = mappings[id];\n      !mapping || mapping.syntax === id || (mapping = mappings[mapping.syntax]);\n      if (mapping) {\n        const {syntax, mode, factory, options} = mapping;\n        if (mode) {\n          return (modes[id] = mode);\n        }\n        if (factory) {\n          if (options.requires && options.requires.length > 0) {\n            const list = [];\n            for (const id of options.requires) id in modes || this.get(id) || list.push(id);\n            if (list.length) {\n              list.length > 1 && list.push(list.splice(-2, 2).join(' and '));\n              throw Error(`Cannot initialize \"${syntax}\" which requires the list mode(s): ${list.join(', ')}`);\n            }\n          }\n          return (mapping.mode = modes[id] = factory(options, modes));\n        }\n      }\n    }\n\n    /** @param {ModeFactory | Parser.Mode} mode @param {Parser.Mode.Options} [options] */\n    register(mode, options) {\n      if (!this[MAPPINGS]) return;\n\n      const {[MAPPINGS]: mappings, [MODES]: modes} = this;\n      const factory = typeof mode === 'function' && mode;\n      const {syntax, aliases = (options.aliases = []), preregister, tokenizer} = ({\n        syntax: options.syntax = mode.syntax,\n      } = options = {\n        syntax: undefined,\n        ...(factory ? factory.defaults : mode),\n        ...options,\n      });\n\n      if (!syntax || typeof syntax !== 'string') {\n        throw TypeError(`Cannot register \"${syntax}\" since it not valid string'`);\n      }\n\n      if (preregister) preregister(this);\n\n      if (mappings[syntax]) {\n        if (factory ? factory === mappings[syntax].factory : mode === modes[syntax]) return;\n        throw ReferenceError(`Cannot register \"${syntax}\" since it is already registered`);\n      }\n\n      const ids = [syntax];\n\n      if (aliases && aliases.length > 0) {\n        for (const alias of aliases) {\n          const mapping = mappings[alias];\n          if (!alias || typeof alias !== 'string') {\n            throw TypeError(`Cannot register \"${syntax}\" since it's alias \"${alias}\" not valid string'`);\n          }\n\n          if (alias in modes || (mapping && (mapping.syntax === alias || mapping.syntax[0] === alias[0]))) {\n            continue;\n          }\n\n          if (mapping) {\n            Object.defineProperty(mappings, alias, {writable: true, configurable: true});\n            delete mappings[alias];\n            ids.push(alias);\n          }\n\n          ids.push(alias);\n        }\n      }\n\n      const mapping = factory ? {syntax, factory, options} : {syntax, mode, options};\n      const descriptor = {value: mapping, writable: false, configurable: true};\n\n      for (const id of ids) Object.defineProperty(mappings, id, descriptor);\n\n      if (tokenizer) this[TOKENIZERS].set(mode, tokenizer);\n    }\n\n    unregister(id) {\n      const {[MAPPINGS]: mappings, [MODES]: modes} = this;\n      if (id in modes) {\n        throw ReferenceError(`Cannot unregister \"${id}\" since it's already been bootstrapped for use.`);\n      }\n      Object.defineProperty(mappings, id, {writable: true, configurable: true});\n      delete mappings[id];\n    }\n\n    /** @param {string} mode @param {string[]} requires */\n    requires(mode, requires) {\n      const missing = [];\n      for (const mode of requires) {\n        mode in this[MAPPINGS] || missing.push(`\"${mode}\"`);\n      }\n      if (!missing.length) return;\n      throw Error(`Cannot initialize \"${mode}\" which requires the missing mode(s): ${missing.join(', ')}`);\n    }\n  };\n\n/**\n * @typedef { ReturnType<createParser> } Parser\n * @typedef { Partial<{syntax: string, matcher: RegExp, [name:string]: Set | Map | {[name:string]: Set | Map | RegExp} }> } Parser.Mode\n * @typedef { {[name: string]: Parser.Mode} } Parser.Modes\n * @typedef { {[name: string]: {syntax: string} } } Parser.Mappings\n * @typedef { {aliases?: string[], syntax: string} } Parser.Mode.Options\n * @typedef { (options: Parser.Mode.Options, modes: Parser.Modes) => Parser.Mode } ModeFactory\n */\n","﻿import {countLineBreaks} from '../core.js';\n\nexport class TokenSynthesizer {\n  constructor(context) {\n    const {\n      mode: {\n        keywords,\n        patterns: {\n          maybeIdentifier,\n          maybeKeyword,\n          segments: {\n            [SEGMENT]: matchSegment = context.mode.patterns.segments &&\n              (context.mode.patterns.segments[SEGMENT] = createSegmenter(context.mode.patterns.segments)),\n          } = (context.mode.patterns.segments = false),\n        } = (context.mode.patterns = false),\n      },\n      punctuation = (context.punctuation = {}),\n      punctuators,\n      aggregators,\n      forming = (context.forming = true),\n      wording = (context.wording = keywords || maybeIdentifier ? true : false),\n      [PUNCTUATOR]: matchPunctuator = (context[PUNCTUATOR] = createPunctuator(context)),\n      [AGGREGATOR]: matchAggregator = (context[AGGREGATOR] = createAggregator(context)),\n    } = context;\n\n    this.create = next => {\n      const {text, type, hint, previous, parent, last} = next;\n      type === 'sequence'\n        ? ((next.punctuator =\n            punctuation[text] ||\n            (previous &&\n              (aggregators[text] || (!(text in aggregators) && (aggregators[text] = matchAggregator(text))))) ||\n            punctuators[text] ||\n            (!(text in punctuators) && (punctuators[text] = matchPunctuator(text))) ||\n            undefined) &&\n            (next.type = 'punctuator')) ||\n          (matchSegment &&\n            (next.type = matchSegment(text)) &&\n            (next.hint = `${(hint && `${hint} `) || ''}${next.type}`)) ||\n          (next.type = 'sequence')\n        : type === 'whitespace'\n        ? // ? (next.lineBreaks = text.match(LineEndings).length - 1)\n          (next.lineBreaks = countLineBreaks(text))\n        : forming && wording\n        ? text &&\n          (((!maybeKeyword || maybeKeyword.test(text)) &&\n            keywords &&\n            keywords.includes(text) &&\n            (!last || last.punctuator !== 'nonbreaker' || (previous && previous.lineBreaks > 0)) &&\n            (next.type = 'keyword')) ||\n            (maybeIdentifier && maybeIdentifier.test(text) && (next.type = 'identifier')))\n        : (next.type = 'text');\n\n      previous && (previous.next = next) && (parent || (next.parent = previous.parent));\n\n      return next;\n    };\n  }\n}\n\nObject.freeze(Object.freeze(TokenSynthesizer.prototype).constructor);\n\nconst PUNCTUATOR = Symbol('[punctuator]');\nconst AGGREGATOR = Symbol('[aggregator]');\nconst SEGMENT = Symbol('[segment]');\n\nconst createSegmenter = segments => {\n  const sources = [];\n  const names = [];\n  for (const name of Object.getOwnPropertyNames(segments)) {\n    const segment = segments[name];\n    if (segment && segment.source && !/\\\\\\d/.test(segment.source)) {\n      names.push(name);\n      sources.push(segment.source.replace(/\\\\?\\((.)/g, (m, a) => (m[0] !== '\\\\' && a !== '?' && '(?:') || m));\n    }\n  }\n  const length = names.length;\n  if (!length) return false;\n  const matcher = new RegExp(`(${sources.join('|)|(')}|)`, 'u');\n  return text => {\n    const match = matcher.exec(text);\n    if (match[0]) for (let i = 1, n = length; n--; i++) if (match[i]) return names[i - 1];\n  };\n};\n\nconst createPunctuator = ({mode: {operators, nonbreakers, comments, closures, breakers}, quotes, spans}) => {\n  return text =>\n    (operators && operators.includes(text) && 'operator') ||\n    (closures && closures.includes(text) && 'closure') ||\n    (breakers && breakers.includes(text) && 'breaker') ||\n    (nonbreakers && nonbreakers.includes(text) && 'nonbreaker') ||\n    (comments && comments.includes(text) && 'comment') ||\n    (quotes && quotes.includes(text) && 'quote') ||\n    (spans && spans.includes(text) && 'span') ||\n    false;\n};\n\nconst createAggregator = ({mode: {assigners, combinators}}) => {\n  return text =>\n    (assigners && assigners.includes(text) && 'assigner') ||\n    (combinators && combinators.includes(text) && 'combinator') ||\n    false;\n};\n","﻿import {Contexts} from './contexts.js';\nimport {TokenSynthesizer} from './synthesizer.js';\n\n/** Tokenizer for a single mode (language) */\nexport class Tokenizer {\n  constructor(mode, defaults) {\n    this.mode = mode;\n    this.defaults = defaults || this.constructor.defaults || undefined;\n  }\n\n  initializeContext(context) {\n    context.createToken || (context.createToken = new TokenSynthesizer(context).create);\n    return context;\n  }\n\n  /** Token generator from source using tokenizer.mode (or defaults.mode) */\n  *tokenize(source, state = {}) {\n    let done, context;\n    let previousToken, lastToken, parentToken;\n    let {match, index = 0, flags} = state;\n    const contexts = (state.contexts = new Contexts(this));\n    const {tokenize = (state.tokenize = text => [{text}])} = state;\n    const rootContext = (context = state.lastContext = contexts.root);\n    const top = {type: 'top', text: '', offset: index};\n\n    done = !(state.source = source);\n\n    while (!done) {\n      const {closer, matcher, createToken, forming = true} = context;\n\n      // Current contextual hint (syntax or hint)\n      const hint = contexts.hint;\n\n      while (state.lastContext === (state.lastContext = context)) {\n        let nextToken;\n\n        const lastIndex = (state.index > -1 && state.index) || 0;\n\n        matcher.lastIndex = lastIndex;\n        match = state.match = matcher.exec(source);\n        done = index === (index = state.index = matcher.lastIndex) || !match;\n\n        if (done) break;\n\n        // Current contextual match\n        const {0: text, 1: whitespace, 2: sequence, index: offset} = match;\n\n        // Current quasi-contextual fragment\n        const pre = source.slice(lastIndex, offset);\n        pre &&\n          ((nextToken = createToken({\n            type: 'pre',\n            text: pre,\n            offset: lastIndex,\n            previous: previousToken,\n            parent: parentToken,\n            hint,\n            last: lastToken,\n          })),\n          yield (previousToken = nextToken));\n\n        // Current contextual fragment\n        const type = (whitespace && 'whitespace') || (sequence && 'sequence') || 'text';\n        nextToken = createToken({\n          type,\n          text,\n          offset,\n          previous: previousToken,\n          parent: parentToken,\n          hint,\n          last: lastToken,\n        });\n\n        let after;\n\n        // Current contextual punctuator (from sequence)\n        const closing =\n          closer && (closer.test ? closer.test(text) : closer === text || (whitespace && whitespace.includes(closer)));\n\n        // Update context\n        (closing && ({context, after, parentToken = top} = contexts.close(nextToken, state, context))) ||\n          (nextToken.punctuator &&\n            context.punctuator !== 'comment' &&\n            ({context, after, parentToken = top} = contexts.open(nextToken, state, context)));\n\n        // Current contextual tail token (yield from sequence)\n        yield (previousToken = nextToken);\n\n        // Next reference to last contextual sequence token\n        nextToken && !whitespace && forming && (lastToken = nextToken);\n\n        if (after) {\n          let tokens, createToken, nextIndex;\n          let hintTokenType, hintPrefix, hintSuffix;\n\n          if (after.syntax) {\n            const {syntax, offset, index} = after;\n            let body = index > offset && source.slice(offset, index);\n            if (body && body.length > 0) {\n              (tokens = tokenize(`${body}`, {options: {sourceType: syntax}}, this.defaults)), (nextIndex = index);\n              // Workaround for lost token for script/style tags in in-html\n              // TODO: Investigate lost token in script/style tags in in-html\n              tokens.lastOffset = body.length;\n              hintSuffix = `${syntax}-in-${rootContext.syntax}`;\n              createToken = token => ((token.hint = `${(token.hint && `${token.hint} `) || ''}${hintSuffix}`), token);\n              // console.log({after, body, tokens, hintSuffix, createToken});\n            }\n          } else if (after.length) {\n            hintTokenType = 'code';\n            hintPrefix = contexts.hint ? `${contexts.hint} ` : '';\n            createToken = token =>\n              context.createToken(((token.hint = `${hintPrefix}${token.type || hintTokenType}`), token));\n            (tokens = after).end > state.index && (nextIndex = after.end);\n          }\n\n          if (tokens) {\n            for (const next of tokens) {\n              // Workaround for lost token for script/style tags in in-html\n              // TODO: Investigate lost token in script/style tags in in-html\n              // tokens.lastOffset > 0 && console.log('next: %o', next, [tokens.lastOffset, next.offset]);\n\n              if(next.offset > tokens.lastOffset) break;\n\n              (previousToken && ((next.previous = previousToken).next = next),\n                  createToken && createToken(next),\n                  yield (previousToken = next));\n            }\n            tokens.return && tokens.return();\n            nextIndex > state.index && (state.index = nextIndex);\n          }\n        }\n      }\n    }\n    flags && flags.debug && console.info('[Tokenizer.tokenize‹state›]: %o', state);\n  }\n}\n\nObject.freeze(Object.freeze(Tokenizer.prototype).constructor);\n","import {Tokenizer} from './tokenizer.js';\nimport {createParser} from '../core.js';\n\nexport {TOKENIZERS, MAPPINGS, MODES} from '../core.js';\n\nexport const Parser = createParser(Tokenizer);\n\n/**\n * @typedef { Partial<{syntax: string, matcher: RegExp, [name:string]: Set | Map | {[name:string]: Set | Map | RegExp} }> } Mode\n * @typedef { {[name: string]: Mode} } Modes\n * @typedef { {[name: string]: {syntax: string} } } Mappings\n * @typedef { {aliases?: string[], syntax: string} } ModeOptions\n * @typedef { (options: ModeOptions, modes: Modes) => Mode } ModeFactory\n */\n","export * from './lib/experimental/parser.js';\nexport * from './lib/experimental/tokenizer.js';\nimport {Parser} from './lib/experimental/parser.js';\n\nexport default new Parser({url: import.meta.url});\n","﻿/// Helpers\nexport const InspectSymbol = Symbol.for('nodejs.util.inspect.custom');\n\nexport const Null = Object.freeze(Object.create(null));\n\nexport const raw = String.raw;\n\nexport const RegExpFlags = /^\\/((?:g(?=[^g]*$)|i(?=[^i]*$)|m(?=[^m]*$)|s(?=[^s]*$)|u(?=[^u]*$)|y(?=[^y]*$))+)$|/;\n\nclass SequenceExpression extends RegExp {}\n\nexport const {\n  escape = (SequenceExpression.escape = /** @type {<T>(source: T) => string} */ ((() => {\n    const {replace} = Symbol;\n    return source => /[\\\\^$*+?.()|[\\]{}]/g[replace](source, '\\\\$&');\n  })())),\n} = SequenceExpression;\n\n/**\n * Create a sequence match expression from patterns.\n *\n * @type  {{(strings: TemplateStringsArray, ... patterns: pattern[]): sequence, (...patterns: pattern[]): sequence}}\n */\nexport const sequence = (...patterns) => (\n  patterns.length > 1 &&\n    (patterns.flags = RegExpFlags.exec(patterns[patterns.length - 1]).pop()) &&\n    (patterns[patterns.length - 1] = ''),\n  new SequenceExpression(Reflect.apply(raw, null, patterns.map(p => (p && p.source) || p || '')), patterns.flags || 'g')\n);\n\nclass IdentifierExpression extends RegExp {}\n\n/**\n * Create a maybeIdentifier test (ie [<first>][<other>]*) expression.\n *\n * @type {{(first: pattern, other: pattern, flags?: string, boundary?: unknown): pattern.identifier}}\n */\nexport const identifier = (first, other = first, flags = 'u', boundary = /yg/.test(flags) && '\\\\b') =>\n  new IdentifierExpression(`${boundary || '^'}[${first}][${other}]*${boundary || '$'}`, flags);\n\n/**\n * Create a sequence pattern from patterns.\n *\n * @param  {...Pattern} patterns\n */\nexport const all = (...patterns) => patterns.map(p => (p && p.exec ? p.source : p)).join('|');\n\n/// Symbols\n\nexport class Symbols extends Set {\n  static from(...sources) {\n    const Species = this || Symbols;\n    const symbols = (sources.length && Species.split(...sources)) || [];\n    return new Species(symbols);\n  }\n\n  static split(...sources) {\n    const Species = this || Symbols;\n    const symbols = [];\n    // TODO: Replace with sources.flat() for non-legacy\n    for (const source of [].concat(...sources)) {\n      source &&\n        (typeof source === 'string'\n          ? symbols.push(...source.split(/ +/))\n          : Symbol.iterator in source\n          ? symbols.push(...Species.split(...source))\n          : source['(symbols)'] && typeof source['(symbols)'] === 'string'\n          ? symbols.push(...Species.split(source['(symbols)']))\n          : null);\n    }\n    return symbols;\n  }\n\n  static inspect(symbol, depth, {stylize = String, compact = false} = {}) {\n    const type = typeof symbol;\n    return `${stylize(\n      type === 'symbol'\n        ? `Symbol(${symbol.description || ''})`\n        : type === 'string'\n        ? JSON.stringify(symbol).slice(1, -1)\n        : `${symbol}`,\n      type,\n    )}`;\n  }\n\n  get includes() {\n    Object.defineProperty(Symbols.prototype, 'includes', Object.getOwnPropertyDescriptor(Set.prototype, 'has'));\n    return this.has;\n  }\n  set includes(value) {\n    this.includes = (this.includes, value);\n  }\n\n  get(symbol) {\n    if (this.has(symbol)) return symbol;\n  }\n\n  [InspectSymbol](depth, {stylize = String, compact = false} = {}) {\n    try {\n      const depth = arguments[0] + 1;\n      const options = arguments[1];\n      let Species = (this && this.constructor) || Symbols;\n      const {inspect = (Species = Closures).inspect} = Species;\n      return `${(this && this.constructor && this.constructor.name) || 'Symbols'} ‹${Array.from(this.values())\n        .map(symbol => Species.inspect(symbol, depth, options))\n        .join('|')}›`;\n    } catch (exception) {\n      return super.toString(this);\n    }\n  }\n}\n/// Closures\n\nexport class Closure extends String {\n  constructor(opener, closer = opener) {\n    if (!opener || !closer) throw Error(`Cannot construct closure from \"${opener}\" … \"${closer}\"`);\n    super(`${opener}…${closer}`);\n    this.opener = opener;\n    this.closer = closer;\n  }\n\n  [InspectSymbol](depth, {stylize = String, compact = false} = {}) {\n    try {\n      const depth = arguments[0] + 1;\n      const options = arguments[1];\n      return `${(this && this.constructor && this.constructor.name) || 'Closure'} ‹${Closures.inspect(this)}›`;\n    } catch (exception) {\n      return `${this}`;\n    }\n  }\n}\n\nexport class Closures extends Map {\n  static get splitter() {\n    Object.defineProperty(Closures, 'splitter', {value: / *?([^ ]+…[^ ]+|[^ …]+) *?/});\n  }\n\n  static from(...sources) {\n    const Species = this || Closures;\n    const closures = (sources.length && Species.split(...sources)) || [];\n    return new Species(closures);\n  }\n  static split(...sources) {\n    const Species = this || Closures;\n    const Member = Species.Element || Closure;\n    const closures = [];\n    // TODO: Replace with sources.flat() for non-legacy\n    for (const source of [].concat(...sources)) {\n      if (!source) continue;\n      switch (typeof source) {\n        case 'object':\n          source instanceof Member\n            ? closures.push([source.opener, source])\n            : source instanceof Species\n            ? closures.push(...source)\n            : source['(closures)'] && typeof source['(closures)'] === 'string'\n            ? closures.push(...Closures.split(source['(closures)']))\n            : null;\n          break;\n        case 'string': {\n          for (const pair of source.split(Species.splitter || Closures.splitter)) {\n            if (!pair) continue;\n            const [opener, closer] = pair.split('…');\n            const closure = new Member(opener, closer);\n            closures.push([opener, closure]);\n          }\n          break;\n        }\n      }\n    }\n    return closures;\n  }\n\n  static inspect(closure, depth, {stylize = String, compact = false} = {}) {\n    let opener, openerType, closer, closerType;\n    return closure && 'opener' in closure && 'closer' in closure\n      ? `${stylize(\n          (openerType = typeof (opener = closure.opener)) === 'string' ? JSON.stringify(opener).slice(1, -1) : opener,\n          openerType,\n        )}\\u{25CC}${stylize(\n          (closerType = typeof (closer = closure.closer)) === 'string' ? JSON.stringify(closer).slice(1, -1) : closer,\n          closerType,\n        )}`\n      : stylize(`${closure}`, typeof closure);\n  }\n\n  get includes() {\n    Object.defineProperty(Closures.prototype, 'includes', Object.getOwnPropertyDescriptor(Map.prototype, 'has'));\n    return this.has;\n  }\n\n  set includes(value) {\n    this.includes = (this.includes, value);\n  }\n\n  [InspectSymbol](depth, {stylize = String, compact = false} = {}) {\n    try {\n      const depth = arguments[0] + 1;\n      const options = arguments[1];\n      let Species = (this && this.constructor) || Closures;\n      const {inspect = (Species = Closures).inspect} = Species;\n      return `${(this && this.constructor && this.constructor.name) || 'Closures'} ‹${Array.from(this.values())\n        .map(closure => Species.inspect(closure, depth, options))\n        .join('|')}›`;\n    } catch (exception) {\n      return super.toString(this);\n    }\n  }\n}\n\n/// TRAVERSING\n\nexport const previousTextFrom = (token, matcher) => {\n  const text = [];\n  if (matcher != null) {\n    if (matcher.test)\n      do token.text && text.push(token.text), (token = token.previous);\n      while (!token.text || !matcher.test(token.text));\n    else if (matcher.includes)\n      do token.text && text.push(token.text), (token = token.previous);\n      while (!token.text || !matcher.includes(token.text));\n    text.length && text.reverse();\n  }\n  return text.join('');\n};\n\n/// INDENTS\n\nexport const indenter = (indenting, tabs = 2) => {\n  let source = indenting;\n  const indent = new RegExp(raw`(?:\\t|${' '.repeat(tabs)})`, 'g');\n  const space = indent.source;\n  source = source.replace(/\\\\?(?=[\\(\\)\\:\\?\\[\\]])/g, '\\\\');\n  const [, lead, tail] = /^(\\s*.*?)(\\s*?)$/.exec(source);\n  return new RegExp(`^${lead.replace(indent, space)}(?:${tail.replace(indent, `${space}?`)})?`, 'm');\n};\n\n/** @typedef {string | RegExp} pattern */\n/** @typedef {SequenceExpression} sequence */\n/** @typedef {IdentifierExpression} pattern.identifier */\n","import {Symbols, Closures, identifier} from '../common/helpers.js';\n\nexport const css = Object.defineProperties(\n  ({syntax} = css.defaults) => ({\n    syntax,\n    comments: Closures.from('/*…*/'),\n    closures: Closures.from('{…} (…) […]'),\n    quotes: Symbols.from(`' \"`),\n    keywords: Symbols.from(css.KEYWORDS),\n    combinators: Symbols.from('--'),\n    operators: Symbols.from('> . : , - + / *'),\n    breakers: Symbols.from(';'),\n    patterns: {\n      maybeIdentifier: /^--\\S+$/,\n    },\n    matcher: /(\\n|\\s+)|(\\\\(?:(?:\\\\\\\\)*\\\\|[^\\\\\\s])?|\\/\\*|\\*\\/|\\(|\\)|\\[|\\]|\"|'|\\{|\\}|,|;|\\.|\\b:\\/\\/\\b|\\+|\\B-(?![a-z]*-)|\\*|\\/|>|:(?![-a-z:]))|#[0-9a-fA-F]{8}|#[0-9a-fA-F]{6}|#[0-9a-fA-F]{4}|#[0-9a-fA-F]{3}|::?[a-z][a-z-]+|@[a-z][a-z-]+|[-\\w]+|[^\\s\\n]/gi,\n    matchers: {\n      quote: /(\\n)|(\\\\(?:(?:\\\\\\\\)*\\\\|[^\\\\\\s])?|\\*\\/|`|\"|'|\\$\\{)/g,\n      comment: /(\\n)|(\\*\\/|\\b(?:[a-z]+\\:\\/\\/|\\w[\\w\\+\\.]*\\w@[a-z]+)\\S+|@[a-z]+)/gi,\n    },\n  }),\n  {\n    defaults: {value: {syntax: 'css'}},\n  },\n);\n\ncss.KEYWORDS = {\n  ['(symbols)']:\n    ':active additive-symbols ::after align-content align-items align-self all animation animation-delay animation-direction animation-duration animation-fill-mode animation-iteration-count animation-name animation-play-state animation-timing-function @annotation annotation attr ::backdrop backface-visibility background background-attachment background-blend-mode background-clip background-color background-image background-origin background-position background-repeat background-size ::before block-size blur border border-block border-block-color border-block-end border-block-end-color border-block-end-style border-block-end-width border-block-start border-block-start-color border-block-start-style border-block-start-width border-block-style border-block-width border-bottom border-bottom-color border-bottom-left-radius border-bottom-right-radius border-bottom-style border-bottom-width border-collapse border-color border-end-end-radius border-end-start-radius border-image border-image-outset border-image-repeat border-image-slice border-image-source border-image-width border-inline border-inline-color border-inline-end border-inline-end-color border-inline-end-style border-inline-end-width border-inline-start border-inline-start-color border-inline-start-style border-inline-start-width border-inline-style border-inline-width border-left border-left-color border-left-style border-left-width border-radius border-right border-right-color border-right-style border-right-width border-spacing border-start-end-radius border-start-start-radius border-style border-top border-top-color border-top-left-radius border-top-right-radius border-top-style border-top-width border-width bottom @bottom-center box-decoration-break box-shadow box-sizing break-after break-before break-inside brightness calc caption-side caret-color ch @character-variant character-variant @charset :checked circle clamp clear clip clip-path cm color color-adjust column-count column-fill column-gap column-rule column-rule-color column-rule-style column-rule-width column-span column-width columns conic-gradient content contrast counter-increment counter-reset counter-set @counter-style counters cross-fade cubic-bezier ::cue cursor :default deg :dir direction :disabled display dpcm dpi dppx drop-shadow element ellipse em :empty empty-cells :enabled env ex fallback filter :first :first-child ::first-letter ::first-line :first-of-type fit-content flex flex-basis flex-direction flex-flow flex-grow flex-shrink flex-wrap float :focus font @font-face font-family font-family font-feature-settings font-feature-settings @font-feature-values font-kerning font-language-override font-optical-sizing font-size font-size-adjust font-stretch font-stretch font-style font-style font-synthesis font-variant font-variant font-variant-alternates font-variant-caps font-variant-east-asian font-variant-ligatures font-variant-numeric font-variant-position font-variation-settings font-weight font-weight format fr :fullscreen gap grad grayscale grid grid-area grid-auto-columns grid-auto-flow grid-auto-rows grid-column grid-column-end grid-column-start grid-row grid-row-end grid-row-start grid-template grid-template-areas grid-template-columns grid-template-rows Hz hanging-punctuation height height @historical-forms :host :hover hsl hsla hue-rotate hyphens image image-orientation image-rendering image-set @import in :in-range :indeterminate inherit initial inline-size inset inset inset-block inset-block-end inset-block-start inset-inline inset-inline-end inset-inline-start :invalid invert isolation justify-content justify-items justify-self kHz @keyframes :lang :last-child :last-of-type leader :left left @left-bottom letter-spacing line-clamp line-break line-height linear-gradient :link list-style list-style-image list-style-position list-style-type local margin margin-block margin-block-end margin-block-start margin-bottom margin-inline margin-inline-end margin-inline-start margin-left margin-right margin-top ::marker mask mask-clip mask-composite mask-image mask-mode mask-origin mask-position mask-repeat mask-size mask-type matrix matrix3d max max-height max-height max-width max-width max-zoom @media min min-block-size min-height min-height min-inline-size min-width min-width min-zoom minmax mix-blend-mode mm ms @namespace negative :not :nth-child :nth-last-child :nth-last-of-type :nth-of-type object-fit object-position :only-child :only-of-type opacity opacity :optional order orientation @ornaments ornaments orphans :out-of-range outline outline-color outline-offset outline-style outline-width overflow overflow-wrap overflow-x overflow-y pad padding padding-block padding-block-end padding-block-start padding-bottom padding-inline padding-inline-end padding-inline-start padding-left padding-right padding-top @page page-break-after page-break-before page-break-inside paint pc perspective perspective perspective-origin place-content place-items place-self ::placeholder pointer-events polygon position prefix pt px quotes rad radial-gradient range :read-only :read-write rect rem repeat repeating-linear-gradient repeating-radial-gradient :required resize revert rgb rgba :right right @right-bottom :root rotate rotate rotate3d rotateX rotateY rotateZ row-gap saturate scale scale scale3d scaleX scaleY scaleZ :scope scroll-behavior scroll-margin scroll-margin-block scroll-margin-block-end scroll-margin-block-start scroll-margin-bottom scroll-margin-inline scroll-margin-inline-end scroll-margin-inline-start scroll-margin-left scroll-margin-right scroll-margin-top scroll-padding scroll-padding-block scroll-padding-block-end scroll-padding-block-start scroll-padding-bottom scroll-padding-inline scroll-padding-inline-end scroll-padding-inline-start scroll-padding-left scroll-padding-right scroll-padding-top scroll-snap-align scroll-snap-stop scroll-snap-type scrollbar-color scrollbar-width ::selection selector sepia shape-image-threshold shape-margin shape-outside skew skewX skewY ::slotted speak-as src steps @styleset styleset @stylistic stylistic suffix @supports @swash swash symbols symbols system tab-size table-layout :target target-counter target-counters target-text text-align text-align-last text-combine-upright text-decoration text-decoration-color text-decoration-line text-decoration-style text-decoration-thickness text-emphasis text-emphasis-color text-emphasis-position text-emphasis-style text-indent text-justify text-orientation text-overflow text-rendering text-shadow text-transform text-underline-offset text-underline-position top @top-center touch-action transform transform-box transform-origin transform-style transition transition-delay transition-duration transition-property transition-timing-function translate translate translate3d translateX translateY translateZ turn unicode-bidi unicode-range unset url user-zoom user-select user-drag -webkit-user-select -moz-user-select :valid var vertical-align vh @viewport visibility :visited vmax vmin vw white-space widows width width will-change word-break word-spacing word-wrap writing-mode z-index zoom -webkit-margin-start -webkit-margin-end -webkit-margin-before -webkit-margin-after -webkit-padding-start -webkit-padding-end -webkit-padding-before -webkit-padding-after -webkit-justify-items -webkit-justify-content -webkit-align-content -webkit-align-items -webkit-align-self -webkit-alt -webkit-animation -webkit-animation-delay -webkit-animation-direction -webkit-animation-duration -webkit-animation-fill-mode -webkit-animation-iteration-count -webkit-animation-name -webkit-animation-play-state -webkit-animation-timing-function -webkit-appearance -webkit-aspect-ratio -webkit-backdrop-filter -webkit-backface-visibility -webkit-backdrop-filter -webkit-backface-visibility -webkit-background-clip -webkit-background-composite -webkit-background-origin -webkit-background-size -webkit-border-after -webkit-border-after-color -webkit-border-after-style -webkit-border-after-width -webkit-border-before -webkit-border-before-color -webkit-border-before-style -webkit-border-before-width -webkit-border-bottom-left-radius -webkit-border-bottom-right-radius -webkit-border-end -webkit-border-end-color -webkit-border-end-style -webkit-border-end-width -webkit-border-fit -webkit-border-horizontal-spacing -webkit-border-image -webkit-border-radius -webkit-border-start -webkit-border-start-color -webkit-border-start-style -webkit-border-start-width -webkit-border-top-left-radius -webkit-border-top-right-radius -webkit-border-vertical-spacing -webkit-box-align -webkit-box-decoration-break -webkit-box-direction -webkit-box-flex -webkit-box-flex-group -webkit-box-lines -webkit-box-ordinal-group -webkit-box-orient -webkit-box-pack -webkit-box-reflect -webkit-box-shadow -webkit-box-sizing -webkit-clip-path -webkit-box-sizing -webkit-box-shadow -webkit-box-reflect -webkit-box-pack -webkit-box-reflect -webkit-box-shadow -webkit-box-sizing -webkit-clip-path -webkit-column-axis -webkit-column-break-after -webkit-column-break-before -webkit-column-break-inside -webkit-column-count -webkit-column-fill -webkit-column-gap -webkit-column-progression -webkit-column-rule -webkit-column-rule-color -webkit-column-rule-style -webkit-column-rule-width -webkit-column-span -webkit-column-width -webkit-columns -webkit-cursor-visibility -webkit-filter -webkit-flex -webkit-flex-basis -webkit-flex-direction -webkit-flex-flow -webkit-flex-grow -webkit-flex-shrink -webkit-flex-wrap -webkit-flex-shrink -webkit-flex-wrap -webkit-font-kerning -webkit-font-smoothing -webkit-hyphenate-character -webkit-hyphenate-limit-after -webkit-hyphenate-limit-before -webkit-hyphenate-limit-lines -webkit-hyphens -webkit-hyphenate-limit-lines -webkit-hyphenate-limit-before -webkit-hyphenate-limit-after -webkit-hyphenate-character -webkit-font-smoothing -webkit-hyphenate-character -webkit-hyphenate-limit-after -webkit-hyphenate-limit-before -webkit-hyphenate-limit-lines -webkit-hyphenate-limit-before -webkit-hyphenate-limit-after -webkit-hyphenate-character -webkit-hyphenate-limit-after -webkit-hyphenate-character -webkit-font-smoothing -webkit-font-kerning -webkit-flex-wrap -webkit-font-kerning -webkit-font-smoothing -webkit-hyphenate-character -webkit-hyphenate-limit-after -webkit-hyphenate-limit-before -webkit-hyphenate-limit-lines -webkit-hyphens -webkit-initial-letter -webkit-hyphens -webkit-hyphenate-limit-lines -webkit-hyphenate-limit-before -webkit-hyphenate-limit-after -webkit-hyphenate-character -webkit-font-smoothing -webkit-font-kerning -webkit-flex-wrap -webkit-flex-shrink -webkit-flex-grow -webkit-flex-flow -webkit-flex-direction -webkit-flex-flow -webkit-flex-grow -webkit-flex-shrink -webkit-flex-wrap -webkit-font-kerning -webkit-font-smoothing -webkit-hyphenate-character -webkit-hyphenate-limit-after -webkit-hyphenate-limit-before -webkit-hyphenate-limit-lines -webkit-hyphens -webkit-initial-letter -webkit-justify-content -webkit-justify-items -webkit-line-align -webkit-line-box-contain -webkit-line-align -webkit-line-box-contain -webkit-line-break -webkit-line-clamp -webkit-line-break -webkit-line-box-contain -webkit-line-align -webkit-line-align -webkit-line-align -webkit-line-align -webkit-line-align -webkit-line-align -webkit-text-size-adjust',\n};\n","import {Closures, Symbols, raw} from '../common/helpers.js';\n\nexport const html = Object.defineProperties(\n  ({syntax} = html.defaults) => {\n    const html = {\n      syntax,\n      keywords: Symbols.from('DOCTYPE doctype'),\n      comments: Closures.from('<!--…-->'),\n      closures: Closures.from('<?…?> <!…> <…/> </…> <…>'),\n      quotes: [],\n      patterns: {\n        maybeKeyword: /^[a-z](\\w*)$/i,\n        closeTag: /<\\/\\w[^<>{}]*?>/g,\n        // maybeIdentifier: /^(?:(?:[a-z][\\-a-z]*)?[a-z]+\\:)?(?:[a-z][\\-a-z]*)?[a-z]+$/,\n      },\n      matcher: /(\\n|\\s+)|(\"|'|=|&#x?[a-f0-9]+;|&[a-z]+;|\\/?>|<\\?|\\?>|<!--|-->|<[\\/\\!]?(?=[a-z]+\\:?[a-z\\-]*[a-z]|[a-z]+))/gi,\n      matchers: {\n        quote: /(\\n)|(\\\\(?:(?:\\\\\\\\)*\\\\|[^\\\\\\s])|\"|')/g,\n        comment: /(\\n)|(-->)/g,\n      },\n    };\n\n    const DOCTAGS = Symbols.from('SCRIPT STYLE');\n    const TAG = /^[a-z]+$/i;\n    // TODO: Check if custom/namespace tags ever need special close logic\n    // const TAGLIKE = /^(?:(?:[a-z][\\-a-z]*)?[a-z]+\\:)?(?:[a-z][\\-a-z]*)?[a-z]+$/i;\n\n    const HTMLTagClosure = html.closures.get('<');\n\n    HTMLTagClosure.patterns = html.patterns;\n\n    HTMLTagClosure.close = (next, state, context) => {\n      let parent = next && next.parent;\n      // TODO: Fix parent broken when HTMLTagClosure.punctuation {'='}\n      //       This is a temporary workaround (maybe)\n      if (parent.text !== '<') {\n        let previous = next.previous;\n        while (previous && !(previous.text === '<' && previous.punctuator === 'opener')) previous = previous.previous;\n        if (previous) next.parent = parent = previous;\n      }\n      const first = parent && parent.next;\n      const tag = first && first.text && TAG.test(first.text) && first.text.toUpperCase();\n\n      if (tag && DOCTAGS.includes(tag)) {\n        let {source, index} = state;\n        const $$matcher = html.patterns.closeTag;\n\n        let match;\n        $$matcher.lastIndex = index;\n\n        // TODO: Check if `<script>`…`</SCRIPT>` is still valid!\n        const $$closer = new RegExp(raw`^<\\/(?:${first.text.toLowerCase()}|${tag})\\b`);\n\n        let syntax = (tag === 'STYLE' && 'css') || '';\n\n        if (!syntax) {\n          const openTag = source.slice(parent.offset, index);\n          const match = /\\stype=.*?\\b(.+?)\\b/.exec(openTag);\n          syntax = tag === 'SCRIPT' && (!match || !match[1] || /^module$|javascript/i.test(match[1])) ? 'es' : '';\n        }\n\n        while ((match = $$matcher.exec(source))) {\n          if ($$closer.test(match[0])) {\n            if (syntax) {\n              return {offset: index, index: match.index, syntax};\n            } else {\n              const offset = index;\n              const text = source.slice(offset, match.index - 1);\n              state.index = match.index;\n              return [{text, offset, previous: next, parent}];\n            }\n          }\n        }\n      }\n    };\n    HTMLTagClosure.quotes = Symbols.from(`' \"`);\n    HTMLTagClosure.closer = /\\/?>/;\n    HTMLTagClosure.punctuation = {'=': 'assigner'};\n\n    return html;\n  },\n  {\n    defaults: {value: {syntax: 'html', aliases: ['htm']}},\n  },\n);\n","import {previousTextFrom, indenter, Symbols, Closures, sequence, escape, all, raw} from '../common/helpers.js';\n\nexport const markdown = Object.defineProperties(\n  ({syntax} = defaults, {html}) => {\n    const EMBEDDED = true;\n    const matcher = new RegExp(markdown.MATCHER.source, markdown.MATCHER.flags);\n\n    const mode = {\n      syntax,\n      comments: Closures.from('<!--…-->'),\n      quotes: [],\n      operators: markdown.OPERATORS,\n      closures: Closures.from(html.closures, markdown.CLOSURES),\n      matcher: matcher,\n      spans: Closures.from('``…`` `…`'),\n      matchers: {comment: /(\\n)|(-->)/g},\n    };\n\n    const open = (parent, state, grouper) => {\n      const {source, index: start} = state;\n      const fence = parent.text;\n      const fencing = previousTextFrom(parent, '\\n');\n      const indenting = fencing.slice(fencing.indexOf('\\n') + 1, -fence.length) || '';\n      let end = source.indexOf(`\\n${fencing}`, start);\n      const INDENT = (indenting && indenter(indenting)) || /^/m;\n      const CLOSER = new RegExp(raw`^${INDENT.source.slice(1) || ''}${fence}`, 'mg');\n\n      CLOSER.lastIndex = start;\n      let closerMatch = CLOSER.exec(source);\n      if (closerMatch && closerMatch.index >= start) {\n        end = closerMatch.index;\n      } else {\n        const FENCE = new RegExp(raw`^[\\>\\|\\s]*${fence}`, 'mg');\n        FENCE.lastIndex = start;\n        const fenceMatch = FENCE.exec(source);\n        if (fenceMatch && fenceMatch.index >= start) {\n          end = fenceMatch.index;\n        } else return;\n      }\n\n      if (end > start) {\n        let offset = start;\n        let text, head, lines;\n\n        const body = source.slice(start, end) || '';\n        const tokens = [];\n        tokens.end = end;\n        if (!EMBEDDED) {\n          text = body;\n          tokens.push({text, type: 'code', offset, parent});\n          offset += body.length;\n        } else {\n          [head, ...lines] = body.split(/\\r?(\\n)\\r?/g);\n          if (head) {\n            tokens.push({text: head, type: 'comment', offset, parent}), (offset += head.length);\n          }\n          for (const line of lines) {\n            if (line === '\\n') {\n              text = line;\n              tokens.push({text, type: 'whitespace', offset, parent}), (offset += text.length);\n            } else {\n              const [indent] = INDENT.exec(line) || '';\n              const inset = (indent && indent.length) || 0;\n              if (inset) {\n                for (const text of indent.split(/(\\s+)/g)) {\n                  if (!text) continue;\n                  const type = (text.trim() && 'sequence') || 'whitespace';\n                  tokens.push({text, type, offset, parent});\n                  offset += text.length;\n                }\n                text = line.slice(inset) || '';\n              } else {\n                text = line;\n              }\n              if (text) {\n                tokens.push({text, type: 'code', offset, parent}), (offset += text.length);\n              }\n            }\n          }\n        }\n\n        if (tokens.length) {\n          const last = tokens[tokens.length - 1];\n          last.text || tokens.pop();\n          return tokens;\n        }\n      }\n    };\n\n    {\n      const quotes = html.closures.get('<').quotes;\n      for (const opener of ['```', '~~~']) {\n        const FenceClosure = mode.closures.get(opener);\n        if (FenceClosure) {\n          FenceClosure.matcher = new RegExp(raw`/(\\s*\\n)|(${opener}(?=\\s|$)|^(?:[\\s>|]*\\s)?\\s*)|.*$`, 'gm');\n          FenceClosure.quotes = quotes;\n          FenceClosure.open = open;\n        }\n      }\n    }\n\n    return mode;\n  },\n  {\n    defaults: {get: () => ({...markdown.DEFAULTS})},\n  },\n);\n\nDefinitions: {\n  Defaults: {\n    markdown.DEFAULTS = {syntax: 'markdown', aliases: ['md'], requires: ['html']};\n  }\n\n  markdown.BLOCK = '```…``` ~~~…~~~';\n  markdown.INLINE = '[…] (…)'; // *…* **…** _…_ __…__ ~…~ ~~…~~\n  markdown.CLOSURES = `${markdown.BLOCK} ${markdown.INLINE}`;\n\n  // Partials are first character used in production forms (like `###`)\n  //   which need to be properly typed by the tokenizer\n  markdown.PARTIALS = Symbols.from(raw`< # >`);\n\n  // Punctuation is used to define both ESCAPES and OPERATORS which\n  //   requires the fine-grained intersection that excludes partials.\n  markdown.PUNCTUATION = Symbols.from(raw`< # > ! \" $ % & ' ( ) * + , - . / : ; = ? @ [ \\ ] ^ _ ${'`'} { | } ~`);\n\n  // Operators are productions and their escaped forms.\n  markdown.OPERATORS = Symbols.from(\n    raw`** * ~~ ~  __ _ ###### ##### #### ### ## # [ ] ( ) ${[...markdown.PUNCTUATION].map(s => `\\\\${s.repeat(2)} ${s.repeat(2)} \\\\${s}`).join(' ')}`,\n  );\n\n  markdown.MATCHER = sequence`${all(\n    sequence`(${(markdown.WHITESPACE = /^\\s+|\\s+$|\\n+/)})`,\n    sequence`(${all(\n      (markdown.ESCAPES = sequence`${all(\n        ...[...markdown.PUNCTUATION].map(s => raw`\\\\${escape(s).repeat(2)}|\\\\${escape(s)}`),\n      )}|\\\\.${'/gu'}`),\n      (markdown.ENTITIES = /&#x?[a-f0-9]+;|&[a-z]+;/u),\n      (markdown.INLINES = /((?:\\b|\\B)[*~]{1,2}|[*~]{1,2}(?:\\b|\\B)|\\b_{1,2}|_{1,2}\\b)/u),\n      (markdown.RULES = /(?:[-]{2,}|[=]{2,})(?=\\s*$)/u),\n      (markdown.BLOCKS = /(?:\\B#{1,6}|-|\\b\\d+\\.|\\b[a-z]\\.|\\b[ivx]+\\.)(?=\\s+\\S)/u),\n      (markdown.TYPOGRAPHS = /\\B–(?= )|\"|'|=/u),\n      (markdown.TAGS = /\\/>|<\\?|\\?>|<!--|-->|<[/!]?(?=[a-z]+:?[-a-z]*[a-z]|[a-z]+)/u),\n      (markdown.BRACKETS = /<|>|\\(|\\)|\\[|\\]/u),\n      (markdown.FENCES = /(?:\\x60{3,}|\\x7E{3,})(?=\\b| |$)/u),\n      (markdown.SPANS = /(``?(?![`\\n]))[^\\n]*?[^\\\\`\\n]\\4/),\n    )})`,\n    (markdown.INDICIES = /\\b(?:[\\da-zA-Z]+\\.)+[\\da-zA-Z]+\\.?/u),\n    (markdown.DECIMAL = /[-+]?\\d+(?:,\\d{3})*(?:\\.\\d+)?|[-+]?\\d*\\.\\d+/u),\n    (markdown.EXPONENTIAL = /\\d+[eE]-?\\d+|\\d+\\.\\d+[eE]-?\\d+/u),\n    (markdown.FRAGMENTS = /\\b[^\\\\\\n\\s\\][)(><&`\"*~]*[^\\\\\\n\\s\\][)(><&`\"*~_]\\b|[^\\\\\\n\\s\\][)(><&`\"*~]+?(?=__?\\b)/),\n  )}${'/guim'}`;\n}\n","import {raw} from './helpers.js';\n\nexport const patterns = {\n  /** Basic latin Keyword like symbol (inteded to be extended) */\n  // maybeKeyword: /^[a-z]+$/i,\n};\n\n/** Entities used to construct patterns. */\nexport const entities = {\n  es: {\n    IdentifierStart: raw`_$\\p{ID_Start}`,\n    IdentifierPart: raw`_$\\u200c\\u200d\\p{ID_Continue}\\u034f`,\n  },\n};\n\n/** Interoperability (for some browsers)  TODO: Simplify */\n(Ranges => {\n  const transforms = [];\n\n  if (!supports(raw`\\p{ID_Start}`, 'u')) {\n    const UnicodePropertyEscapes = /\\\\p{ *(\\w+) *}/g;\n    UnicodePropertyEscapes.replace = (m, propertyKey) => {\n      if (propertyKey in Ranges) return Ranges[propertyKey].toString();\n      throw RangeError(`Cannot rewrite unicode property \"${propertyKey}\"`);\n    };\n    transforms.push(expression => {\n      let flags = expression && expression.flags;\n      let source = expression && `${expression.source || expression || ''}`;\n      source &&\n        UnicodePropertyEscapes.test(source) &&\n        (source = source.replace(UnicodePropertyEscapes, UnicodePropertyEscapes.replace));\n      return (flags && new RegExp(source, flags)) || source;\n    });\n  }\n\n  if (!transforms.length) return;\n\n  for (const key in entities) {\n    const sources = entities[key];\n    const changes = {};\n    for (const id in sources) {\n      let source = sources[id];\n      if (!source || typeof source !== 'string') continue;\n      for (const transform of transforms) source = transform(source);\n      !source || source === sources[id] || (changes[id] = source);\n    }\n    Object.assign(sources, changes);\n  }\n\n  // prettier-ignore\n  function supports() {try {return !!RegExp(... arguments)} catch (e) { }}\n})({\n  ID_Start: raw`a-zA-Z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7b9\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab65\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc`,\n  ID_Continue: raw`a-zA-Z0-9\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7b9\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab65\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f`,\n});\n","import {Closures, Symbols, identifier, sequence, all} from '../common/helpers.js';\nimport {patterns, entities} from '../common/patterns.js';\n\nexport const javascript = Object.defineProperties(\n  ({syntax} = defaults) => ({\n    syntax,\n    comments: Closures.from(javascript.COMMENTS),\n    quotes: Symbols.from(javascript.QUOTES),\n    closures: Closures.from(javascript.CLOSURES),\n    spans: {'`': Closures.from(javascript.SPANS['`'])},\n    keywords: Symbols.from(javascript.KEYWORDS),\n    assigners: Symbols.from(javascript.ASSIGNERS),\n    combinators: Symbols.from(javascript.COMBINATORS),\n    nonbreakers: Symbols.from(javascript.NONBREAKERS),\n    operators: Symbols.from(javascript.OPERATORS),\n    breakers: Symbols.from(javascript.BREAKERS),\n    patterns: {\n      ...patterns,\n      maybeIdentifier: identifier(entities.es.IdentifierStart, entities.es.IdentifierPart),\n      maybeKeyword: /^[a-z][a-zA-Z]+$/,\n      segments: {\n        regexp: /^\\/(?![\\n*+/?])[^\\n]*[^\\\\\\n]\\//,\n      },\n    },\n    matcher: sequence`(\\n|\\s+)|(${all(\n      javascript.REGEXPS,\n      javascript.COMMENTS,\n      javascript.QUOTES,\n      javascript.CLOSURES,\n      ...javascript.PUNCTUATORS,\n    )})`,\n    matchers: {\n      \"'\": /(\\n)|(')|(\\\\.)/g,\n      '\"': /(\\n)|(\")|(\\\\.)/g,\n      '`': /(\\n)|(`|\\$\\{)|(\\\\.)/g,\n      quote: /(\\n)|(`|\"|'|\\$\\{)|(\\\\.)/g,\n      comment: /(\\n)|(\\*\\/|\\b(?:[a-z]+\\:\\/\\/|\\w[\\w+.]*\\w@[a-z]+)\\S+|@[a-z]+)/gi,\n    },\n  }),\n  {\n    defaults: {get: () => ({...javascript.DEFAULTS})},\n  },\n);\n\njavascript.DEFAULTS = {syntax: 'javascript', aliases: ['js', 'es', 'ecmascript']};\n\njavascript.REGEXPS = /\\/(?=[^*/\\n][^\\n]*\\/(?:[a-z]+\\b|)(?:[ \\t]+[^\\n\\s\\(\\[\\{\\w]|[.\\[;,]|[ \\t]*[)\\]};,\\n]|\\n|$))(?:[^\\\\\\/\\n\\t\\[]+|\\\\[^\\n]|\\[(?:\\\\[^\\n]|[^\\\\\\n\\t\\]]+)*?\\][+*]?\\??)*\\/(?:[a-z]+\\b|)/g;\n\njavascript.COMMENTS = /\\/\\/|\\/\\*|\\*\\/|^\\#\\!.*\\n|<!--/g;\njavascript.COMMENTS['(closures)'] = '//…\\n /*…*/ <!--…\\n';\n\njavascript.QUOTES = /`|\"|'/g;\njavascript.QUOTES['(symbols)'] = `' \" \\``;\n\njavascript.CLOSURES = /\\{|\\}|\\(|\\)|\\[|\\]/g;\njavascript.CLOSURES['(closures)'] = '{…} (…) […]';\n\njavascript.SPANS = {'`': {['(closures)']: '${…}'}};\n\njavascript.KEYWORDS = {\n  ['(symbols)']:\n    // 'abstract enum interface package namespace declare type module public protected ' +\n    'arguments as async await break case catch class export const continue private debugger default delete do else export extends finally for from function get if import in instanceof let new of return set static super switch this throw try typeof var void while with yield',\n};\n\njavascript.PUNCTUATORS = [\n  /,|;|\\.\\.\\.|\\.|:|\\?|=>/,\n  /\\+\\+|\\+=|\\+|--|-=|-|\\*\\*=|\\*\\*|\\*=|\\*|\\/=|\\//,\n  /&&|&=|&|\\|\\||\\|=|\\||%=|%|\\^=|\\^|~=|~/,\n  /<<=|<<|<=|<|>>>=|>>>|>>=|>>|>=|>/,\n  /!==|!=|!|===|==|=/,\n];\n\njavascript.ASSIGNERS = {['(symbols)']: '= += -= *= /= **= %= &= |= <<= >>= >>>= ^= ~='};\n\njavascript.COMBINATORS = {['(symbols)']: '=== == + - * / ** % & && | || ! !== != > < >= <= => >> << >>> ^ ~'};\njavascript.NONBREAKERS = {['(symbols)']: '.'};\njavascript.OPERATORS = {['(symbols)']: '++ -- ... ? :'};\njavascript.BREAKERS = {['(symbols)']: ', ;'};\n","﻿import {javascript} from '../javascript/javascript-grammar.js';\nimport {Symbols, sequence, raw, all} from '../common/helpers.js';\n\nexport const typescript = Object.defineProperties(\n  ({syntax} = typescript.defaults, {javascript}) => ({\n    ...javascript,\n    keywords: Symbols.from(typescript.KEYWORDS),\n  }),\n  {\n    defaults: {get: () => ({...typescript.DEFAULTS})},\n  },\n);\n\nDefinitions: {\n  Defaults: {\n    typescript.DEFAULTS = {syntax: 'typescript', aliases: ['ts'], requires: [javascript.defaults.syntax]};\n  }\n  typescript.KEYWORDS = {\n    ['(symbols)']: `abstract enum interface namespace declare type module private public protected ${\n      javascript.KEYWORDS['(symbols)']\n    }`,\n  };\n}\n","import {javascript} from './javascript-grammar.js';\nimport {Symbols, sequence, raw, all} from '../common/helpers.js';\n\nexport const mjs = Object.defineProperties(\n  ({syntax} = mjs.defaults, {javascript: {quotes, closures, spans, matchers}}) => ({\n    syntax,\n    keywords: Symbols.from('import export default'),\n    quotes,\n    closures,\n    spans,\n    matcher: javascript.extended.MJS,\n    matchers: {quote: matchers.quote, closure: javascript.extended.CLOSURE},\n  }),\n  {\n    defaults: {get: () => ({...mjs.DEFAULTS})},\n  },\n);\n\nexport const cjs = Object.defineProperties(\n  ({syntax} = cjs.defaults, {javascript: {quotes, closures, spans, matchers}}) => ({\n    syntax,\n    keywords: Symbols.from('import module exports require'),\n    quotes,\n    closures,\n    spans,\n    matcher: javascript.extended.CJS,\n    matchers: {quote: matchers.quote, closure: javascript.extended.CLOSURE},\n  }),\n  {\n    defaults: {get: () => ({...cjs.DEFAULTS})},\n  },\n);\n\nexport const esx = Object.defineProperties(\n  ({syntax} = esx.defaults, {javascript: {quotes, closures, spans, matchers}, mjs, cjs}) => ({\n    syntax,\n    keywords: Symbols.from(mjs.keywords, cjs.keywords),\n    quotes,\n    closures,\n    spans,\n    matcher: javascript.extended.ESX,\n    matchers: {quote: matchers.quote, closure: javascript.extended.CLOSURE},\n  }),\n  {\n    defaults: {get: () => ({...esx.DEFAULTS})},\n  },\n);\n\nmjs.DEFAULTS = {syntax: 'mjs', aliases: ['esm'], requires: [javascript.defaults.syntax]};\ncjs.DEFAULTS = {syntax: 'cjs', requires: [javascript.defaults.syntax]};\nesx.DEFAULTS = {syntax: 'esx', requires: [javascript.defaults.syntax, 'cjs', 'mjs']};\n\njavascript.extended = {};\n// TODO: Undo $ matching once fixed\njavascript.extended.QUOTES = /`|\"(?:[^\\\\\"]+|\\\\.)*(?:\"|$)|'(?:[^\\\\']+|\\\\.)*(?:'|$)/g;\njavascript.extended.COMMENTS = /\\/\\/.*(?:\\n|$)|\\/\\*[^]*?(?:\\*\\/|$)|^\\#\\!.*\\n|<!--/g;\njavascript.extended.STATEMENTS = all(\n  javascript.extended.QUOTES,\n  javascript.CLOSURES,\n  javascript.REGEXPS,\n  javascript.extended.COMMENTS,\n);\njavascript.extended.BLOCKLEVEL = sequence`(\\n|\\s+)|(${javascript.extended.STATEMENTS})`;\njavascript.extended.TOPLEVEL = sequence`(\\n|\\s+)|(${javascript.extended.STATEMENTS})`;\njavascript.extended.CLOSURE = sequence`(\\n+)|(${javascript.extended.STATEMENTS})`;\njavascript.extended.MJS = sequence`${javascript.extended.TOPLEVEL}|\\bexport\\b|\\bimport\\b`;\njavascript.extended.CJS = sequence`${javascript.extended.BLOCKLEVEL}|\\bexports\\b|\\bmodule.exports\\b|\\brequire\\b|\\bimport(?=\\(|\\.)`;\njavascript.extended.ESX = sequence`${javascript.extended.BLOCKLEVEL}|\\bexports\\b|\\bimport\\b|\\bmodule.exports\\b|\\brequire\\b`;\n","export * from './tokenizer.experimental.js';\nimport {Parser} from './tokenizer.experimental.js';\nimport {modes} from './extensions/extensions.js';\n\nexport {modes};\nexport default (() => new Parser({url: import.meta.url, modes}))();\n"],"names":[],"mappings":"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"}