{"version":3,"file":"dom.mjs","sources":["../../../packages/pseudom/lib/pseudo.mjs","../../../packages/pseudom/lib/native.mjs","../../../packages/@smotaal/tokenizer/node_modules/pseudom/pseudom.js","../../../packages/@smotaal/tokenizer/extensions/resync.js","../../../packages/@smotaal/tokenizer/extensions/dom.js"],"sourcesContent":["const {assign, defineProperty} = Object;\n\nexport const document = void null;\n\nexport class Node {\n  get children() {\n    return defineProperty(this, 'children', {value: new Set()}).children;\n  }\n  get childElementCount() {\n    return (this.hasOwnProperty('children') && this.children.size) || 0;\n  }\n  get textContent() {\n    return (\n      (this.hasOwnProperty('children') && this.children.size && [...this.children].join('')) || ''\n    );\n  }\n  set textContent(text) {\n    this.hasOwnProperty('children') && this.children.size && this.children.clear();\n    text && this.children.add(new String(text));\n  }\n  appendChild(element) {\n    return element && this.children.add(element), element;\n  }\n  append(...elements) {\n    if (elements.length) for (const element of elements) element && this.children.add(element);\n  }\n  removeChild(element) {\n    element &&\n      this.hasOwnProperty('children') &&\n      this.children.size &&\n      this.children.delete(element);\n    return element;\n  }\n  remove(...elements) {\n    if (elements.length && this.hasOwnProperty('children') && this.children.size)\n      for (const element of elements) element && this.children.delete(element);\n  }\n}\n\nexport class Element extends Node {\n  get innerHTML() {\n    return this.textContent;\n  }\n  set innerHTML(text) {\n    this.textContent = text;\n  }\n  get outerHTML() {\n    const {className, tag, innerHTML} = this;\n    return `<${tag}${(className && ` class=\"${className}\"`) || ''}>${innerHTML || ''}</${tag}>`;\n  }\n  toString() {\n    return this.outerHTML;\n  }\n  toJSON() {\n    return this.toString();\n  }\n}\n\nexport class DocumentFragment extends Node {\n  toString() {\n    return this.textContent;\n  }\n  toJSON() {\n    return (this.childElementCount && [...this.children]) || [];\n  }\n  [Symbol.iterator]() {\n    return ((this.childElementCount && this.children) || '')[Symbol.iterator]();\n  }\n}\n\nexport class Text extends String {\n  toString() {\n    return encodeEntities(super.toString());\n  }\n}\n\nexport const createElement = (tag, properties, ...children) => {\n  const element = assign(new Element(), {\n    tag,\n    className: (properties && properties.className) || '',\n    properties,\n  });\n  children.length && defineProperty(element, 'children', {value: new Set(children)});\n  return element;\n};\n\nexport const createText = (content = '') => new Text(content);\nexport const encodeEntity = entity => `&#${entity.charCodeAt(0)};`;\nexport const encodeEntities = string => string.replace(/[\\u00A0-\\u9999<>\\&]/gim, encodeEntity);\nexport const createFragment = () => new DocumentFragment();\n","export const {document, Element, Node, Text, DocumentFragment} =\n  'object' === typeof self && (self || 0).window === self && self;\n\nexport const {createElement, createText, createFragment} = {\n  createElement: (tag, properties, ...children) => {\n    const element = document.createElement(tag);\n    properties && Object.assign(element, properties);\n    if (!children.length) return element;\n    if (element.append) {\n      while (children.length > 500) element.append(...children.splice(0, 500));\n      children.length && element.append(...children);\n    } else if (element.appendChild) {\n      for (const child of children) element.appendChild(child);\n    }\n    return element;\n  },\n\n  createText: (content = '') => document.createTextNode(content),\n\n  createFragment: () => document.createDocumentFragment(),\n};\n","import * as pseudo from './lib/pseudo.js';\nimport * as dom from './lib/native.js';\n\n// TEST: Trace for ESM testing\ntypeof process === 'object' && console.info('[ESM]: %o', import.meta.url);\n\nexport const native = dom.document && dom;\nexport const {createElement, createText, createFragment} = native || pseudo;\nexport {pseudo};\n","﻿//@ts-check\n/// <reference lib=\"esnext.asynciterable\" />\n\nconst VOID = Symbol('[[Void]]');\n\n/**\n * @template T\n * @typedef {Promise<T> | T} async\n */\n\n/**\n * @template T\n * @typedef {{next(): async<IteratorResult<async<T>>>}} iterator\n */\n\n/**\n * @template T\n * @typedef {iterator<T> | {[Symbol.iterator](): iterator<T>}  | {[Symbol.asyncIterator](): iterator<T>}} iterable\n */\n\n/**\n * @template T, U\n * @param {iterable<T>} iterable\n * @param {(value: T) => U} ƒ\n */\nexport async function each(iterable, ƒ) {\n  const iterator =\n    (iterable && ('next' in iterable && typeof iterable.next === 'function' && iterable)) ||\n    ((Symbol.asyncIterator in iterable && iterable[Symbol.asyncIterator]()) ||\n      (Symbol.iterator in iterable && iterable[Symbol.iterator]()));\n  try {\n    if (iterator || typeof iterator.next === 'function') {\n      let result, done;\n      while (!done && (result = await iterator.next())) {\n        await ƒ(await result.value);\n        done = result.done;\n      }\n    }\n  } finally {\n    iterator &&\n      iterable !== iterator &&\n      'return' in iterator &&\n      typeof iterator.return === 'function' &&\n      iterator.return();\n  }\n}\n\n// export async function next(iterator, previous, received, done) {\n//   let result, value;\n//   !previous || (await previous);\n//   const next = done ? 'return' : 'next';\n//   !(iterator && next in iterator && typeof iterator[next] === 'function') ||\n//     !((result = received === VOID ? iterator[next]() : iterator[next](received)) && (result = await result)) ||\n//     ('done' in result && (done = !!(await result.done)), 'value' in result && (value = await result.value));\n//   return {value, done: !!done};\n// }\n\n// export const AsyncIterator = (() => {\n//   const Done = Symbol('[[Done]]');\n//   const Result = Symbol('[[Result]]');\n//   const Iterator = Symbol('[[Iterator]]');\n//   const DONE = Object.freeze(Object.seal({done: true, value: undefined}));\n//   const VOID = Symbol('[[Void]]');\n//   const EMPTY = [];\n//   const reject = async reason => ({value: Promise.reject(reason), done: true});\n//   const next = async (iterator, previous, received, done) => {\n//     let result, value;\n//     !previous || (await previous);\n//     const next = done ? 'return' : 'next';\n//     !(iterator && next in iterator && typeof iterator[next] === 'function') ||\n//       !((result = received === VOID ? iterator[next]() : iterator[next](received)) && (result = await result)) ||\n//       ('done' in result && (done = !!(await result.done)), 'value' in result && (value = await result.value));\n//     return {value, done: !!done};\n//   };\n\n//   /**\n//    * @template T\n//    * @implements {AsyncIterableIterator<T>}\n//    */\n//   class AsyncIterator {\n//     /** @param {IterableIterator<T> | AsyncIterableIterator<T>} [iterator] */\n//     constructor(iterator) {\n//       Object.defineProperty(this, Iterator, {\n//         value:\n//           (iterator &&\n//             (iterator[Iterator] ||\n//               (Symbol.iterator in iterator && iterator[Symbol.iterator]()) ||\n//               (Symbol.asyncIterator in iterator && iterator[Symbol.asyncIterator]()))) ||\n//           EMPTY[Symbol.iterator](),\n//       });\n//     }\n\n//     [Symbol.asyncIterator]() {\n//       return this;\n//     }\n\n//     /** @param {T} [value] @returns {Promise<IteratorResult<T>>} */\n//     async next(value) {\n//       let result;\n//       return this[Done]\n//         ? this[Result] || DONE\n//         : ((this[Done] = (await (result = this[Result] = next(\n//             this[Iterator],\n//             this[Result],\n//             arguments.length ? value : VOID,\n//           ))).done),\n//           result);\n//     }\n\n//     /**\n//      * @param {any} [value]\n//      * @returns {Promise<IteratorResult>}\n//      */\n//     async return(value) {\n//       return this[Done]\n//         ? this[Result] || DONE\n//         : (this[Result] = next(this[Iterator], null, arguments.length ? value : VOID, (this[Done] = true)));\n//     }\n\n//     /**\n//      * @param {any} error\n//      * @returns {Promise<IteratorResult>}\n//      */\n//     async throw(error) {\n//       return this[Done] ? this[Result] || DONE : ((this[Done] = true), (this[Result] = reject(error)));\n//     }\n//   }\n\n//   return AsyncIterator;\n// })();\n\n// const x = new AsyncIterator([1]);\n// const y = x[Symbol.asyncIterator]();\n\n// export const async = {\n//   each: async (iterable, ƒ) => {\n\n//   }\n// };\n\n//  * @param {AsyncIterableIterator<T> | AsyncIterator<T>} iterable\n","import * as dom from '../node_modules/pseudom/pseudom.js';\nimport {each} from './resync.js';\n\n/// OPTIONS\n/** The tag name of the element to use for rendering a token. */\nconst SPAN = 'span';\n\n/** The class name of the element to use for rendering a token. */\nconst CLASS = 'markup';\n\n/** Uses lightweight proxy objects that can be serialized into HTML text */\nconst HTML_MODE = true;\n/// INTERFACE\n\nexport const renderers = {};\n\nexport function* renderer(tokens, tokenRenderers = renderers) {\n  for (const token of tokens) {\n    const {type = 'text', text, punctuator, breaks} = token;\n    const tokenRenderer =\n      (punctuator && (tokenRenderers[punctuator] || tokenRenderers.operator)) ||\n      (type && tokenRenderers[type]) ||\n      (text && tokenRenderers.text);\n    const element = tokenRenderer && tokenRenderer(text, token);\n    element && (yield element);\n  }\n}\n\nexport async function render(tokens, fragment) {\n  let logs, template, first, elements;\n  try {\n    fragment || (fragment = Fragment());\n    logs = fragment.logs || (fragment.logs = []);\n    elements = renderer(tokens);\n    if ((first = await elements.next()) && 'value' in first) {\n      template = Template();\n      if (!native && template && 'textContent' in fragment) {\n        logs.push(`render method = 'text' in template`);\n        const body = [first.value];\n        first.done || (await each(elements, element => body.push(element)));\n        template.innerHTML = body.join('');\n        fragment.appendChild(template.content);\n      } else if ('push' in fragment) {\n        logs.push(`render method = 'push' in fragment`);\n        fragment.push(first.value);\n        first.done || (await each(elements, element => fragment.push(element)));\n      } else if ('append' in fragment) {\n        logs.push(`render method = 'append' in fragment`);\n        fragment.append(first.value);\n        first.done || (await each(elements, element => fragment.append(element)));\n      }\n    }\n    return fragment;\n  } finally {\n    template && (template.innerHTML = '');\n    template = fragment = logs = elements = first = null;\n  }\n}\n\nexport const supported = !!dom.native;\nexport const native = !HTML_MODE && supported;\nconst implementation = native ? dom.native : dom.pseudo;\nexport const {createElement: Element, createText: Text, createFragment: Fragment} = implementation;\nexport const Template = template =>\n  !supported || Template.supported === false\n    ? false\n    : Template.supported === true\n    ? document.createElement('template')\n    : (Template.supported = !!(\n        (template = document.createElement('template')) && 'HTMLTemplateElement' === (template.constructor || '').name\n      )) && template;\n\n/// RENDERERS\nconst factory = (tag, properties) => (content, token) => {\n  if (!content) return;\n  typeof content !== 'string' || (content = Text(content));\n  const element = Element(tag, properties, content);\n  element && token && (token.hint && (element.className += ` ${token.hint}`));\n  return element;\n};\n\nObject.assign(renderers, {\n  whitespace: Text,\n  text: factory(SPAN, {className: CLASS}),\n\n  variable: factory('var', {className: `${CLASS} variable`}),\n  keyword: factory(SPAN, {className: `${CLASS} keyword`}),\n  identifier: factory(SPAN, {className: `${CLASS} identifier`}),\n  operator: factory(SPAN, {className: `${CLASS} punctuator operator`}),\n  assigner: factory(SPAN, {className: `${CLASS} punctuator operator assigner`}),\n  combinator: factory(SPAN, {className: `${CLASS} punctuator operator combinator`}),\n  punctuation: factory(SPAN, {className: `${CLASS} punctuator punctuation`}),\n  quote: factory(SPAN, {className: `${CLASS} punctuator quote`}),\n  breaker: factory(SPAN, {className: `${CLASS} punctuator breaker`}),\n  opener: factory(SPAN, {className: `${CLASS} punctuator opener`}),\n  closer: factory(SPAN, {className: `${CLASS} punctuator closer`}),\n  span: factory(SPAN, {className: `${CLASS} punctuator span`}),\n  sequence: factory(SPAN, {className: `${CLASS} sequence`}),\n  literal: factory(SPAN, {className: `${CLASS} literal`}),\n  indent: factory(SPAN, {className: `${CLASS} sequence indent`}),\n  comment: factory(SPAN, {className: `${CLASS} comment`}),\n  code: factory(SPAN, {className: `${CLASS}`}),\n});\n"],"names":["document","Element","Node","Text","DocumentFragment","createElement","createText","createFragment","dom.document","native","dom.native","dom.pseudo"],"mappings":"AAAA,MAAM,CAAC,MAAM,EAAE,cAAc,CAAC,GAAG,MAAM,CAAC;;AAExC,AAAO,MAAMA,UAAQ,GAAG,KAAK,IAAI,CAAC;;AAElC,AAAO,MAAM,IAAI,CAAC;EAChB,IAAI,QAAQ,GAAG;IACb,OAAO,cAAc,CAAC,IAAI,EAAE,UAAU,EAAE,CAAC,KAAK,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC;GACtE;EACD,IAAI,iBAAiB,GAAG;IACtB,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,CAAC,CAAC;GACrE;EACD,IAAI,WAAW,GAAG;IAChB;MACE,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE;MAC5F;GACH;EACD,IAAI,WAAW,CAAC,IAAI,EAAE;IACpB,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;IAC/E,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;GAC7C;EACD,WAAW,CAAC,OAAO,EAAE;IACnB,OAAO,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC;GACvD;EACD,MAAM,CAAC,GAAG,QAAQ,EAAE;IAClB,IAAI,QAAQ,CAAC,MAAM,EAAE,KAAK,MAAM,OAAO,IAAI,QAAQ,EAAE,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;GAC5F;EACD,WAAW,CAAC,OAAO,EAAE;IACnB,OAAO;MACL,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;MAC/B,IAAI,CAAC,QAAQ,CAAC,IAAI;MAClB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAChC,OAAO,OAAO,CAAC;GAChB;EACD,MAAM,CAAC,GAAG,QAAQ,EAAE;IAClB,IAAI,QAAQ,CAAC,MAAM,IAAI,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI;MAC1E,KAAK,MAAM,OAAO,IAAI,QAAQ,EAAE,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;GAC5E;CACF;;AAED,AAAO,MAAM,OAAO,SAAS,IAAI,CAAC;EAChC,IAAI,SAAS,GAAG;IACd,OAAO,IAAI,CAAC,WAAW,CAAC;GACzB;EACD,IAAI,SAAS,CAAC,IAAI,EAAE;IAClB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;GACzB;EACD,IAAI,SAAS,GAAG;IACd,MAAM,CAAC,SAAS,EAAE,GAAG,EAAE,SAAS,CAAC,GAAG,IAAI,CAAC;IACzC,OAAO,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,SAAS,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,SAAS,IAAI,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;GAC7F;EACD,QAAQ,GAAG;IACT,OAAO,IAAI,CAAC,SAAS,CAAC;GACvB;EACD,MAAM,GAAG;IACP,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;GACxB;CACF;;AAED,AAAO,MAAM,gBAAgB,SAAS,IAAI,CAAC;EACzC,QAAQ,GAAG;IACT,OAAO,IAAI,CAAC,WAAW,CAAC;GACzB;EACD,MAAM,GAAG;IACP,OAAO,CAAC,IAAI,CAAC,iBAAiB,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;GAC7D;EACD,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG;IAClB,OAAO,CAAC,CAAC,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,QAAQ,KAAK,EAAE,EAAE,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC;GAC7E;CACF;;AAED,AAAO,MAAM,IAAI,SAAS,MAAM,CAAC;EAC/B,QAAQ,GAAG;IACT,OAAO,cAAc,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;GACzC;CACF;;AAED,AAAO,MAAM,aAAa,GAAG,CAAC,GAAG,EAAE,UAAU,EAAE,GAAG,QAAQ,KAAK;EAC7D,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,OAAO,EAAE,EAAE;IACpC,GAAG;IACH,SAAS,EAAE,CAAC,UAAU,IAAI,UAAU,CAAC,SAAS,KAAK,EAAE;IACrD,UAAU;GACX,CAAC,CAAC;EACH,QAAQ,CAAC,MAAM,IAAI,cAAc,CAAC,OAAO,EAAE,UAAU,EAAE,CAAC,KAAK,EAAE,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;EACnF,OAAO,OAAO,CAAC;CAChB,CAAC;;AAEF,AAAO,MAAM,UAAU,GAAG,CAAC,OAAO,GAAG,EAAE,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;AAC9D,AAAO,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnE,AAAO,MAAM,cAAc,GAAG,MAAM,IAAI,MAAM,CAAC,OAAO,CAAC,wBAAwB,EAAE,YAAY,CAAC,CAAC;AAC/F,AAAO,MAAM,cAAc,GAAG,MAAM,IAAI,gBAAgB,EAAE,CAAC;;;;;;;;;;;;;;;ACzFpD,MAAM,WAACA,UAAQ,WAAEC,SAAO,QAAEC,MAAI,QAAEC,MAAI,oBAAEC,kBAAgB,CAAC;EAC5D,QAAQ,KAAK,OAAO,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,EAAE,MAAM,KAAK,IAAI,IAAI,IAAI,CAAC;;AAElE,AAAO,MAAM,gBAACC,eAAa,cAAEC,YAAU,kBAAEC,gBAAc,CAAC,GAAG;EACzD,aAAa,EAAE,CAAC,GAAG,EAAE,UAAU,EAAE,GAAG,QAAQ,KAAK;IAC/C,MAAM,OAAO,GAAGP,UAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IAC5C,UAAU,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;IACjD,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,OAAO,OAAO,CAAC;IACrC,IAAI,OAAO,CAAC,MAAM,EAAE;MAClB,OAAO,QAAQ,CAAC,MAAM,GAAG,GAAG,EAAE,OAAO,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;MACzE,QAAQ,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC,CAAC;KAChD,MAAM,IAAI,OAAO,CAAC,WAAW,EAAE;MAC9B,KAAK,MAAM,KAAK,IAAI,QAAQ,EAAE,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;KAC1D;IACD,OAAO,OAAO,CAAC;GAChB;;EAED,UAAU,EAAE,CAAC,OAAO,GAAG,EAAE,KAAKA,UAAQ,CAAC,cAAc,CAAC,OAAO,CAAC;;EAE9D,cAAc,EAAE,MAAMA,UAAQ,CAAC,sBAAsB,EAAE;CACxD,CAAC;;;;;;;;;;;;;ACjBF;AACA,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;AAE1E,AAAO,MAAM,MAAM,GAAGQ,UAAY,IAAI,GAAG,CAAC;;ACNzC;AACD,AAGA;;;;;;;;;;;;;;;;;;;;;AAqBA,AAAO,eAAe,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE;EACtC,MAAM,QAAQ;IACZ,CAAC,QAAQ,KAAK,MAAM,IAAI,QAAQ,IAAI,OAAO,QAAQ,CAAC,IAAI,KAAK,UAAU,IAAI,QAAQ,CAAC;KACnF,CAAC,MAAM,CAAC,aAAa,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE;OACnE,MAAM,CAAC,QAAQ,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAClE,IAAI;IACF,IAAI,QAAQ,IAAI,OAAO,QAAQ,CAAC,IAAI,KAAK,UAAU,EAAE;MACnD,IAAI,MAAM,EAAE,IAAI,CAAC;MACjB,OAAO,CAAC,IAAI,KAAK,MAAM,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE;QAChD,MAAM,CAAC,CAAC,MAAM,MAAM,CAAC,KAAK,CAAC,CAAC;QAC5B,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;OACpB;KACF;GACF,SAAS;IACR,QAAQ;MACN,QAAQ,KAAK,QAAQ;MACrB,QAAQ,IAAI,QAAQ;MACpB,OAAO,QAAQ,CAAC,MAAM,KAAK,UAAU;MACrC,QAAQ,CAAC,MAAM,EAAE,CAAC;GACrB;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mEA+FkE;;ACzInE;;AAEA,MAAM,IAAI,GAAG,MAAM,CAAC;;;AAGpB,MAAM,KAAK,GAAG,QAAQ,CAAC;;;AAGvB,MAAM,SAAS,GAAG,IAAI,CAAC;;;AAGvB,AAAY,MAAC,SAAS,GAAG,EAAE,CAAC;;AAE5B,AAAO,UAAU,QAAQ,CAAC,MAAM,EAAE,cAAc,GAAG,SAAS,EAAE;EAC5D,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;IAC1B,MAAM,CAAC,IAAI,GAAG,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,CAAC,GAAG,KAAK,CAAC;IACxD,MAAM,aAAa;MACjB,CAAC,UAAU,KAAK,cAAc,CAAC,UAAU,CAAC,IAAI,cAAc,CAAC,QAAQ,CAAC;OACrE,IAAI,IAAI,cAAc,CAAC,IAAI,CAAC,CAAC;OAC7B,IAAI,IAAI,cAAc,CAAC,IAAI,CAAC,CAAC;IAChC,MAAM,OAAO,GAAG,aAAa,IAAI,aAAa,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAC5D,OAAO,KAAK,MAAM,OAAO,CAAC,CAAC;GAC5B;CACF;;AAED,AAAO,eAAe,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE;EAC7C,IAAI,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,CAAC;EACpC,IAAI;IACF,QAAQ,KAAK,QAAQ,GAAG,QAAQ,EAAE,CAAC,CAAC;IACpC,IAAI,GAAG,QAAQ,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC;IAC7C,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC5B,IAAI,CAAC,KAAK,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,KAAK,OAAO,IAAI,KAAK,EAAE;MACvD,QAAQ,GAAG,QAAQ,EAAE,CAAC;MACtB,IAAI,CAACC,QAAM,IAAI,QAAQ,IAAI,aAAa,IAAI,QAAQ,EAAE;QACpD,IAAI,CAAC,IAAI,CAAC,CAAC,kCAAkC,CAAC,CAAC,CAAC;QAChD,MAAM,IAAI,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC3B,KAAK,CAAC,IAAI,KAAK,MAAM,IAAI,CAAC,QAAQ,EAAE,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACpE,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACnC,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;OACxC,MAAM,IAAI,MAAM,IAAI,QAAQ,EAAE;QAC7B,IAAI,CAAC,IAAI,CAAC,CAAC,kCAAkC,CAAC,CAAC,CAAC;QAChD,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC3B,KAAK,CAAC,IAAI,KAAK,MAAM,IAAI,CAAC,QAAQ,EAAE,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;OACzE,MAAM,IAAI,QAAQ,IAAI,QAAQ,EAAE;QAC/B,IAAI,CAAC,IAAI,CAAC,CAAC,oCAAoC,CAAC,CAAC,CAAC;QAClD,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7B,KAAK,CAAC,IAAI,KAAK,MAAM,IAAI,CAAC,QAAQ,EAAE,OAAO,IAAI,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;OAC3E;KACF;IACD,OAAO,QAAQ,CAAC;GACjB,SAAS;IACR,QAAQ,KAAK,QAAQ,CAAC,SAAS,GAAG,EAAE,CAAC,CAAC;IACtC,QAAQ,GAAG,QAAQ,GAAG,IAAI,GAAG,QAAQ,GAAG,KAAK,GAAG,IAAI,CAAC;GACtD;CACF;;AAED,AAAY,MAAC,SAAS,GAAG,CAAC,CAACC,OAAW;AACtC,AAAY,MAACD,QAAM,GAAG,CAAC,SAAS,IAAI,SAAS,CAAC;AAC9C,MAAM,cAAc,GAAGA,QAAM,GAAGC,MAAU,GAAGC,MAAU,CAAC;AACxD,AAAY,MAAC,CAAC,aAAa,EAAEV,SAAO,EAAE,UAAU,EAAEE,MAAI,EAAE,cAAc,EAAE,QAAQ,CAAC,GAAG,cAAc,CAAC;AACnG,AAAY,MAAC,QAAQ,GAAG,QAAQ;EAC9B,CAAC,SAAS,IAAI,QAAQ,CAAC,SAAS,KAAK,KAAK;MACtC,KAAK;MACL,QAAQ,CAAC,SAAS,KAAK,IAAI;MAC3B,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC;MAClC,CAAC,QAAQ,CAAC,SAAS,GAAG,CAAC;QACrB,CAAC,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,KAAK,qBAAqB,KAAK,CAAC,QAAQ,CAAC,WAAW,IAAI,EAAE,EAAE,IAAI;OAC/G,KAAK,QAAQ,CAAC;;;AAGrB,MAAM,OAAO,GAAG,CAAC,GAAG,EAAE,UAAU,KAAK,CAAC,OAAO,EAAE,KAAK,KAAK;EACvD,IAAI,CAAC,OAAO,EAAE,OAAO;EACrB,OAAO,OAAO,KAAK,QAAQ,KAAK,OAAO,GAAGA,MAAI,CAAC,OAAO,CAAC,CAAC,CAAC;EACzD,MAAM,OAAO,GAAGF,SAAO,CAAC,GAAG,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;EAClD,OAAO,IAAI,KAAK,KAAK,KAAK,CAAC,IAAI,KAAK,OAAO,CAAC,SAAS,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5E,OAAO,OAAO,CAAC;CAChB,CAAC;;AAEF,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE;EACvB,UAAU,EAAEE,MAAI;EAChB,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;;EAEvC,QAAQ,EAAE,OAAO,CAAC,KAAK,EAAE,CAAC,SAAS,EAAE,CAAC,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;EAC1D,OAAO,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;EACvD,UAAU,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;EAC7D,QAAQ,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC,EAAE,KAAK,CAAC,oBAAoB,CAAC,CAAC,CAAC;EACpE,QAAQ,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC,EAAE,KAAK,CAAC,6BAA6B,CAAC,CAAC,CAAC;EAC7E,UAAU,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC,EAAE,KAAK,CAAC,+BAA+B,CAAC,CAAC,CAAC;EACjF,WAAW,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC,EAAE,KAAK,CAAC,uBAAuB,CAAC,CAAC,CAAC;EAC1E,KAAK,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC,EAAE,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC;EAC9D,OAAO,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC,EAAE,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC;EAClE,MAAM,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC,EAAE,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC;EAChE,MAAM,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC,EAAE,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC;EAChE,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC,EAAE,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC;EAC5D,QAAQ,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;EACzD,OAAO,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC,EAAE,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC;EAC9D,OAAO,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;EACvD,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;CAC7C,CAAC,CAAC;;;;"}