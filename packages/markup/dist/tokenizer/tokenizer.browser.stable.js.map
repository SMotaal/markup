{"version":3,"file":"tokenizer.browser.stable.js","sources":["../../packages/pseudom/helpers.js","../../packages/grammar/common/helpers.js","../../packages/grammar/common/patterns.js","../../packages/tokenizer/lib/legacy/grouping.js","../../packages/tokenizer/lib/legacy/tokenizer.js","../../packages/tokenizer/lib/core.js","../../packages/tokenizer/lib/legacy/parser.js","../../packages/tokenizer/tokenizer.js","../../packages/grammar/css/css-grammar.js","../../packages/grammar/html/html-grammar.js","../../packages/grammar/markdown/markdown-grammar.js","../../packages/grammar/javascript/javascript-grammar.js","../../packages/grammar/typescript/typescript-grammar.js","../../packages/grammar/javascript/javascript-extended-grammar.js","../../packages/tokenizer/tokenizer.extended.js","../../packages/tokenizer/lib/api.js","../../packages/pseudom/native.js","../../packages/pseudom/pseudo.js","../../packages/pseudom/pseudom.js","../../packages/tokenizer/extensions/helpers.js","../../packages/tokenizer/extensions/dom.js","../../packages/tokenizer/browser/extended.js"],"sourcesContent":["﻿// @ts-check\n\nexport const {\n  Pseudom,\n  Pseudom: {encodeEntity, encodeEntities},\n} = (() => {\n  class Pseudom {\n    /** @param {*} source*/\n    static encodeEntities(source) {\n      return /[\\u00A0-\\u9999<>\\&]/g[Symbol.replace](source, Pseudom.encodeEntity);\n    }\n\n    /** @param {*} source*/\n    static encodeEntity(source) {\n      return `&#${Pseudom.extractCodePoint(source, 0)};`;\n    }\n  }\n\n  Object.freeze(Pseudom.encodeEntities);\n  Object.freeze(Pseudom.encodeEntity);\n\n  Pseudom.extractCodePoint = Object.freeze(\n    /** @type {(source: any, index: number) => number} */ (Function.call.bind(''.charCodeAt)),\n  );\n\n  /**\n   * @template T, U\n   * @param {(new () => T & U)} Class\n   * @param {(new () => U) | null | undefined} Super\n   * @param {Pick<typeof globalThis, 'Object'>} endowments\n   */\n  Pseudom.fixClassInheritance = (Class, Super, endowments = globalThis) => {\n    endowments.Object.setPrototypeOf(\n      Class.prototype,\n      Super === null ? null : Super ? Super.prototype : endowments.Object.prototype,\n    );\n\n    endowments.Object.setPrototypeOf(Class, Super == null ? endowments.Object : Super);\n\n    return Class;\n  };\n\n  Pseudom.checkPrimordialEndowments = Object.freeze((endowments, ...primordials) => {\n    for (const endowment of `Object,${primordials}`.replace(/^,Object|(,\\w+)(?=.*?\\1)/g, '').split(',')) {\n      if (\n        endowment === 'Object'\n          ? !(\n              typeof endowments[endowment] === 'function' &&\n              typeof endowments[endowment].prototype === 'object' &&\n              endowments[endowment].prototype !== null &&\n              endowments[endowment].__proto__ &&\n              endowments[endowment].__proto__.__proto__ === endowments.Object.prototype\n            )\n          : endowment in endowments &&\n            !(\n              typeof endowments[endowment] === 'function' &&\n              endowments[endowment].prototype != null &&\n              // typeof endowments[endowment].prototype === 'object' &&\n              endowments[endowment].__proto__ === endowments.Object.__proto__ &&\n              endowments[endowment].prototype.__proto__ === endowments.Object.prototype\n            )\n      )\n        throw `Error: createPseudoDOM invoked with an invalid ‹${endowment}› endowment.`;\n    }\n  });\n\n  Object.freeze(Pseudom);\n\n  return {Pseudom};\n})();\n","﻿/// Helpers\nexport const InspectSymbol = Symbol.for('nodejs.util.inspect.custom');\n\nexport const Null = Object.freeze(Object.create(null));\n\nexport const raw = String.raw;\n\nexport const RegExpFlags = /^\\/((?:g(?=[^g]*$)|i(?=[^i]*$)|m(?=[^m]*$)|s(?=[^s]*$)|u(?=[^u]*$)|y(?=[^y]*$))+)$|/;\n\nclass SequenceExpression extends RegExp {}\n\nexport const {\n  escape = (SequenceExpression.escape = /** @type {<T>(source: T) => string} */ ((() => {\n    const {replace} = Symbol;\n    return source => /[\\\\^$*+?.()|[\\]{}]/g[replace](source, '\\\\$&');\n  })())),\n} = SequenceExpression;\n\n/**\n * Create a sequence match expression from patterns.\n *\n * @type  {{(strings: TemplateStringsArray, ... patterns: pattern[]): sequence, (...patterns: pattern[]): sequence}}\n */\nexport const sequence = (...patterns) => (\n  patterns.length > 1 &&\n    (patterns.flags = RegExpFlags.exec(patterns[patterns.length - 1]).pop()) &&\n    (patterns[patterns.length - 1] = ''),\n  new SequenceExpression(Reflect.apply(raw, null, patterns.map(p => (p && p.source) || p || '')), patterns.flags || 'g')\n);\n\nclass IdentifierExpression extends RegExp {}\n\n/**\n * Create a maybeIdentifier test (ie [<first>][<other>]*) expression.\n *\n * @type {{(first: pattern, other: pattern, flags?: string, boundary?: unknown): pattern.identifier}}\n */\nexport const identifier = (first, other = first, flags = 'u', boundary = /yg/.test(flags) && '\\\\b') =>\n  new IdentifierExpression(`${boundary || '^'}[${first}][${other}]*${boundary || '$'}`, flags);\n\n/**\n * Create a sequence pattern from patterns.\n *\n * @param  {...Pattern} patterns\n */\nexport const all = (...patterns) => patterns.map(p => (p && p.exec ? p.source : p)).join('|');\n\n/// Symbols\n\nexport class Symbols extends Set {\n  static from(...sources) {\n    const Species = this || Symbols;\n    const symbols = (sources.length && Species.split(...sources)) || [];\n    return new Species(symbols);\n  }\n\n  static split(...sources) {\n    const Species = this || Symbols;\n    const symbols = [];\n    // TODO: Replace with sources.flat() for non-legacy\n    for (const source of [].concat(...sources)) {\n      source &&\n        (typeof source === 'string'\n          ? symbols.push(...source.split(/ +/))\n          : Symbol.iterator in source\n          ? symbols.push(...Species.split(...source))\n          : source['(symbols)'] && typeof source['(symbols)'] === 'string'\n          ? symbols.push(...Species.split(source['(symbols)']))\n          : null);\n    }\n    return symbols;\n  }\n\n  static inspect(symbol, depth, {stylize = String, compact = false} = {}) {\n    const type = typeof symbol;\n    return `${stylize(\n      type === 'symbol'\n        ? `Symbol(${symbol.description || ''})`\n        : type === 'string'\n        ? JSON.stringify(symbol).slice(1, -1)\n        : `${symbol}`,\n      type,\n    )}`;\n  }\n\n  get includes() {\n    Object.defineProperty(Symbols.prototype, 'includes', Object.getOwnPropertyDescriptor(Set.prototype, 'has'));\n    return this.has;\n  }\n  set includes(value) {\n    this.includes = (this.includes, value);\n  }\n\n  get(symbol) {\n    if (this.has(symbol)) return symbol;\n  }\n\n  [InspectSymbol](depth, {stylize = String, compact = false} = {}) {\n    try {\n      const depth = arguments[0] + 1;\n      const options = arguments[1];\n      let Species = (this && this.constructor) || Symbols;\n      const {inspect = (Species = Closures).inspect} = Species;\n      return `${(this && this.constructor && this.constructor.name) || 'Symbols'} ‹${Array.from(this.values())\n        .map(symbol => Species.inspect(symbol, depth, options))\n        .join('|')}›`;\n    } catch (exception) {\n      return super.toString(this);\n    }\n  }\n}\n/// Closures\n\nexport class Closure extends String {\n  constructor(opener, closer = opener) {\n    if (!opener || !closer) throw Error(`Cannot construct closure from \"${opener}\" … \"${closer}\"`);\n    super(`${opener}…${closer}`);\n    this.opener = opener;\n    this.closer = closer;\n  }\n\n  [InspectSymbol](depth, {stylize = String, compact = false} = {}) {\n    try {\n      const depth = arguments[0] + 1;\n      const options = arguments[1];\n      return `${(this && this.constructor && this.constructor.name) || 'Closure'} ‹${Closures.inspect(this)}›`;\n    } catch (exception) {\n      return `${this}`;\n    }\n  }\n}\n\nexport class Closures extends Map {\n  static get splitter() {\n    Object.defineProperty(Closures, 'splitter', {value: / *?([^ ]+…[^ ]+|[^ …]+) *?/});\n  }\n\n  static from(...sources) {\n    const Species = this || Closures;\n    const closures = (sources.length && Species.split(...sources)) || [];\n    return new Species(closures);\n  }\n  static split(...sources) {\n    const Species = this || Closures;\n    const Member = Species.Element || Closure;\n    const closures = [];\n    // TODO: Replace with sources.flat() for non-legacy\n    for (const source of [].concat(...sources)) {\n      if (!source) continue;\n      switch (typeof source) {\n        case 'object':\n          source instanceof Member\n            ? closures.push([source.opener, source])\n            : source instanceof Species\n            ? closures.push(...source)\n            : source['(closures)'] && typeof source['(closures)'] === 'string'\n            ? closures.push(...Closures.split(source['(closures)']))\n            : null;\n          break;\n        case 'string': {\n          for (const pair of source.split(Species.splitter || Closures.splitter)) {\n            if (!pair) continue;\n            const [opener, closer] = pair.split('…');\n            const closure = new Member(opener, closer);\n            closures.push([opener, closure]);\n          }\n          break;\n        }\n      }\n    }\n    return closures;\n  }\n\n  static inspect(closure, depth, {stylize = String, compact = false} = {}) {\n    let opener, openerType, closer, closerType;\n    return closure && 'opener' in closure && 'closer' in closure\n      ? `${stylize(\n          (openerType = typeof (opener = closure.opener)) === 'string' ? JSON.stringify(opener).slice(1, -1) : opener,\n          openerType,\n        )}\\u{25CC}${stylize(\n          (closerType = typeof (closer = closure.closer)) === 'string' ? JSON.stringify(closer).slice(1, -1) : closer,\n          closerType,\n        )}`\n      : stylize(`${closure}`, typeof closure);\n  }\n\n  get includes() {\n    Object.defineProperty(Closures.prototype, 'includes', Object.getOwnPropertyDescriptor(Map.prototype, 'has'));\n    return this.has;\n  }\n\n  set includes(value) {\n    this.includes = (this.includes, value);\n  }\n\n  [InspectSymbol](depth, {stylize = String, compact = false} = {}) {\n    try {\n      const depth = arguments[0] + 1;\n      const options = arguments[1];\n      let Species = (this && this.constructor) || Closures;\n      const {inspect = (Species = Closures).inspect} = Species;\n      return `${(this && this.constructor && this.constructor.name) || 'Closures'} ‹${Array.from(this.values())\n        .map(closure => Species.inspect(closure, depth, options))\n        .join('|')}›`;\n    } catch (exception) {\n      return super.toString(this);\n    }\n  }\n}\n\n/// TRAVERSING\n\nexport const previousTextFrom = (token, matcher) => {\n  const text = [];\n  if (matcher != null) {\n    if (matcher.test)\n      do token.text && text.push(token.text), (token = token.previous);\n      while (!token.text || !matcher.test(token.text));\n    else if (matcher.includes)\n      do token.text && text.push(token.text), (token = token.previous);\n      while (!token.text || !matcher.includes(token.text));\n    text.length && text.reverse();\n  }\n  return text.join('');\n};\n\n/// INDENTS\n\nexport const indenter = (indenting, tabs = 2) => {\n  let source = indenting;\n  const indent = new RegExp(raw`(?:\\t|${' '.repeat(tabs)})`, 'g');\n  const space = indent.source;\n  source = source.replace(/\\\\?(?=[\\(\\)\\:\\?\\[\\]])/g, '\\\\');\n  const [, lead, tail] = /^(\\s*.*?)(\\s*?)$/.exec(source);\n  return new RegExp(`^${lead.replace(indent, space)}(?:${tail.replace(indent, `${space}?`)})?`, 'm');\n};\n\n/** @typedef {string | RegExp} pattern */\n/** @typedef {SequenceExpression} sequence */\n/** @typedef {IdentifierExpression} pattern.identifier */\n","import {raw} from './helpers.js';\n\nexport const patterns = {\n  /** Basic latin Keyword like symbol (inteded to be extended) */\n  // maybeKeyword: /^[a-z]+$/i,\n};\n\n/** Entities used to construct patterns. */\nexport const entities = {\n  es: {\n    IdentifierStart: raw`_$\\p{ID_Start}`,\n    IdentifierPart: raw`_$\\u200c\\u200d\\p{ID_Continue}\\u034f`,\n  },\n};\n\n/** Interoperability (for some browsers)  TODO: Simplify */\n(Ranges => {\n  const transforms = [];\n\n  if (!supports(raw`\\p{ID_Start}`, 'u')) {\n    const UnicodePropertyEscapes = /\\\\p{ *(\\w+) *}/g;\n    UnicodePropertyEscapes.replace = (m, propertyKey) => {\n      if (propertyKey in Ranges) return Ranges[propertyKey].toString();\n      throw RangeError(`Cannot rewrite unicode property \"${propertyKey}\"`);\n    };\n    transforms.push(expression => {\n      let flags = expression && expression.flags;\n      let source = expression && `${expression.source || expression || ''}`;\n      source &&\n        UnicodePropertyEscapes.test(source) &&\n        (source = source.replace(UnicodePropertyEscapes, UnicodePropertyEscapes.replace));\n      return (flags && new RegExp(source, flags)) || source;\n    });\n  }\n\n  if (!transforms.length) return;\n\n  for (const key in entities) {\n    const sources = entities[key];\n    const changes = {};\n    for (const id in sources) {\n      let source = sources[id];\n      if (!source || typeof source !== 'string') continue;\n      for (const transform of transforms) source = transform(source);\n      !source || source === sources[id] || (changes[id] = source);\n    }\n    Object.assign(sources, changes);\n  }\n\n  // prettier-ignore\n  function supports() {try {return !!RegExp(... arguments)} catch (e) { }}\n})({\n  ID_Start: raw`a-zA-Z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7b9\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab65\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc`,\n  ID_Continue: raw`a-zA-Z0-9\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7b9\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab65\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f`,\n});\n","export class Grouping {\n  /**\n   * @param {{syntax: string, groupers: Groupers, createGrouper: createGrouper}} options\n   */\n  constructor({syntax, groupers, createGrouper, contextualizer}) {\n    this.groupers = groupers;\n    this.groupings = [];\n    this.hints = new Set();\n    this.syntax = syntax;\n    this.goal = syntax;\n    this.hint = syntax;\n    this.contextualizer = contextualizer;\n    this.context = syntax;\n    this.create = createGrouper || Object;\n  }\n\n  /**\n   * @param {Token} next\n   * @param {Token} parent\n   * @param state\n   * @param context\n   */\n  close(next, state, context) {\n    let after, grouper, parent;\n    const {groupings, hints, syntax} = this;\n\n    const closed = groupings.pop();\n    grouper = closed;\n    groupings.includes(grouper) || hints.delete(grouper.hinter);\n\n    (closed.punctuator === 'opener' && (next.punctuator = 'closer')) ||\n      (closed.punctuator && (next.punctuator = closed.punctuator));\n\n    after = grouper.close && grouper.close(next, state, context);\n\n    const previousGrouper = (grouper = groupings[groupings.length - 1]);\n\n    this.goal = (previousGrouper && previousGrouper.goal) || syntax;\n    this.grouper = previousGrouper;\n\n    parent = (next.parent && next.parent.parent) || undefined;\n\n    return {after, grouper, closed, parent};\n  }\n\n  open(next, context) {\n    let opened, parent, grouper;\n\n    const {groupers, groupings, hints, hint, syntax} = this;\n    let {punctuator, text} = next;\n    const hinter = punctuator ? `${syntax}-${punctuator}` : hint;\n    const group = `${hinter},${text}`;\n\n    grouper = groupers[group];\n\n    const {\n      mode: {matchers, comments, spans, closures},\n    } = context;\n\n    if (context.spans && punctuator === 'span') {\n      const span = context.spans.get(text);\n      punctuator = next.punctuator = 'span';\n      opened =\n        grouper ||\n        this.create({\n          syntax,\n          goal: syntax,\n          span,\n          matcher: span.matcher || (matchers && matchers.span) || undefined,\n          spans: (spans && spans[text]) || undefined,\n          hinter,\n          punctuator,\n        });\n    } else if (context.punctuator !== 'quote') {\n      if (punctuator === 'quote') {\n        opened =\n          grouper ||\n          this.create({\n            syntax,\n            goal: punctuator,\n            quote: text,\n            matcher: (matchers && matchers.quote) || undefined,\n            spans: (spans && spans[text]) || undefined,\n            hinter,\n            punctuator,\n          });\n      } else if (punctuator === 'comment') {\n        const comment = comments.get(text);\n        opened =\n          grouper ||\n          this.create({\n            syntax,\n            goal: punctuator,\n            comment,\n            matcher: comment.matcher || (matchers && matchers.comment) || undefined,\n            hinter,\n            punctuator,\n          });\n      } else if (punctuator === 'closure') {\n        const closure = (grouper && grouper.closure) || closures.get(text);\n        punctuator = next.punctuator = 'opener';\n        closure &&\n          (opened =\n            grouper ||\n            this.create({\n              syntax,\n              goal: syntax,\n              closure,\n              matcher: closure.matcher || (matchers && matchers.closure) || undefined,\n              hinter,\n              punctuator,\n            }));\n      }\n    }\n\n    if (opened) {\n      groupers[group] || (groupers[group] = grouper = opened);\n      groupings.push(grouper), hints.add(hinter);\n      this.goal = (grouper && grouper.goal) || syntax;\n      parent = next;\n    }\n\n    return {grouper, opened, parent, punctuator};\n  }\n}\n\n/** @typedef {import('../types').Grouping} Grouping */\n/** @typedef {import('../types').Tokenizer} Tokenizer */\n/** @typedef {import('../types').Token} Token */\n/** @typedef {import('../types')['Tokenizer']} TokenizerClass */\n/** @typedef {{[name: string]: Grouping}} Groupers */\n/** @typedef {(TokenizerClass)['createGrouper']} createGrouper */\n","import {Grouping} from './grouping.js';\n\n/** Tokenizer for a single mode (language) */\nexport class Tokenizer {\n  constructor(mode, defaults) {\n    this.mode = mode;\n    this.defaults = defaults || this.constructor.defaults || undefined;\n  }\n\n  /** Token generator from source using tokenizer.mode (or defaults.mode) */\n  *tokenize(source, state = {}) {\n    let done;\n\n    // TODO: Consider supporting Symbol.species\n    const Species = this.constructor;\n\n    // Local context\n    const contextualizer = this.contextualizer || (this.contextualizer = Species.contextualizer(this));\n    let context = contextualizer.next().value;\n\n    const {mode, syntax, createGrouper = Species.createGrouper || Object} = context;\n\n    // Local grouping\n    const groupers = mode.groupers || (mode.groupers = {});\n    const grouping =\n      state.grouping ||\n      (state.grouping = new Grouping({\n        syntax: syntax || mode.syntax,\n        groupers,\n        createGrouper,\n        contextualizer,\n      }));\n\n    // Local matching\n    let {match, index = 0, flags} = state;\n\n    // Local tokens\n    let previousToken, lastToken, parentToken;\n    const top = {type: 'top', text: '', offset: index};\n\n    // let lastContext = context;\n    state.context = context;\n\n    state.source = source;\n\n    const tokenize = state.tokenize || (text => [{text}]);\n\n    while (!done) {\n      const {\n        mode: {syntax, matchers, comments, spans, closures},\n        punctuator: $$punctuator,\n        closer: $$closer,\n        spans: $$spans,\n        matcher: $$matcher,\n        token,\n        forming = true,\n      } = context;\n\n      // Current contextual hint (syntax or hint)\n      const hint = grouping.hint;\n\n      while (state.context === (state.context = context)) {\n        let next;\n\n        // state.lastToken = lastToken;\n\n        const lastIndex = state.index || 0;\n\n        $$matcher.lastIndex = lastIndex;\n        match = state.match = $$matcher.exec(source);\n        done = index === (index = state.index = $$matcher.lastIndex) || !match;\n\n        if (done) break;\n\n        // Current contextual match\n        const {0: text, 1: whitespace, 2: sequence, index: offset} = match;\n\n        // Current quasi-contextual fragment\n        const pre = source.slice(lastIndex, offset);\n        pre &&\n          ((next = token({\n            type: 'pre',\n            text: pre,\n            offset: lastIndex,\n            previous: previousToken,\n            parent: parentToken,\n            hint,\n            last: lastToken,\n            source,\n          })),\n          yield (previousToken = next));\n\n        // Current contextual fragment\n        const type = (whitespace && 'whitespace') || (sequence && 'sequence') || 'text';\n        next = token({type, text, offset, previous: previousToken, parent: parentToken, hint, last: lastToken, source});\n\n        // Current contextual punctuator (from sequence)\n        const closing =\n          $$closer &&\n          ($$closer.test ? $$closer.test(text) : $$closer === text || (whitespace && whitespace.includes($$closer)));\n\n        let after;\n        let punctuator = next.punctuator;\n\n        if (punctuator || closing) {\n          let closed, opened, grouper;\n\n          if (closing) {\n            ({after, closed, parent: parentToken = top, grouper} = grouping.close(next, state, context));\n          } else if ($$punctuator !== 'comment') {\n            ({grouper, opened, parent: parentToken = top, punctuator} = grouping.open(next, context));\n          }\n\n          state.context = grouping.context = grouping.goal || syntax;\n\n          if (opened || closed) {\n            next.type = 'punctuator';\n            context = contextualizer.next((state.grouper = grouper || undefined)).value;\n            grouping.hint = `${[...grouping.hints].join(' ')} ${grouping.context ? `in-${grouping.context}` : ''}`;\n            opened && (after = opened.open && opened.open(next, state, context));\n          }\n        }\n\n        // Current contextual tail token (yield from sequence)\n        yield (previousToken = next);\n\n        // Next reference to last contextual sequence token\n        next && !whitespace && forming && (lastToken = next);\n\n        if (after) {\n          let tokens, token, nextIndex;\n\n          if (after.syntax) {\n            const {syntax, offset, index} = after;\n            const body = index > offset && source.slice(offset, index - 1);\n            if (body) {\n              body.length > 0 &&\n                ((tokens = tokenize(body, {options: {sourceType: syntax}}, this.defaults)), (nextIndex = index));\n              const hint = `${syntax}-in-${mode.syntax}`;\n              token = token => ((token.hint = `${(token.hint && `${token.hint} `) || ''}${hint}`), token);\n            }\n          } else if (after.length) {\n            const hint = grouping.hint;\n            token = token => ((token.hint = `${hint} ${token.type || 'code'}`), context.token(token));\n            (tokens = after).end > state.index && (nextIndex = after.end);\n          }\n\n          if (tokens) {\n            for (const next of tokens) {\n              previousToken && ((next.previous = previousToken).next = next);\n              token && token(next);\n              yield (previousToken = next);\n            }\n            nextIndex > state.index && (state.index = nextIndex);\n          }\n        }\n      }\n    }\n    flags && flags.debug && console.info('[Tokenizer.tokenize‹state›]: %o', state);\n  }\n\n  /**\n   * Tokenizer context generator\n   */\n  static *contextualizer(tokenizer) {\n    // Local contextualizer state\n    let grouper;\n\n    // Tokenizer mode\n    const mode = tokenizer.mode;\n    const defaults = tokenizer.defaults;\n    mode !== undefined || (mode = (defaults && defaults.mode) || undefined);\n    if (!mode) throw ReferenceError(`Tokenizer.contextualizer invoked without a mode`);\n\n    // TODO: Refactoring\n    const initialize = context => {\n      let {\n        tokenizer = (context.tokenizer = this.tokenizer(context)),\n        token = (context.token = (tokenizer => (tokenizer.next(), token => tokenizer.next(token).value))(tokenizer)),\n      } = context;\n      return context;\n    };\n\n    if (!mode.context) {\n      const {\n        matcher = (mode.matcher = (defaults && defaults.matcher) || undefined),\n        quotes,\n        punctuators = (mode.punctuators = {aggregators: {}}),\n        punctuators: {aggregators = (punctuators.aggregators = {})},\n        patterns: {\n          maybeKeyword = (mode.patterns.maybeKeyword =\n            (defaults && defaults.patterns && defaults.patterns.maybeKeyword) || undefined),\n        } = (mode.patterns = {maybeKeyword: null}),\n        spans: {['(spans)']: spans} = (mode.spans = {}),\n      } = mode;\n\n      initialize((mode.context = {mode, punctuators, aggregators, matcher, quotes, spans}));\n    }\n\n    const {\n      syntax: $syntax,\n      matcher: $matcher,\n      quotes: $quotes,\n      punctuators: $punctuators,\n      punctuators: {aggregators: $aggregators},\n    } = mode;\n\n    while (true) {\n      if (grouper !== (grouper = yield (grouper && grouper.context) || mode.context) && grouper && !grouper.context) {\n        const {\n          goal = (grouper.syntax = $syntax),\n          punctuator,\n          punctuators = (grouper.punctuators = $punctuators),\n          aggregators = (grouper.aggregate = $aggregators),\n          closer,\n          spans,\n          matcher = (grouper.matcher = $matcher),\n          quotes = (grouper.quotes = $quotes),\n          forming = (grouper.forming = goal === $syntax),\n        } = grouper;\n\n        initialize(\n          (grouper.context = {\n            mode,\n            punctuator,\n            punctuators,\n            aggregators,\n            closer,\n            spans,\n            matcher,\n            quotes,\n            forming,\n          }),\n        );\n      }\n    }\n  }\n\n  static *tokenizer(context) {\n    let done, next;\n\n    const {\n      mode: {syntax, keywords, assigners, operators, combinators, nonbreakers, comments, closures, breakers, patterns},\n      punctuators,\n      aggregators,\n      spans,\n      quotes,\n      forming = true,\n    } = context;\n\n    const {maybeIdentifier, maybeKeyword, segments} = patterns || false;\n    const wording = keywords || maybeIdentifier ? true : false;\n\n    const matchSegment =\n      segments &&\n      (segments[Symbol.match] ||\n        (!(Symbol.match in segments) &&\n          (segments[Symbol.match] = (segments => {\n            const sources = [];\n            const names = [];\n            for (const name of Object.getOwnPropertyNames(segments)) {\n              const segment = segments[name];\n              if (segment && segment.source && !/\\\\\\d/.test(segment.source)) {\n                names.push(name);\n                sources.push(segment.source.replace(/\\\\?\\((.)/g, (m, a) => (m[0] !== '\\\\' && a !== '?' && '(?:') || m));\n              }\n            }\n            const {length} = names;\n            if (!length) return false;\n            const matcher = new RegExp(`(${sources.join('|)|(')}|)`, 'u');\n            return text => {\n              // OR: for (const segment of names) if (segments[segment].test(text)) return segment;\n              const match = matcher.exec(text);\n              if (match[0]) for (let i = 1, n = length; n--; i++) if (match[i]) return names[i - 1];\n            };\n          })(segments))));\n\n    const LineEndings = /$/gm;\n    const punctuate = text =>\n      (nonbreakers && nonbreakers.includes(text) && 'nonbreaker') ||\n      (operators && operators.includes(text) && 'operator') ||\n      (comments && comments.includes(text) && 'comment') ||\n      (spans && spans.includes(text) && 'span') ||\n      (quotes && quotes.includes(text) && 'quote') ||\n      (closures && closures.includes(text) && 'closure') ||\n      (breakers && breakers.includes(text) && 'breaker') ||\n      false;\n    const aggregate = text =>\n      (assigners && assigners.includes(text) && 'assigner') ||\n      (combinators && combinators.includes(text) && 'combinator') ||\n      false;\n\n    while (!done) {\n      let token;\n\n      if (next && next.text) {\n        const {text, type, hint, previous, parent, last} = next;\n\n        if (type === 'sequence') {\n          ((next.punctuator =\n            (previous && (aggregators[text] || (!(text in aggregators) && (aggregators[text] = aggregate(text))))) ||\n            (punctuators[text] || (!(text in punctuators) && (punctuators[text] = punctuate(text)))) ||\n            undefined) &&\n            (next.type = 'punctuator')) ||\n            (matchSegment &&\n              (next.type = matchSegment(text)) &&\n              (next.hint = `${(hint && `${hint} `) || ''}${next.type}`)) ||\n            (next.type = 'sequence');\n        } else if (type === 'whitespace') {\n          next.lineBreaks = text.match(LineEndings).length - 1;\n        } else if (forming && wording) {\n          const word = text.trim();\n          word &&\n            ((keywords &&\n              keywords.includes(word) &&\n              (!last || last.punctuator !== 'nonbreaker' || (previous && previous.lineBreaks > 0)) &&\n              (next.type = 'keyword')) ||\n              (maybeIdentifier && maybeIdentifier.test(word) && (next.type = 'identifier')));\n        } else {\n          next.type = 'text';\n        }\n\n        previous && (previous.next = next) && (parent || (next.parent = previous.parent));\n\n        token = next;\n      }\n\n      next = yield token;\n    }\n  }\n\n  static createGrouper({\n    syntax,\n    goal = syntax,\n    quote,\n    comment,\n    closure,\n    span,\n    grouping = comment || closure || span || undefined,\n    punctuator,\n    spans = (grouping && grouping.spans) || undefined,\n    matcher = (grouping && grouping.matcher) || undefined,\n    quotes = (grouping && grouping.quotes) || undefined,\n    punctuators = {aggregators: {}},\n    opener = quote || (grouping && grouping.opener) || undefined,\n    closer = quote || (grouping && grouping.closer) || undefined,\n    hinter,\n    open = (grouping && grouping.open) || undefined,\n    close = (grouping && grouping.close) || undefined,\n  }) {\n    return {syntax, goal, punctuator, spans, matcher, quotes, punctuators, opener, closer, hinter, open, close};\n  }\n}\n","﻿export const TOKENIZERS = 'tokenizers';\nexport const MAPPINGS = 'mappings';\nexport const MODES = 'modes';\n\nconst none = {\n  syntax: 'markup',\n  matcher: /([\\s\\n]+)|(\\\\(?:(?:\\\\\\\\)*\\\\|[^\\\\\\s])?|\\/\\/+|\\/\\*+|\\*+\\/|\\(|\\)|\\[|\\]|,|;|\\.\\.\\.|\\.|\\b:\\/\\/\\b|::|:|\\?|`|\"|'|\\$\\{|\\{|\\}|=>|<\\/|\\/>|\\++|\\-+|\\*+|&+|\\|+|=+|!={0,3}|<{1,3}=?|>{1,2}=?)|[+\\-*/&|^%<>~!]=?/g,\n};\n\nconst define = (instance, property, value, options) => {\n  if (!instance.hasOwnProperty(property))\n    return (\n      Object.defineProperty(instance, property, {\n        value,\n        writable: (options && options.writable === true) || false,\n        configurable: (options && options.configurable === true) || false,\n        enumerable: !options || options.enumerable === true,\n      }),\n      value\n    );\n};\n\n/** The identity empty immutable iterable for debugging. */\nconst EmptyTokenArray = (EmptyTokenArray =>\n  Object.freeze(\n    new (Object.freeze(Object.freeze(Object.setPrototypeOf(EmptyTokenArray.prototype, null)).constructor, null))(),\n  ))(\n  class EmptyTokenArray {\n    *[Symbol.iterator]() {}\n  },\n);\n\n/**\n * Returns the first occurance of a sequence in the string\n * starting from the index (or 0 where undefined), always\n * returning -1 or the index of the occurance.\n *\n * @see https://tc39.es/ecma262/#sec-string.prototype.indexof\n * @type {(string: string, sequence: string , index?: number) => number}\n */\nexport const indexOf = Function.call.bind(String.prototype.indexOf);\n\n/**\n * Returns the total number of `\\n` sequences in the string.\n *\n * @type {(string: string) => number}\n */\nexport const countLineBreaks = text => {\n  let lineBreaks = 0;\n  for (let index = -1; (index = indexOf(text, '\\n', index + 1)) !== -1; lineBreaks++);\n  return lineBreaks;\n};\n\nexport const createBaselineTokenizer = () => {\n  return class Tokenizer {\n    *tokenize(sourceText) {\n      let match, lastIndex;\n      const matcher = RegExp(none.matcher);\n      const string = String(sourceText || '');\n\n      lastIndex = 0;\n      while ((match = matcher.exec(string))) {\n        const {0: text, index} = match;\n        const pre = lastIndex < index && string.slice(lastIndex, index);\n        lastIndex = matcher.lastIndex;\n        pre && (yield {text: pre, lineBreaks: countLineBreaks(pre)});\n        yield {text, lineBreaks: countLineBreaks(text)};\n      }\n    }\n  };\n};\n\n/** @param {typeof import('./tokenizer.js')['Tokenizer']} [Tokenizer] */\nexport const createParser = (Tokenizer = createBaselineTokenizer()) =>\n  class Parser {\n    constructor(options) {\n      if (options) {\n        const {mode, tokenizer, url, modes} = options;\n        if (mode) {\n          this.register((this.mode = mode));\n          tokenizer && this[TOKENIZERS].set(mode, tokenizer);\n        }\n        if (modes) for (const id in modes) this.register(modes[id]);\n        url && (this.MODULE_URL = url);\n      }\n    }\n\n    /**\n     * @param source {string}\n     * @param state {{sourceType?: string}}\n     */\n    tokenize(source, state = {}) {\n      const {\n        options: {\n          sourceType,\n          mode = (state.options.mode = (sourceType && this.get(sourceType)) || this.mode || none),\n        } = (state.options = {}),\n      } = state;\n      let tokenizer = mode && this[TOKENIZERS].get(mode);\n      if (!source || !mode) return EmptyTokenArray;\n      if (!tokenizer) {\n        if (typeof Tokenizer !== 'function') {\n          throw TypeError(\n            `Parse factory expected the first argument to be a Tokenizer constructor (not ${typeof Tokenizer}) — either define a tokenizer mapping for \"${sourceType ||\n              mode.syntax ||\n              'markup'}\" or pass the a constructor to the factory.`,\n          );\n        }\n        this[TOKENIZERS].set(mode, (tokenizer = new Tokenizer(mode)));\n      }\n      state.parser = this;\n      state.tokenize = (this.hasOwnProperty('tokenize') && this.tokenize) || (this.tokenize = this.tokenize.bind(this));\n      return tokenizer.tokenize(source, state);\n    }\n\n    get [TOKENIZERS]() {\n      return define(this, TOKENIZERS, new WeakMap());\n    }\n    get [MAPPINGS]() {\n      return define(this, MAPPINGS, Object.create(null));\n    }\n\n    get [MODES]() {\n      return define(this, MODES, Object.create(null));\n    }\n\n    get(id = 'default') {\n      const {[MAPPINGS]: mappings, [MODES]: modes} = this;\n      if (id in modes) return modes[id];\n      let mapping = mappings[id];\n      !mapping || mapping.syntax === id || (mapping = mappings[mapping.syntax]);\n      if (mapping) {\n        const {syntax, mode, factory, options} = mapping;\n        if (mode) {\n          return (modes[id] = mode);\n        }\n        if (factory) {\n          if (options.requires && options.requires.length > 0) {\n            const list = [];\n            for (const id of options.requires) id in modes || this.get(id) || list.push(id);\n            if (list.length) {\n              list.length > 1 && list.push(list.splice(-2, 2).join(' and '));\n              throw Error(`Cannot initialize \"${syntax}\" which requires the list mode(s): ${list.join(', ')}`);\n            }\n          }\n          return (mapping.mode = modes[id] = factory(options, modes));\n        }\n      }\n    }\n\n    /** @param {ModeFactory | Parser.Mode} mode @param {Parser.Mode.Options} [options] */\n    register(mode, options) {\n      if (!this[MAPPINGS]) return;\n\n      const {[MAPPINGS]: mappings, [MODES]: modes} = this;\n      const factory = typeof mode === 'function' && mode;\n      const {syntax, aliases = (options.aliases = []), preregister, tokenizer} = ({\n        syntax: options.syntax = mode.syntax,\n      } = options = {\n        syntax: undefined,\n        ...(factory ? factory.defaults : mode),\n        ...options,\n      });\n\n      if (!syntax || typeof syntax !== 'string') {\n        throw TypeError(`Cannot register \"${syntax}\" since it not valid string'`);\n      }\n\n      if (preregister) preregister(this);\n\n      if (mappings[syntax]) {\n        if (factory ? factory === mappings[syntax].factory : mode === modes[syntax]) return;\n        throw ReferenceError(`Cannot register \"${syntax}\" since it is already registered`);\n      }\n\n      const ids = [syntax];\n\n      if (aliases && aliases.length > 0) {\n        for (const alias of aliases) {\n          const mapping = mappings[alias];\n          if (!alias || typeof alias !== 'string') {\n            throw TypeError(`Cannot register \"${syntax}\" since it's alias \"${alias}\" not valid string'`);\n          }\n\n          if (alias in modes || (mapping && (mapping.syntax === alias || mapping.syntax[0] === alias[0]))) {\n            continue;\n          }\n\n          if (mapping) {\n            Object.defineProperty(mappings, alias, {writable: true, configurable: true});\n            delete mappings[alias];\n            ids.push(alias);\n          }\n\n          ids.push(alias);\n        }\n      }\n\n      const mapping = factory ? {syntax, factory, options} : {syntax, mode, options};\n      const descriptor = {value: mapping, writable: false, configurable: true};\n\n      for (const id of ids) Object.defineProperty(mappings, id, descriptor);\n\n      if (tokenizer) this[TOKENIZERS].set(mode, tokenizer);\n    }\n\n    unregister(id) {\n      const {[MAPPINGS]: mappings, [MODES]: modes} = this;\n      if (id in modes) {\n        throw ReferenceError(`Cannot unregister \"${id}\" since it's already been bootstrapped for use.`);\n      }\n      Object.defineProperty(mappings, id, {writable: true, configurable: true});\n      delete mappings[id];\n    }\n\n    /** @param {string} mode @param {string[]} requires */\n    requires(mode, requires) {\n      const missing = [];\n      for (const mode of requires) {\n        mode in this[MAPPINGS] || missing.push(`\"${mode}\"`);\n      }\n      if (!missing.length) return;\n      throw Error(`Cannot initialize \"${mode}\" which requires the missing mode(s): ${missing.join(', ')}`);\n    }\n  };\n\n/**\n * @typedef { ReturnType<createParser> } Parser\n * @typedef { Partial<{syntax: string, matcher: RegExp, [name:string]: Set | Map | {[name:string]: Set | Map | RegExp} }> } Parser.Mode\n * @typedef { {[name: string]: Parser.Mode} } Parser.Modes\n * @typedef { {[name: string]: {syntax: string} } } Parser.Mappings\n * @typedef { {aliases?: string[], syntax: string} } Parser.Mode.Options\n * @typedef { (options: Parser.Mode.Options, modes: Parser.Modes) => Parser.Mode } ModeFactory\n */\n","import {Tokenizer} from './tokenizer.js';\nimport {createParser} from '../core.js';\n\nexport {TOKENIZERS, MAPPINGS, MODES} from '../core.js';\n\nexport const Parser = createParser(Tokenizer);\n\n/**\n * @typedef { Partial<{syntax: string, matcher: RegExp, [name:string]: Set | Map | {[name:string]: Set | Map | RegExp} }> } Mode\n * @typedef { {[name: string]: Mode} } Modes\n * @typedef { {[name: string]: {syntax: string} } } Mappings\n * @typedef { {aliases?: string[], syntax: string} } ModeOptions\n * @typedef { (options: ModeOptions, modes: Modes) => Mode } ModeFactory\n */\n","export * from './lib/legacy/parser.js';\nexport * from './lib/legacy/tokenizer.js';\nimport {Parser} from './lib/legacy/parser.js';\n\nexport default new Parser({url: import.meta.url});\n","import {Symbols, Closures, identifier} from '../common/helpers.js';\n\nexport const css = Object.defineProperties(\n  ({syntax} = css.defaults) => ({\n    syntax,\n    comments: Closures.from('/*…*/'),\n    closures: Closures.from('{…} (…) […]'),\n    quotes: Symbols.from(`' \"`),\n    keywords: Symbols.from(css.KEYWORDS),\n    combinators: Symbols.from('--'),\n    operators: Symbols.from('> . : , - + / *'),\n    breakers: Symbols.from(';'),\n    patterns: {\n      maybeIdentifier: /^--\\S+$/,\n    },\n    matcher: /(\\n|\\s+)|(\\\\(?:(?:\\\\\\\\)*\\\\|[^\\\\\\s])?|\\/\\*|\\*\\/|\\(|\\)|\\[|\\]|\"|'|\\{|\\}|,|;|\\.|\\b:\\/\\/\\b|\\+|\\B-(?![a-z]*-)|\\*|\\/|>|:(?![-a-z:]))|#[0-9a-fA-F]{8}|#[0-9a-fA-F]{6}|#[0-9a-fA-F]{4}|#[0-9a-fA-F]{3}|::?[a-z][a-z-]+|@[a-z][a-z-]+|[-\\w]+|[^\\s\\n]/gi,\n    matchers: {\n      quote: /(\\n)|(\\\\(?:(?:\\\\\\\\)*\\\\|[^\\\\\\s])?|\\*\\/|`|\"|'|\\$\\{)/g,\n      comment: /(\\n)|(\\*\\/|\\b(?:[a-z]+\\:\\/\\/|\\w[\\w\\+\\.]*\\w@[a-z]+)\\S+|@[a-z]+)/gi,\n    },\n  }),\n  {\n    defaults: {value: {syntax: 'css'}},\n  },\n);\n\ncss.KEYWORDS = {\n  ['(symbols)']:\n    ':active additive-symbols ::after align-content align-items align-self all animation animation-delay animation-direction animation-duration animation-fill-mode animation-iteration-count animation-name animation-play-state animation-timing-function @annotation annotation attr ::backdrop backface-visibility background background-attachment background-blend-mode background-clip background-color background-image background-origin background-position background-repeat background-size ::before block-size blur border border-block border-block-color border-block-end border-block-end-color border-block-end-style border-block-end-width border-block-start border-block-start-color border-block-start-style border-block-start-width border-block-style border-block-width border-bottom border-bottom-color border-bottom-left-radius border-bottom-right-radius border-bottom-style border-bottom-width border-collapse border-color border-end-end-radius border-end-start-radius border-image border-image-outset border-image-repeat border-image-slice border-image-source border-image-width border-inline border-inline-color border-inline-end border-inline-end-color border-inline-end-style border-inline-end-width border-inline-start border-inline-start-color border-inline-start-style border-inline-start-width border-inline-style border-inline-width border-left border-left-color border-left-style border-left-width border-radius border-right border-right-color border-right-style border-right-width border-spacing border-start-end-radius border-start-start-radius border-style border-top border-top-color border-top-left-radius border-top-right-radius border-top-style border-top-width border-width bottom @bottom-center box-decoration-break box-shadow box-sizing break-after break-before break-inside brightness calc caption-side caret-color ch @character-variant character-variant @charset :checked circle clamp clear clip clip-path cm color color-adjust column-count column-fill column-gap column-rule column-rule-color column-rule-style column-rule-width column-span column-width columns conic-gradient content contrast counter-increment counter-reset counter-set @counter-style counters cross-fade cubic-bezier ::cue cursor :default deg :dir direction :disabled display dpcm dpi dppx drop-shadow element ellipse em :empty empty-cells :enabled env ex fallback filter :first :first-child ::first-letter ::first-line :first-of-type fit-content flex flex-basis flex-direction flex-flow flex-grow flex-shrink flex-wrap float :focus font @font-face font-family font-family font-feature-settings font-feature-settings @font-feature-values font-kerning font-language-override font-optical-sizing font-size font-size-adjust font-stretch font-stretch font-style font-style font-synthesis font-variant font-variant font-variant-alternates font-variant-caps font-variant-east-asian font-variant-ligatures font-variant-numeric font-variant-position font-variation-settings font-weight font-weight format fr :fullscreen gap grad grayscale grid grid-area grid-auto-columns grid-auto-flow grid-auto-rows grid-column grid-column-end grid-column-start grid-row grid-row-end grid-row-start grid-template grid-template-areas grid-template-columns grid-template-rows Hz hanging-punctuation height height @historical-forms :host :hover hsl hsla hue-rotate hyphens image image-orientation image-rendering image-set @import in :in-range :indeterminate inherit initial inline-size inset inset inset-block inset-block-end inset-block-start inset-inline inset-inline-end inset-inline-start :invalid invert isolation justify-content justify-items justify-self kHz @keyframes :lang :last-child :last-of-type leader :left left @left-bottom letter-spacing line-clamp line-break line-height linear-gradient :link list-style list-style-image list-style-position list-style-type local margin margin-block margin-block-end margin-block-start margin-bottom margin-inline margin-inline-end margin-inline-start margin-left margin-right margin-top ::marker mask mask-clip mask-composite mask-image mask-mode mask-origin mask-position mask-repeat mask-size mask-type matrix matrix3d max max-height max-height max-width max-width max-zoom @media min min-block-size min-height min-height min-inline-size min-width min-width min-zoom minmax mix-blend-mode mm ms @namespace negative :not :nth-child :nth-last-child :nth-last-of-type :nth-of-type object-fit object-position :only-child :only-of-type opacity opacity :optional order orientation @ornaments ornaments orphans :out-of-range outline outline-color outline-offset outline-style outline-width overflow overflow-wrap overflow-x overflow-y pad padding padding-block padding-block-end padding-block-start padding-bottom padding-inline padding-inline-end padding-inline-start padding-left padding-right padding-top @page page-break-after page-break-before page-break-inside paint pc perspective perspective perspective-origin place-content place-items place-self ::placeholder pointer-events polygon position prefix pt px quotes rad radial-gradient range :read-only :read-write rect rem repeat repeating-linear-gradient repeating-radial-gradient :required resize revert rgb rgba :right right @right-bottom :root rotate rotate rotate3d rotateX rotateY rotateZ row-gap saturate scale scale scale3d scaleX scaleY scaleZ :scope scroll-behavior scroll-margin scroll-margin-block scroll-margin-block-end scroll-margin-block-start scroll-margin-bottom scroll-margin-inline scroll-margin-inline-end scroll-margin-inline-start scroll-margin-left scroll-margin-right scroll-margin-top scroll-padding scroll-padding-block scroll-padding-block-end scroll-padding-block-start scroll-padding-bottom scroll-padding-inline scroll-padding-inline-end scroll-padding-inline-start scroll-padding-left scroll-padding-right scroll-padding-top scroll-snap-align scroll-snap-stop scroll-snap-type scrollbar-color scrollbar-width ::selection selector sepia shape-image-threshold shape-margin shape-outside skew skewX skewY ::slotted speak-as src steps @styleset styleset @stylistic stylistic suffix @supports @swash swash symbols symbols system tab-size table-layout :target target-counter target-counters target-text text-align text-align-last text-combine-upright text-decoration text-decoration-color text-decoration-line text-decoration-style text-decoration-thickness text-emphasis text-emphasis-color text-emphasis-position text-emphasis-style text-indent text-justify text-orientation text-overflow text-rendering text-shadow text-transform text-underline-offset text-underline-position top @top-center touch-action transform transform-box transform-origin transform-style transition transition-delay transition-duration transition-property transition-timing-function translate translate translate3d translateX translateY translateZ turn unicode-bidi unicode-range unset url user-zoom user-select user-drag -webkit-user-select -moz-user-select :valid var vertical-align vh @viewport visibility :visited vmax vmin vw white-space widows width width will-change word-break word-spacing word-wrap writing-mode z-index zoom -webkit-margin-start -webkit-margin-end -webkit-margin-before -webkit-margin-after -webkit-padding-start -webkit-padding-end -webkit-padding-before -webkit-padding-after -webkit-justify-items -webkit-justify-content -webkit-align-content -webkit-align-items -webkit-align-self -webkit-alt -webkit-animation -webkit-animation-delay -webkit-animation-direction -webkit-animation-duration -webkit-animation-fill-mode -webkit-animation-iteration-count -webkit-animation-name -webkit-animation-play-state -webkit-animation-timing-function -webkit-appearance -webkit-aspect-ratio -webkit-backdrop-filter -webkit-backface-visibility -webkit-backdrop-filter -webkit-backface-visibility -webkit-background-clip -webkit-background-composite -webkit-background-origin -webkit-background-size -webkit-border-after -webkit-border-after-color -webkit-border-after-style -webkit-border-after-width -webkit-border-before -webkit-border-before-color -webkit-border-before-style -webkit-border-before-width -webkit-border-bottom-left-radius -webkit-border-bottom-right-radius -webkit-border-end -webkit-border-end-color -webkit-border-end-style -webkit-border-end-width -webkit-border-fit -webkit-border-horizontal-spacing -webkit-border-image -webkit-border-radius -webkit-border-start -webkit-border-start-color -webkit-border-start-style -webkit-border-start-width -webkit-border-top-left-radius -webkit-border-top-right-radius -webkit-border-vertical-spacing -webkit-box-align -webkit-box-decoration-break -webkit-box-direction -webkit-box-flex -webkit-box-flex-group -webkit-box-lines -webkit-box-ordinal-group -webkit-box-orient -webkit-box-pack -webkit-box-reflect -webkit-box-shadow -webkit-box-sizing -webkit-clip-path -webkit-box-sizing -webkit-box-shadow -webkit-box-reflect -webkit-box-pack -webkit-box-reflect -webkit-box-shadow -webkit-box-sizing -webkit-clip-path -webkit-column-axis -webkit-column-break-after -webkit-column-break-before -webkit-column-break-inside -webkit-column-count -webkit-column-fill -webkit-column-gap -webkit-column-progression -webkit-column-rule -webkit-column-rule-color -webkit-column-rule-style -webkit-column-rule-width -webkit-column-span -webkit-column-width -webkit-columns -webkit-cursor-visibility -webkit-filter -webkit-flex -webkit-flex-basis -webkit-flex-direction -webkit-flex-flow -webkit-flex-grow -webkit-flex-shrink -webkit-flex-wrap -webkit-flex-shrink -webkit-flex-wrap -webkit-font-kerning -webkit-font-smoothing -webkit-hyphenate-character -webkit-hyphenate-limit-after -webkit-hyphenate-limit-before -webkit-hyphenate-limit-lines -webkit-hyphens -webkit-hyphenate-limit-lines -webkit-hyphenate-limit-before -webkit-hyphenate-limit-after -webkit-hyphenate-character -webkit-font-smoothing -webkit-hyphenate-character -webkit-hyphenate-limit-after -webkit-hyphenate-limit-before -webkit-hyphenate-limit-lines -webkit-hyphenate-limit-before -webkit-hyphenate-limit-after -webkit-hyphenate-character -webkit-hyphenate-limit-after -webkit-hyphenate-character -webkit-font-smoothing -webkit-font-kerning -webkit-flex-wrap -webkit-font-kerning -webkit-font-smoothing -webkit-hyphenate-character -webkit-hyphenate-limit-after -webkit-hyphenate-limit-before -webkit-hyphenate-limit-lines -webkit-hyphens -webkit-initial-letter -webkit-hyphens -webkit-hyphenate-limit-lines -webkit-hyphenate-limit-before -webkit-hyphenate-limit-after -webkit-hyphenate-character -webkit-font-smoothing -webkit-font-kerning -webkit-flex-wrap -webkit-flex-shrink -webkit-flex-grow -webkit-flex-flow -webkit-flex-direction -webkit-flex-flow -webkit-flex-grow -webkit-flex-shrink -webkit-flex-wrap -webkit-font-kerning -webkit-font-smoothing -webkit-hyphenate-character -webkit-hyphenate-limit-after -webkit-hyphenate-limit-before -webkit-hyphenate-limit-lines -webkit-hyphens -webkit-initial-letter -webkit-justify-content -webkit-justify-items -webkit-line-align -webkit-line-box-contain -webkit-line-align -webkit-line-box-contain -webkit-line-break -webkit-line-clamp -webkit-line-break -webkit-line-box-contain -webkit-line-align -webkit-line-align -webkit-line-align -webkit-line-align -webkit-line-align -webkit-line-align -webkit-text-size-adjust',\n};\n","import {Closures, Symbols, raw} from '../common/helpers.js';\n\nexport const html = Object.defineProperties(\n  ({syntax} = html.defaults) => {\n    const html = {\n      syntax,\n      keywords: Symbols.from('DOCTYPE doctype'),\n      comments: Closures.from('<!--…-->'),\n      closures: Closures.from('<?…?> <!…> <…/> </…> <…>'),\n      quotes: [],\n      patterns: {\n        maybeKeyword: /^[a-z](\\w*)$/i,\n        closeTag: /<\\/\\w[^<>{}]*?>/g,\n        // maybeIdentifier: /^(?:(?:[a-z][\\-a-z]*)?[a-z]+\\:)?(?:[a-z][\\-a-z]*)?[a-z]+$/,\n      },\n      matcher: /(\\n|\\s+)|(\"|'|=|&#x?[a-f0-9]+;|&[a-z]+;|\\/?>|<\\?|\\?>|<!--|-->|<[\\/\\!]?(?=[a-z]+\\:?[a-z\\-]*[a-z]|[a-z]+))/gi,\n      matchers: {\n        quote: /(\\n)|(\\\\(?:(?:\\\\\\\\)*\\\\|[^\\\\\\s])|\"|')/g,\n        comment: /(\\n)|(-->)/g,\n      },\n    };\n\n    const DOCTAGS = Symbols.from('SCRIPT STYLE');\n    const TAG = /^[a-z]+$/i;\n    // TODO: Check if custom/namespace tags ever need special close logic\n    // const TAGLIKE = /^(?:(?:[a-z][\\-a-z]*)?[a-z]+\\:)?(?:[a-z][\\-a-z]*)?[a-z]+$/i;\n\n    const HTMLTagClosure = html.closures.get('<');\n\n    HTMLTagClosure.patterns = html.patterns;\n\n    HTMLTagClosure.close = (next, state, context) => {\n      let parent = next && next.parent;\n      // TODO: Fix parent broken when HTMLTagClosure.punctuation {'='}\n      //       This is a temporary workaround (maybe)\n      if (parent.text !== '<') {\n        let previous = next.previous;\n        while (previous && !(previous.text === '<' && previous.punctuator === 'opener')) previous = previous.previous;\n        if (previous) next.parent = parent = previous;\n      }\n      const first = parent && parent.next;\n      const tag = first && first.text && TAG.test(first.text) && first.text.toUpperCase();\n\n      if (tag && DOCTAGS.includes(tag)) {\n        let {source, index} = state;\n        const $$matcher = html.patterns.closeTag;\n\n        let match;\n        $$matcher.lastIndex = index;\n\n        // TODO: Check if `<script>`…`</SCRIPT>` is still valid!\n        const $$closer = new RegExp(raw`^<\\/(?:${first.text.toLowerCase()}|${tag})\\b`);\n\n        let syntax = (tag === 'STYLE' && 'css') || '';\n\n        if (!syntax) {\n          const openTag = source.slice(parent.offset, index);\n          const match = /\\stype=.*?\\b(.+?)\\b/.exec(openTag);\n          syntax = tag === 'SCRIPT' && (!match || !match[1] || /^module$|javascript/i.test(match[1])) ? 'es' : '';\n        }\n\n        while ((match = $$matcher.exec(source))) {\n          if ($$closer.test(match[0])) {\n            if (syntax) {\n              return {offset: index, index: match.index, syntax};\n            } else {\n              const offset = index;\n              const text = source.slice(offset, match.index - 1);\n              state.index = match.index;\n              return [{text, offset, previous: next, parent}];\n            }\n          }\n        }\n      }\n    };\n    HTMLTagClosure.quotes = Symbols.from(`' \"`);\n    HTMLTagClosure.closer = /\\/?>/;\n    HTMLTagClosure.punctuation = {'=': 'assigner'};\n\n    return html;\n  },\n  {\n    defaults: {value: {syntax: 'html', aliases: ['htm']}},\n  },\n);\n","import {previousTextFrom, indenter, Symbols, Closures, sequence, escape, all, raw} from '../common/helpers.js';\n\nexport const markdown = Object.defineProperties(\n  ({syntax} = defaults, {html}) => {\n    const EMBEDDED = true;\n    const matcher = new RegExp(markdown.MATCHER.source, markdown.MATCHER.flags);\n\n    const mode = {\n      syntax,\n      comments: Closures.from('<!--…-->'),\n      quotes: [],\n      operators: markdown.OPERATORS,\n      closures: Closures.from(html.closures, markdown.CLOSURES),\n      matcher: matcher,\n      spans: Closures.from('``…`` `…`'),\n      matchers: {comment: /(\\n)|(-->)/g},\n    };\n\n    const open = (parent, state, grouper) => {\n      const {source, index: start} = state;\n      const fence = parent.text;\n      const fencing = previousTextFrom(parent, '\\n');\n      const indenting = fencing.slice(fencing.indexOf('\\n') + 1, -fence.length) || '';\n      let end = source.indexOf(`\\n${fencing}`, start);\n      const INDENT = (indenting && indenter(indenting)) || /^/m;\n      const CLOSER = new RegExp(raw`^${INDENT.source.slice(1) || ''}${fence}`, 'mg');\n\n      CLOSER.lastIndex = start;\n      let closerMatch = CLOSER.exec(source);\n      if (closerMatch && closerMatch.index >= start) {\n        end = closerMatch.index;\n      } else {\n        const FENCE = new RegExp(raw`^[\\>\\|\\s]*${fence}`, 'mg');\n        FENCE.lastIndex = start;\n        const fenceMatch = FENCE.exec(source);\n        if (fenceMatch && fenceMatch.index >= start) {\n          end = fenceMatch.index;\n        } else return;\n      }\n\n      if (end > start) {\n        let offset = start;\n        let text, head, lines;\n\n        const body = source.slice(start, end) || '';\n        const tokens = [];\n        tokens.end = end;\n        if (!EMBEDDED) {\n          text = body;\n          tokens.push({text, type: 'code', offset, parent});\n          offset += body.length;\n        } else {\n          [head, ...lines] = body.split(/\\r?(\\n)\\r?/g);\n          if (head) {\n            tokens.push({text: head, type: 'comment', offset, parent}), (offset += head.length);\n          }\n          for (const line of lines) {\n            if (line === '\\n') {\n              text = line;\n              tokens.push({text, type: 'whitespace', offset, parent}), (offset += text.length);\n            } else {\n              const [indent] = INDENT.exec(line) || '';\n              const inset = (indent && indent.length) || 0;\n              if (inset) {\n                for (const text of indent.split(/(\\s+)/g)) {\n                  if (!text) continue;\n                  const type = (text.trim() && 'sequence') || 'whitespace';\n                  tokens.push({text, type, offset, parent});\n                  offset += text.length;\n                }\n                text = line.slice(inset) || '';\n              } else {\n                text = line;\n              }\n              if (text) {\n                tokens.push({text, type: 'code', offset, parent}), (offset += text.length);\n              }\n            }\n          }\n        }\n\n        if (tokens.length) {\n          const last = tokens[tokens.length - 1];\n          last.text || tokens.pop();\n          return tokens;\n        }\n      }\n    };\n\n    {\n      const quotes = html.closures.get('<').quotes;\n      for (const opener of ['```', '~~~']) {\n        const FenceClosure = mode.closures.get(opener);\n        if (FenceClosure) {\n          FenceClosure.matcher = new RegExp(raw`/(\\s*\\n)|(${opener}(?=\\s|$)|^(?:[\\s>|]*\\s)?\\s*)|.*$`, 'gm');\n          FenceClosure.quotes = quotes;\n          FenceClosure.open = open;\n        }\n      }\n    }\n\n    return mode;\n  },\n  {\n    defaults: {get: () => ({...markdown.DEFAULTS})},\n  },\n);\n\nDefinitions: {\n  Defaults: {\n    markdown.DEFAULTS = {syntax: 'markdown', aliases: ['md'], requires: ['html']};\n  }\n\n  markdown.BLOCK = '```…``` ~~~…~~~';\n  markdown.INLINE = '[…] (…)'; // *…* **…** _…_ __…__ ~…~ ~~…~~\n  markdown.CLOSURES = `${markdown.BLOCK} ${markdown.INLINE}`;\n\n  // Partials are first character used in production forms (like `###`)\n  //   which need to be properly typed by the tokenizer\n  markdown.PARTIALS = Symbols.from(raw`< # >`);\n\n  // Punctuation is used to define both ESCAPES and OPERATORS which\n  //   requires the fine-grained intersection that excludes partials.\n  markdown.PUNCTUATION = Symbols.from(raw`< # > ! \" $ % & ' ( ) * + , - . / : ; = ? @ [ \\ ] ^ _ ${'`'} { | } ~`);\n\n  // Operators are productions and their escaped forms.\n  markdown.OPERATORS = Symbols.from(\n    raw`** * ~~ ~  __ _ ###### ##### #### ### ## # [ ] ( ) ${[...markdown.PUNCTUATION].map(s => `\\\\${s.repeat(2)} ${s.repeat(2)} \\\\${s}`).join(' ')}`,\n  );\n\n  markdown.MATCHER = sequence`${all(\n    sequence`(${(markdown.WHITESPACE = /^\\s+|\\s+$|\\n+/)})`,\n    sequence`(${all(\n      (markdown.ESCAPES = sequence`${all(\n        ...[...markdown.PUNCTUATION].map(s => raw`\\\\${escape(s).repeat(2)}|\\\\${escape(s)}`),\n      )}|\\\\.${'/gu'}`),\n      (markdown.ENTITIES = /&#x?[a-f0-9]+;|&[a-z]+;/u),\n      (markdown.INLINES = /((?:\\b|\\B)[*~]{1,2}|[*~]{1,2}(?:\\b|\\B)|\\b_{1,2}|_{1,2}\\b)/u),\n      (markdown.RULES = /(?:[-]{2,}|[=]{2,})(?=\\s*$)/u),\n      (markdown.BLOCKS = /(?:\\B#{1,6}|-|\\b\\d+\\.|\\b[a-z]\\.|\\b[ivx]+\\.)(?=\\s+\\S)/u),\n      (markdown.TYPOGRAPHS = /\\B–(?= )|\"|'|=/u),\n      (markdown.TAGS = /\\/>|<\\?|\\?>|<!--|-->|<[/!]?(?=[a-z]+:?[-a-z]*[a-z]|[a-z]+)/u),\n      (markdown.BRACKETS = /<|>|\\(|\\)|\\[|\\]/u),\n      (markdown.FENCES = /(?:\\x60{3,}|\\x7E{3,})(?=\\b| |$)/u),\n      (markdown.SPANS = /(``?(?![`\\n]))[^\\n]*?[^\\\\`\\n]\\4/),\n    )})`,\n    (markdown.INDICIES = /\\b(?:[\\da-zA-Z]+\\.)+[\\da-zA-Z]+\\.?/u),\n    (markdown.DECIMAL = /[-+]?\\d+(?:,\\d{3})*(?:\\.\\d+)?|[-+]?\\d*\\.\\d+/u),\n    (markdown.EXPONENTIAL = /\\d+[eE]-?\\d+|\\d+\\.\\d+[eE]-?\\d+/u),\n    (markdown.FRAGMENTS = /\\b[^\\\\\\n\\s\\][)(><&`\"*~]*[^\\\\\\n\\s\\][)(><&`\"*~_]\\b|[^\\\\\\n\\s\\][)(><&`\"*~]+?(?=__?\\b)/),\n  )}${'/guim'}`;\n}\n","import {Closures, Symbols, identifier, sequence, all} from '../common/helpers.js';\nimport {patterns, entities} from '../common/patterns.js';\n\nexport const javascript = Object.defineProperties(\n  ({syntax} = defaults) => ({\n    syntax,\n    comments: Closures.from(javascript.COMMENTS),\n    quotes: Symbols.from(javascript.QUOTES),\n    closures: Closures.from(javascript.CLOSURES),\n    spans: {'`': Closures.from(javascript.SPANS['`'])},\n    keywords: Symbols.from(javascript.KEYWORDS),\n    assigners: Symbols.from(javascript.ASSIGNERS),\n    combinators: Symbols.from(javascript.COMBINATORS),\n    nonbreakers: Symbols.from(javascript.NONBREAKERS),\n    operators: Symbols.from(javascript.OPERATORS),\n    breakers: Symbols.from(javascript.BREAKERS),\n    patterns: {\n      ...patterns,\n      maybeIdentifier: identifier(entities.es.IdentifierStart, entities.es.IdentifierPart),\n      maybeKeyword: /^[a-z][a-zA-Z]+$/,\n      segments: {\n        regexp: /^\\/(?![\\n*+/?])[^\\n]*[^\\\\\\n]\\//,\n      },\n    },\n    matcher: sequence`(\\n|\\s+)|(${all(\n      javascript.REGEXPS,\n      javascript.COMMENTS,\n      javascript.QUOTES,\n      javascript.CLOSURES,\n      ...javascript.PUNCTUATORS,\n    )})`,\n    matchers: {\n      \"'\": /(\\n)|(')|(\\\\.)/g,\n      '\"': /(\\n)|(\")|(\\\\.)/g,\n      '`': /(\\n)|(`|\\$\\{)|(\\\\.)/g,\n      quote: /(\\n)|(`|\"|'|\\$\\{)|(\\\\.)/g,\n      comment: /(\\n)|(\\*\\/|\\b(?:[a-z]+\\:\\/\\/|\\w[\\w+.]*\\w@[a-z]+)\\S+|@[a-z]+)/gi,\n    },\n  }),\n  {\n    defaults: {get: () => ({...javascript.DEFAULTS})},\n  },\n);\n\njavascript.DEFAULTS = {syntax: 'javascript', aliases: ['js', 'es', 'ecmascript']};\n\njavascript.REGEXPS = /\\/(?=[^*/\\n][^\\n]*\\/(?:[a-z]+\\b|)(?:[ \\t]+[^\\n\\s\\(\\[\\{\\w]|[.\\[;,]|[ \\t]*[)\\]};,\\n]|\\n|$))(?:[^\\\\\\/\\n\\t\\[]+|\\\\[^\\n]|\\[(?:\\\\[^\\n]|[^\\\\\\n\\t\\]]+)*?\\][+*]?\\??)*\\/(?:[a-z]+\\b|)/g;\n\njavascript.COMMENTS = /\\/\\/|\\/\\*|\\*\\/|^\\#\\!.*\\n|<!--/g;\njavascript.COMMENTS['(closures)'] = '//…\\n /*…*/ <!--…\\n';\n\njavascript.QUOTES = /`|\"|'/g;\njavascript.QUOTES['(symbols)'] = `' \" \\``;\n\njavascript.CLOSURES = /\\{|\\}|\\(|\\)|\\[|\\]/g;\njavascript.CLOSURES['(closures)'] = '{…} (…) […]';\n\njavascript.SPANS = {'`': {['(closures)']: '${…}'}};\n\njavascript.KEYWORDS = {\n  ['(symbols)']:\n    // 'abstract enum interface package namespace declare type module public protected ' +\n    'arguments as async await break case catch class export const continue private debugger default delete do else export extends finally for from function get if import in instanceof let new of return set static super switch this throw try typeof var void while with yield',\n};\n\njavascript.PUNCTUATORS = [\n  /,|;|\\.\\.\\.|\\.|:|\\?|=>/,\n  /\\+\\+|\\+=|\\+|--|-=|-|\\*\\*=|\\*\\*|\\*=|\\*|\\/=|\\//,\n  /&&|&=|&|\\|\\||\\|=|\\||%=|%|\\^=|\\^|~=|~/,\n  /<<=|<<|<=|<|>>>=|>>>|>>=|>>|>=|>/,\n  /!==|!=|!|===|==|=/,\n];\n\njavascript.ASSIGNERS = {['(symbols)']: '= += -= *= /= **= %= &= |= <<= >>= >>>= ^= ~='};\n\njavascript.COMBINATORS = {['(symbols)']: '=== == + - * / ** % & && | || ! !== != > < >= <= => >> << >>> ^ ~'};\njavascript.NONBREAKERS = {['(symbols)']: '.'};\njavascript.OPERATORS = {['(symbols)']: '++ -- ... ? :'};\njavascript.BREAKERS = {['(symbols)']: ', ;'};\n","﻿import {javascript} from '../javascript/javascript-grammar.js';\nimport {Symbols, sequence, raw, all} from '../common/helpers.js';\n\nexport const typescript = Object.defineProperties(\n  ({syntax} = typescript.defaults, {javascript}) => ({\n    ...javascript,\n    keywords: Symbols.from(typescript.KEYWORDS),\n  }),\n  {\n    defaults: {get: () => ({...typescript.DEFAULTS})},\n  },\n);\n\nDefinitions: {\n  Defaults: {\n    typescript.DEFAULTS = {syntax: 'typescript', aliases: ['ts'], requires: [javascript.defaults.syntax]};\n  }\n  typescript.KEYWORDS = {\n    ['(symbols)']: `abstract enum interface namespace declare type module private public protected ${\n      javascript.KEYWORDS['(symbols)']\n    }`,\n  };\n}\n","import {javascript} from './javascript-grammar.js';\nimport {Symbols, sequence, raw, all} from '../common/helpers.js';\n\nexport const mjs = Object.defineProperties(\n  ({syntax} = mjs.defaults, {javascript: {quotes, closures, spans, matchers}}) => ({\n    syntax,\n    keywords: Symbols.from('import export default'),\n    quotes,\n    closures,\n    spans,\n    matcher: javascript.extended.MJS,\n    matchers: {quote: matchers.quote, closure: javascript.extended.CLOSURE},\n  }),\n  {\n    defaults: {get: () => ({...mjs.DEFAULTS})},\n  },\n);\n\nexport const cjs = Object.defineProperties(\n  ({syntax} = cjs.defaults, {javascript: {quotes, closures, spans, matchers}}) => ({\n    syntax,\n    keywords: Symbols.from('import module exports require'),\n    quotes,\n    closures,\n    spans,\n    matcher: javascript.extended.CJS,\n    matchers: {quote: matchers.quote, closure: javascript.extended.CLOSURE},\n  }),\n  {\n    defaults: {get: () => ({...cjs.DEFAULTS})},\n  },\n);\n\nexport const esx = Object.defineProperties(\n  ({syntax} = esx.defaults, {javascript: {quotes, closures, spans, matchers}, mjs, cjs}) => ({\n    syntax,\n    keywords: Symbols.from(mjs.keywords, cjs.keywords),\n    quotes,\n    closures,\n    spans,\n    matcher: javascript.extended.ESX,\n    matchers: {quote: matchers.quote, closure: javascript.extended.CLOSURE},\n  }),\n  {\n    defaults: {get: () => ({...esx.DEFAULTS})},\n  },\n);\n\nmjs.DEFAULTS = {syntax: 'mjs', aliases: ['esm'], requires: [javascript.defaults.syntax]};\ncjs.DEFAULTS = {syntax: 'cjs', requires: [javascript.defaults.syntax]};\nesx.DEFAULTS = {syntax: 'esx', requires: [javascript.defaults.syntax, 'cjs', 'mjs']};\n\njavascript.extended = {};\n// TODO: Undo $ matching once fixed\njavascript.extended.QUOTES = /`|\"(?:[^\\\\\"]+|\\\\.)*(?:\"|$)|'(?:[^\\\\']+|\\\\.)*(?:'|$)/g;\njavascript.extended.COMMENTS = /\\/\\/.*(?:\\n|$)|\\/\\*[^]*?(?:\\*\\/|$)|^\\#\\!.*\\n|<!--/g;\njavascript.extended.STATEMENTS = all(\n  javascript.extended.QUOTES,\n  javascript.CLOSURES,\n  javascript.REGEXPS,\n  javascript.extended.COMMENTS,\n);\njavascript.extended.BLOCKLEVEL = sequence`(\\n|\\s+)|(${javascript.extended.STATEMENTS})`;\njavascript.extended.TOPLEVEL = sequence`(\\n|\\s+)|(${javascript.extended.STATEMENTS})`;\njavascript.extended.CLOSURE = sequence`(\\n+)|(${javascript.extended.STATEMENTS})`;\njavascript.extended.MJS = sequence`${javascript.extended.TOPLEVEL}|\\bexport\\b|\\bimport\\b`;\njavascript.extended.CJS = sequence`${javascript.extended.BLOCKLEVEL}|\\bexports\\b|\\bmodule.exports\\b|\\brequire\\b|\\bimport(?=\\(|\\.)`;\njavascript.extended.ESX = sequence`${javascript.extended.BLOCKLEVEL}|\\bexports\\b|\\bimport\\b|\\bmodule.exports\\b|\\brequire\\b`;\n","export * from './tokenizer.js';\nimport {Parser} from './tokenizer.js';\nimport {modes} from './extensions/extensions.js';\n\nexport {modes};\nexport default new Parser({url: import.meta.url, modes});\n","﻿//@ts-check\n\nclass TokenizerAPI {\n  /** @param {API.Options} [options] */\n  constructor(options) {\n    /** @type {API.Options} */\n    const {\n      parsers = [],\n      tokenize = /** @type {API.tokenize} */ ((source, options = {}, flags) => {\n        /** @type {{[name: string]: any} & TokenizerAPI.State} */\n        const state = new TokenizerAPI.State({options, flags: {}});\n        //@ts-ignore\n        const variant = !options.variant ? 1 : parseInt(options.variant);\n        const {[variant >= 1 && variant <= parsers.length ? variant - 1 : (options.variant = 0)]: parser} = parsers;\n        this.lastVariant === (this.lastVariant = variant) ||\n          variant <= parsers.length ||\n          console.warn(\n            '[tokenize‹parser›] Variant %O[%d] out of bounds — using default parser: %o',\n            parsers,\n            variant,\n            parser.MODULE_URL || {parser},\n          );\n        options.tokenize = parser.tokenize;\n        if (flags && (flags.length > 0 || flags.size > 0)) {\n          typeof flags === 'string' || (flags = [...flags].join(' '));\n          /\\bwarmup\\b/i.test(flags) && (state.flags.warmup = true);\n          /\\bdebug\\b/i.test(flags) && (state.flags.debug = true);\n        }\n\n        let returned = UNSET;\n        try {\n          this.lastParser === (this.lastParser = parser) ||\n            console.info('[tokenize‹parser›]: %o', parser.MODULE_URL || {parser});\n          //@ts-ignore\n          return (returned = parser.tokenize((this.lastSource = source), (this.lastState = state)));\n        } finally {\n          returned !== UNSET || !state.flags.debug || console.info('[tokenize‹state›]: %o', state);\n        }\n      }),\n\n      warmup = (source, options, flags) => {\n        const key = (options && JSON.stringify(options)) || '';\n        let cache = (this.cache || (this.cache = new Map())).get(key);\n        cache || this.cache.set(key, (cache = new Set()));\n        if (!cache.has(source)) {\n          cache.add(source);\n          flags = `warmup ${(flags &&\n            (flags.length > 0 || flags.size > 0) &&\n            (typeof flags === 'string' || flags instanceof String ? flags : [...flags].join(' '))) ||\n            ''}`;\n          const tokens = tokenize(source, options, flags);\n          const snapshot = {...this};\n          for (const item of tokens);\n          console.log('[tokenize‹warmup›]: %o', snapshot);\n        }\n      },\n\n      render,\n    } = options;\n\n    Object.defineProperties(this, {\n      tokenize: {get: () => tokenize},\n      warmup: {get: () => warmup},\n      render: {get: () => render},\n      parsers: {get: () => parsers},\n    });\n  }\n}\n\nObject.freeze(Object.setPrototypeOf(TokenizerAPI.prototype, null));\n\nTokenizerAPI.State = class State {\n  constructor(...properties) {\n    Object.assign(this, ...properties);\n  }\n};\n\nObject.freeze(Object.setPrototypeOf(TokenizerAPI.State.prototype, null));\n\nconst UNSET = Symbol('');\n\nexport {TokenizerAPI};\n\n/**\n * @typedef {import('./legacy/parser.js').Parser & {MODULE_URL?: string, tokenize?: API.tokenize}} Parser\n * @typedef {Partial<{variant?: number | string, fragment?: Fragment, [name: string]: any}>} Parser.Options\n */\n\n/**\n * @typedef {TokenizerAPI & {tokenize: API.tokenize, warmup: API.warmup, render: API.render, parsers: Parser[]}} API\n * @typedef {TokenizerAPI.State} API.State\n * @typedef {Partial<Pick<API, 'tokenize' | 'warmup' | 'render' | 'parsers'>>} API.Options\n * @typedef {<T extends {}>(source: string, options: Parser.Options, flags?: Flags) => IterableIterator<T>} API.tokenize\n * @typedef {(source: string, options: Parser.Options, flags?: Flags) => void} API.warmup\n * @typedef {(source: string, options: Parser.Options, flags?: Flags) => Promise<Fragment>} API.render\n */\n\n/**\n * @typedef {(string | Array<string> | Set<string>) & {length?: number, size?: number}} Flags\n * @typedef {DocumentFragment & {logs?: string[]}} Fragment\n */\n","/** @param {Pick<typeof globalThis, 'document'|'DocumentFragment'|'Element'|'Object'|'Node'|'Text'>} endowments */\nexport const createNativeDOM = (endowments = globalThis) => {\n  if (\n    !(\n      typeof endowments === 'object' &&\n      typeof endowments.document === 'object' &&\n      ['createElement', 'createTextNode', 'createDocumentFragment'].every(\n        method => typeof endowments.document[method] === 'function',\n      )\n    )\n  )\n    return (endowments = undefined);\n\n  const native = {};\n\n  native.Object = endowments.Object || globalThis.Object;\n  // dom.String = endowments.String || globalThis.String;\n  // dom.Set = endowments.Set || globalThis.Set;\n  // dom.Symbol = endowments.Symbol || globalThis.Symbol;\n  native.document = endowments.document;\n\n  /** @type {typeof endowments.DocumentFragment} */\n  native.DocumentFragment = endowments.DocumentFragment || native.document.createDocumentFragment().constructor;\n\n  /** @type {typeof endowments.Element} */\n  native.Element =\n    endowments.Element ||\n    (() => {\n      let prototype = native.document.createElement('span');\n      while (\n        prototype.constructor &&\n        prototype.constructor.name.startsWith('HTML') &&\n        prototype !== (prototype = native.Object.getPrototypeOf(prototype) || prototype)\n      );\n      return prototype.constructor.name === 'Element' ? prototype.constructor : undefined;\n    })();\n\n  /** @type {typeof endowments.Node} */\n  native.Node =\n    endowments.Node ||\n    (native.Element &&\n      (() => {\n        let prototype = native.Object.getPrototypeOf(native.Element.prototype);\n        return prototype.constructor.name === 'Node' ? prototype.constructor : undefined;\n      })());\n\n  /** @type {typeof endowments.Text} */\n  native.Text = endowments.Text || native.document.createTextNode('').constructor;\n\n  native.createElement = (tag, properties, ...children) => {\n    const element = native.document.createElement(tag);\n    properties && native.Object.assign(element, properties);\n    if (!children.length) return element;\n    if (element.append) {\n      while (children.length > 500) element.append(...children.splice(0, 500));\n      children.length && element.append(...children);\n    } else if (element.appendChild) {\n      for (const child of children) element.appendChild(child);\n    }\n    return element;\n  };\n  native.createText = (content = '') => native.document.createTextNode(content);\n  native.createFragment = () => native.document.createDocumentFragment();\n\n  endowments = undefined;\n\n  return native.Object.freeze(native.Object.setPrototypeOf(native, null));\n};\n","import {Pseudom} from './helpers.js';\n\n/** @param {Pick<typeof globalThis, 'Object'|'Set'|'String'|'Symbol'>} endowments */\nexport const createPseudoDOM = (endowments = globalThis) => {\n  const pseudo = {};\n\n  pseudo.Object = endowments.Object || globalThis.Object;\n  pseudo.Set = endowments.Set || globalThis.Set;\n  pseudo.String = endowments.String || globalThis.String;\n  pseudo.Symbol = endowments.Symbol || globalThis.Symbol;\n\n  Pseudom.checkPrimordialEndowments(pseudo, ...['Object', 'Set', 'String', 'Symbol']);\n\n  pseudo.document = null;\n\n  pseudo.CSSStyleDeclaration = class CSSStyleDeclaration extends pseudo.Object {\n    get cssText() {\n      const cssProperties = [];\n\n      for (const [key, value] of pseudo.Object.entries(this))\n        typeof key !== 'string' ||\n          key !== key.trim() ||\n          // NOTE: We only ever expect strings and numbers\n          !(typeof value === 'string' ? value.trim() : typeof value === 'number' ? !isNaN(value) : null) ||\n          cssProperties.push(`${key}: ${CSSStyleDeclaration.normalizeValue(value)}`);\n\n      return cssProperties.join(';');\n    }\n\n    toString() {\n      return this.cssText;\n    }\n\n    toJSON() {\n      return this.toString();\n    }\n\n    static normalizeValue(value) {\n      return value || value === 0 ? /\\s*;*$/[pseudo.Symbol.replace](value, '') : '';\n    }\n  };\n\n  pseudo.Object.freeze(pseudo.Object.freeze(pseudo.CSSStyleDeclaration).prototype);\n\n  pseudo.DOMStringMap = class DOMStringMap extends pseudo.Object {};\n\n  pseudo.Object.freeze(pseudo.Object.freeze(pseudo.DOMStringMap).prototype);\n\n  // TODO: Consider support for Element.classList\n  //       For now we list the simplicity of Element.className\n  pseudo.DOMTokenList = class DOMTokenList extends pseudo.Set {\n    toString() {\n      return [...this].join(' ');\n    }\n\n    toJSON() {\n      return this.toString();\n    }\n\n    static normalizeString(string) {\n      return string ? /[\\n\\t\\s]+/g[pseudo.Symbol.replace](string, ' ').trim() : '';\n    }\n\n    static from(...list) {\n      return new DOMTokenList(DOMTokenList.normalizeList(...list).split(' '));\n    }\n\n    static normalizeList(...list) {\n      return list.length ? DOMTokenList.normalizeString(list.filter(Boolean).join(' ')) : '';\n    }\n  };\n\n  pseudo.Object.freeze(pseudo.Object.freeze(pseudo.DOMTokenList).prototype);\n\n  pseudo.DOMNodeList = class DOMNodeList extends pseudo.Set {};\n\n  pseudo.Object.freeze(pseudo.Object.freeze(pseudo.DOMNodeList).prototype);\n\n  pseudo.Node = class Node extends pseudo.Object {\n    get children() {\n      return pseudo.Object.defineProperty(this, 'children', {value: new pseudo.DOMNodeList()}).children;\n    }\n\n    get childElementCount() {\n      return (this.hasOwnProperty('children') && this.children.size) || 0;\n    }\n\n    get textContent() {\n      return (this.hasOwnProperty('children') && this.children.size && [...this.children].join('')) || '';\n    }\n\n    set textContent(text) {\n      this.hasOwnProperty('children') && this.children.size && this.children.clear();\n      text && this.children.add(new pseudo.Text(text));\n    }\n\n    appendChild(element) {\n      return element && this.children.add(element), element;\n    }\n\n    removeChild(element) {\n      element && this.hasOwnProperty('children') && this.children.size && this.children.delete(element);\n      return element;\n    }\n\n    remove() {\n      //   if (elements.length && this.hasOwnProperty('children') && this.children.size)\n      //     for (const element of elements) element && this.children.delete(element);\n      throw `Unsupported: Compositional nodes cannot be directly removed!`;\n    }\n  };\n\n  pseudo.Object.freeze(pseudo.Object.freeze(pseudo.Node).prototype);\n\n  pseudo.Element = class Element extends pseudo.Node {\n    get style() {\n      if (this && this !== this.constructor.prototype)\n        return pseudo.Object.defineProperty(this, 'style', {value: new pseudo.CSSStyleDeclaration(), writable: false})\n          .style;\n      throw Error(`Invalid invocation of Element.style getter/setter.`);\n    }\n\n    set style(value) {\n      value == null || pseudo.Object.assign(this.style, {...value});\n    }\n\n    get dataset() {\n      if (this && this !== this.constructor.prototype)\n        return pseudo.Object.defineProperty(this, 'dataset', {value: new pseudo.DOMStringMap(), writable: false})\n          .dataset;\n      throw Error(`Invalid invocation of Element.dataset getter/setter.`);\n    }\n\n    set dataset(value) {\n      value == null || pseudo.Object.assign(this.dataset, {...value});\n    }\n\n    get innerHTML() {\n      return this.textContent;\n    }\n\n    set innerHTML(text) {\n      this.textContent = text;\n    }\n\n    get outerHTML() {\n      let classList;\n      let {className, tag, innerHTML, dataset} = this;\n\n      className && (className = className.trim()) && (className = pseudo.DOMTokenList.normalizeString(className));\n\n      const openTag = [tag];\n\n      className && openTag.push(`class=\"${className}\"`);\n\n      if (this.hasOwnProperty('style')) openTag.push(`style=${JSON.stringify(this.style.cssText)}`);\n\n      if (this.hasOwnProperty('dataset'))\n        for (const [key, value] of pseudo.Object.entries(this.dataset))\n          typeof key !== 'string' ||\n            key !== key.trim() ||\n            value == null ||\n            typeof value === 'symbol' ||\n            openTag.push(`data-${key}=${JSON.stringify(`${value}`)}`);\n\n      return `<${openTag.join(' ')}>${innerHTML || ''}</${tag}>`;\n    }\n\n    append(...elements) {\n      if (elements.length)\n        for (const element of elements)\n          element === '' || this.children.add(typeof element === 'object' ? element : new pseudo.Text(element));\n    }\n\n    toString() {\n      return this.outerHTML;\n    }\n\n    toJSON() {\n      return this.toString();\n    }\n  };\n\n  pseudo.Object.freeze(pseudo.Object.freeze(pseudo.Element).prototype);\n\n  pseudo.DocumentFragment = class DocumentFragment extends pseudo.Node {\n    toString() {\n      return this.textContent;\n    }\n\n    toJSON() {\n      return (this.childElementCount && [...this.children]) || [];\n    }\n\n    [pseudo.Symbol.iterator]() {\n      return ((this.childElementCount && this.children) || '')[pseudo.Symbol.iterator]();\n    }\n  };\n\n  pseudo.DocumentFragment.prototype.append = pseudo.Element.prototype.append;\n  pseudo.Object.freeze(pseudo.Object.freeze(pseudo.DocumentFragment).prototype);\n\n  /** @type {typeof globalThis.Text} */\n  pseudo.Text = class Text extends pseudo.String {\n    toString() {\n      return Pseudom.encodeEntities(super.toString());\n    }\n  };\n\n  pseudo.Object.freeze(pseudo.Object.freeze(pseudo.Text).prototype);\n\n  pseudo.createElement = pseudo.Object.freeze((tag, properties, ...children) => {\n    const element = new pseudo.Element();\n    element.tag = tag;\n    properties == null ||\n      (({dataset: element.dataset, className: element.className, ...element.properties} = properties),\n      element.className || (element.className = ''));\n    children.length && element.append(...children);\n    return element;\n  });\n\n  pseudo.createText = pseudo.Object.freeze((content = '') => new pseudo.Text(content));\n\n  pseudo.createFragment = pseudo.Object.freeze(() => new pseudo.DocumentFragment());\n\n  endowments = undefined;\n\n  // console.log(pseudo);\n\n  return pseudo.Object.freeze(pseudo);\n};\n","import {createNativeDOM} from './native.js';\nimport {createPseudoDOM} from './pseudo.js';\n\nexport {encodeEntity, encodeEntities} from './helpers.js';\n\nexport const pseudo = createPseudoDOM(globalThis);\nexport const native =\n  globalThis.document && globalThis.document.defaultView === globalThis && createNativeDOM(globalThis);\nexport const {createElement, createText, createFragment} = native || pseudo;\n","/// <reference lib=\"esnext.asynciterable\" />\n/**\n * @template T\n * @typedef {Promise<T> | T} async\n */\n\n/**\n * @template T\n * @typedef {{next(): async<IteratorResult<async<T>>>}} iterator\n */\n\n/**\n * @template T\n * @typedef {iterator<T> | {[Symbol.iterator](): iterator<T>}  | {[Symbol.asyncIterator](): iterator<T>}} iterable\n */\n\n/**\n * @template T, U\n * @param {iterable<T>} iterable\n * @param {(value: T) => U} ƒ\n */\nexport async function each(iterable, ƒ) {\n  const iterator =\n    (iterable && ('next' in iterable && typeof iterable.next === 'function' && iterable)) ||\n    ((Symbol.asyncIterator in iterable && iterable[Symbol.asyncIterator]()) ||\n      (Symbol.iterator in iterable && iterable[Symbol.iterator]()));\n  try {\n    if (iterator || typeof iterator.next === 'function') {\n      let result, done;\n      while (!done && (result = await iterator.next())) {\n        await ƒ(await result.value);\n        done = result.done;\n      }\n    }\n  } finally {\n    iterator &&\n      iterable !== iterator &&\n      'return' in iterator &&\n      typeof iterator.return === 'function' &&\n      iterator.return();\n  }\n}\n","//@ts-check\nimport * as pseudom from '../../pseudom/pseudom.js';\nimport {each} from './helpers.js';\n\n/// IMPLEMENTATION\n\nclass MarkupRenderer {\n  constructor(options) {\n    this.defaults = new.target.defaults || MarkupRenderer.defaults;\n\n    Object.isFrozen(this.defaults) || Object.freeze((this.defaults = {...this.defaults}));\n\n    this.options = {defaults: this.defaults, ...this.defaults, ...options};\n\n    this.options.MARKUP_CLASS =\n      /^\\w+$|$/.exec(this.options.MARKUP_CLASS || this.defaults.MARKUP_CLASS)[0].toLowerCase() || 'markup';\n\n    this.classes = {MARKUP_CLASS: this.options.MARKUP_CLASS, ...this.defaults.classes, ...this.options.classes};\n\n    if (this.options.classes !== this.defaults.classes || this.options.MARKUP_CLASS !== this.defaults.MARKUP_CLASS) {\n      const prefix = /^\\w+(?=-|$)/;\n      for (const [key, value] of Object.entries(this.classes)) {\n        if (key === 'MARKUP_CLASS') continue;\n        if (typeof key !== 'string') continue;\n        if (!prefix.test(value) && key.includes('_'))\n          throw Error(`Invalid MarkupRenderer class ‹{${key}: ${JSON.stringify(value)}›.`);\n        this.classes[key] = /^\\w+(?=-|$)/\n          [Symbol.replace](\n            value || this.defaults.classes[key] || key.toLowerCase().replace(/_/g, '-'),\n            this.options.MARKUP_CLASS,\n          )\n          .toLowerCase();\n      }\n    }\n\n    this.classes.MARKUP_SPACE = `whitespace ${this.classes.MARKUP_TOKEN} ${this.classes.MARKUP_WHITESPACE}`;\n    this.classes.MARKUP_COMMENT = `${this.classes.MARKUP_TOKEN} ${this.classes.MARKUP_ANNOTATION}`;\n    this.classes.MARKUP_KEYWORD = `${this.classes.MARKUP_TOKEN} ${this.classes.MARKUP_ENTITY}`;\n    this.classes.MARKUP_IDENTIFIER = `${this.classes.MARKUP_TOKEN} ${this.classes.MARKUP_IDENTITY}`;\n    this.classes.MARKUP_LITERAL = `${this.classes.MARKUP_TOKEN} ${this.classes.MARKUP_CLASS}-literal`;\n    this.classes.MARKUP_SPAN = `${this.classes.MARKUP_TOKEN} ${this.classes.MARKUP_CLASS}-span`;\n    this.classes.MARKUP_STRING = `${this.classes.MARKUP_TOKEN} ${this.classes.MARKUP_CLASS}-string`;\n    this.classes.MARKUP_PATTERN = `${this.classes.MARKUP_TOKEN} ${this.classes.MARKUP_CLASS}-pattern`;\n    this.classes.MARKUP_PUNCTUATOR = `${this.classes.MARKUP_TOKEN} ${this.classes.MARKUP_CLASS}-punctuator`;\n\n    this.elements = {...this.defaults.elements, ...this.options.elements};\n\n    this.options.classes = Object.freeze(this.classes);\n\n    this.dom = this.options.dom || (this.options.dom = new.target.dom || MarkupRenderer.dom);\n\n    Object.freeze(this.options);\n\n    this.renderers = {\n      line: new.target.factory(\n        this.elements.LINE,\n        {markupHint: '', markupClass: this.classes.MARKUP_LINE},\n        this.options,\n      ),\n      fault: new.target.factory(\n        this.elements.MARKUP_TOKEN,\n        {markupHint: `fault`, markupClass: this.classes.MARKUP_FAULT},\n        this.options,\n      ),\n      text: new.target.factory(\n        this.elements.MARKUP_TOKEN,\n        {markupHint: `text`, markupClass: this.classes.MARKUP_TOKEN},\n        this.options,\n      ),\n      sequence: new.target.factory(\n        this.elements.MARKUP_TOKEN,\n        {markupHint: `sequence`, markupClass: this.classes.MARKUP_TOKEN},\n        this.options,\n      ),\n\n      whitespace: this.dom.Text,\n\n      inset: new.target.factory(\n        this.elements.MARKUP_TOKEN,\n        {markupHint: `inset`, markupClass: `whitespace ${this.classes.MARKUP_SPACE}`},\n        this.options,\n      ),\n\n      break: new.target.factory(\n        this.elements.MARKUP_TOKEN,\n        {markupHint: `break`, markupClass: `whitespace ${this.classes.MARKUP_SPACE}`},\n        this.options,\n      ),\n\n      comment: new.target.factory(\n        this.elements.MARKUP_TOKEN,\n        {markupHint: `comment`, markupClass: this.classes.MARKUP_COMMENT},\n        this.options,\n      ),\n\n      keyword: new.target.factory(\n        this.elements.MARKUP_TOKEN,\n        {markupHint: `keyword`, markupClass: this.classes.MARKUP_KEYWORD},\n        this.options,\n      ),\n      identifier: new.target.factory(\n        this.elements.MARKUP_TOKEN,\n        {markupHint: `identifier`, markupClass: this.classes.MARKUP_IDENTIFIER},\n        this.options,\n      ),\n\n      literal: new.target.factory(\n        this.elements.MARKUP_TOKEN,\n        {markupHint: `literal`, markupClass: this.classes.MARKUP_LITERAL},\n        this.options,\n      ),\n      number: new.target.factory(\n        this.elements.MARKUP_TOKEN,\n        {markupHint: `number`, markupClass: `literal ${this.classes.MARKUP_LITERAL}`},\n        this.options,\n      ),\n      string: new.target.factory(\n        this.elements.MARKUP_TOKEN,\n        {markupHint: `string`, markupClass: this.classes.MARKUP_STRING},\n        this.options,\n      ),\n      quote: new.target.factory(\n        this.elements.MARKUP_TOKEN,\n        {markupHint: `quote`, markupClass: `string ${this.classes.MARKUP_STRING}`},\n        this.options,\n      ),\n      pattern: new.target.factory(\n        this.elements.MARKUP_TOKEN,\n        {markupHint: `pattern`, markupClass: this.classes.MARKUP_PATTERN},\n        this.options,\n      ),\n\n      punctuator: new.target.factory(\n        this.elements.MARKUP_TOKEN,\n        {markupHint: `punctuator`, markupClass: `${this.classes.MARKUP_PUNCTUATOR}`},\n        this.options,\n      ),\n      operator: new.target.factory(\n        this.elements.MARKUP_TOKEN,\n        {markupHint: `operator`, markupClass: `punctuator ${this.classes.MARKUP_PUNCTUATOR}`},\n        this.options,\n      ),\n      assigner: new.target.factory(\n        this.elements.MARKUP_TOKEN,\n        {markupHint: `assigner`, markupClass: `punctuator operator ${this.classes.MARKUP_PUNCTUATOR}`},\n        this.options,\n      ),\n      combinator: new.target.factory(\n        this.elements.MARKUP_TOKEN,\n        {\n          markupHint: `combinator`,\n          markupClass: `punctuator operator ${this.classes.MARKUP_PUNCTUATOR}`,\n        },\n        this.options,\n      ),\n      delimiter: new.target.factory(\n        this.elements.MARKUP_TOKEN,\n        {markupHint: `delimiter`, markupClass: `punctuator operator ${this.classes.MARKUP_PUNCTUATOR}`},\n        this.options,\n      ),\n      punctuation: new.target.factory(\n        this.elements.MARKUP_TOKEN,\n        {markupHint: `punctuation`, markupClass: `punctuator ${this.classes.MARKUP_PUNCTUATOR}`},\n        this.options,\n      ),\n      breaker: new.target.factory(\n        this.elements.MARKUP_TOKEN,\n        {markupHint: `breaker`, markupClass: `punctuator ${this.classes.MARKUP_PUNCTUATOR}`},\n        this.options,\n      ),\n      opener: new.target.factory(\n        this.elements.MARKUP_TOKEN,\n        {markupHint: `opener`, markupClass: `punctuator ${this.classes.MARKUP_PUNCTUATOR}`},\n        this.options,\n      ),\n      closer: new.target.factory(\n        this.elements.MARKUP_TOKEN,\n        {markupHint: `closer`, markupClass: `punctuator ${this.classes.MARKUP_PUNCTUATOR}`},\n        this.options,\n      ),\n      span: new.target.factory(\n        this.elements.MARKUP_TOKEN,\n        {markupHint: `span`, markupClass: `${this.classes.MARKUP_SPAN}`},\n        this.options,\n      ),\n    };\n  }\n\n  async render(tokens, fragment) {\n    let logs, template, first, elements;\n    try {\n      fragment || (fragment = MarkupRenderer.dom.Fragment());\n      logs = fragment.logs; // || (fragment.logs = []);\n      elements = this.renderer(tokens);\n      if ((first = await elements.next()) && 'value' in first) {\n        template = MarkupRenderer.dom.Template();\n        if (!MarkupRenderer.dom.native && template && 'textContent' in fragment) {\n          logs && logs.push(`render method = 'text' in template`);\n          const body = [first.value];\n          first.done || (await each(elements, element => element && body.push(element)));\n          template.innerHTML = body.join('');\n          fragment.appendChild(template.content);\n        } else if ('push' in fragment) {\n          logs && logs.push(`render method = 'push' in fragment`);\n          fragment.push(first.value);\n          first.done || (await each(elements, element => element && fragment.push(element)));\n        } else if ('append' in fragment) {\n          logs && logs.push(`render method = 'append' in fragment`);\n          fragment.append(first.value);\n          first.done || (await each(elements, element => element && fragment.append(element)));\n        }\n      }\n      return fragment;\n    } finally {\n      template && (template.innerHTML = '');\n      template = fragment = logs = elements = first = null;\n    }\n  }\n\n  *renderer(tokens) {\n    let renderedLine, LineInset, normalizedLineInset, normalizedLineText, lineBreak, insetHint;\n    let type, text, punctuator, hint, lineInset, lineBreaks, renderer;\n    const {\n      renderers,\n      options: {REFLOW: reflows},\n    } = this;\n    const Lines = /^/gm;\n    const Tabs = /\\t+/g;\n    const createLine = reflows\n      ? () => (renderedLine = renderers.line())\n      : () => (renderedLine = renderers.line('', 'no-reflow'));\n    const emit = (renderer, text, type, hint) => {\n      text == null && (text = '');\n      (renderedLine || createLine()).appendChild((renderedLine.lastChild = renderer(text, hint || type)));\n      if (type === 'inset') {\n        renderedLine.style['--markup-line-inset-spaces'] =\n          text.length - (renderedLine.style['--markup-line-inset-tabs'] = text.length - text.replace(Tabs, '').length);\n        renderedLine.dataset['markup-line-inset'] = text;\n      }\n    };\n    const emitInset = (text, hint) => emit(renderers.inset, text, 'inset', hint);\n    const emitBreak = hint => emit(renderers.break, '\\n', 'break', hint);\n\n    for (const token of tokens) {\n      if (!token || !token.text) continue;\n\n      ({type = 'text', text, punctuator, hint, lineInset, lineBreaks} = token);\n\n      renderer =\n        (punctuator &&\n          (renderers[punctuator] || (type && renderers[type]) || renderers.punctuator || renderers.operator)) ||\n        (type && (renderers[type] || (type !== 'whitespace' && type !== 'break' && renderers.text))) ||\n        MarkupRenderer.dom.Text;\n\n      // Normlize inset for { type != 'inset', inset = /\\s+/ }\n      if (reflows && lineBreaks && type !== 'break') {\n        LineInset = void (lineInset = lineInset || '');\n        insetHint = `${hint || ''} in-${type || ''}`;\n        for (const normlizedline of text.split(Lines)) {\n          (normalizedLineInset = normlizedline.startsWith(lineInset)\n            ? normlizedline.slice(0, lineInset.length)\n            : normlizedline.match(LineInset || (LineInset = RegExp(`^${lineInset.replace(/./g, '$&?')}|`)))[0]) &&\n            emitInset(normalizedLineInset, insetHint);\n\n          (normalizedLineText = normalizedLineInset\n            ? normlizedline.slice(normalizedLineInset.length)\n            : normlizedline) &&\n            ((normalizedLineText === '\\n'\n              ? ((lineBreak = normalizedLineText), (normalizedLineText = ''))\n              : normalizedLineText.endsWith('\\n')\n              ? ((lineBreak = '\\n'),\n                (normalizedLineText = normalizedLineText.slice(0, normalizedLineText.endsWith('\\r\\n') ? -2 : -1)))\n              : !(lineBreak = '')) && emit(renderer, normalizedLineText, type, hint),\n            lineBreak && (emitBreak(), renderedLine && (renderedLine = void (yield renderedLine))));\n        }\n      } else {\n        // TODO: See if pseudom children can be optimized for WBR/BR clones\n        emit(renderer, text, type, hint);\n        type === 'break'\n          ? renderedLine && (renderedLine = void (yield renderedLine))\n          : type === 'whitespace' ||\n            //@ts-ignore\n            renderedLine.appendChild(MarkupRenderer.dom.Element('wbr'));\n      }\n    }\n    renderedLine && (yield renderedLine);\n  }\n\n  /**\n   * @template {{markupHint: string}} T\n   * @param {string} tagName\n   * @param {T & Partial<HTMLElement>} properties\n   * @param {MarkupRenderer['options']} [options]\n   * @param {typeof MarkupRenderer['dom']} [dom]\n   */\n  static factory(tagName, properties, options, dom) {\n    let defaults =\n      /** @type {MarkupRenderer['options']} */ ((this &&\n        Object.prototype.isPrototypeOf.call(MarkupRenderer, this) &&\n        this.defaults) ||\n      MarkupRenderer.defaults);\n    let markupClass = defaults.MARKUP_CLASS;\n    let markupHint = '';\n    ({\n      0: tagName = 'span',\n      2: options = defaults,\n      3: dom = options.dom || MarkupRenderer.dom,\n    } = /** @type {*} */ (arguments));\n\n    //@ts-ignore\n    ({markupClass = options.MARKUP_CLASS || markupClass, markupHint = '', ...properties} = /** @type {*} */ ({\n      ...properties,\n    }));\n\n    properties.className = `${markupHint ? `${markupClass} ${markupHint}` : markupClass} ${options.MARKUP_CLASS ||\n      defaults.MARKUP_CLASS}`;\n\n    return new (this.Factory || MarkupRenderer.Factory)({tagName, options, markupHint, markupClass, properties, dom})\n      .render;\n  }\n}\n\n{\n  const defaults = {};\n\n  /** Specifies the intended mode for rendering a token @type {'html'} */\n  defaults.MODE = 'html';\n  /** Tag name of the element to use for rendering a token. */\n  defaults.SPAN = 'span';\n  /** Tag name of the element to use for grouping tokens in a single line. */\n  defaults.LINE = 'span';\n  /** The bare class name for all rendered markup nodes. */\n  defaults.MARKUP_CLASS = 'markup';\n  /** Enable renderer-side unpacking { inset } || { breaks > 0 } tokens */\n  defaults.REFLOW = true;\n\n  defaults.elements = {\n    MARKUP_LINE: 'span',\n    MARKUP_TOKEN: 'span',\n  };\n\n  defaults.classes = {\n    /** The bare class name for all rendered markup nodes. */\n    MARKUP_CLASS: 'markup',\n    /** The prefixed class name for rendered markup lines. */\n    MARKUP_LINE: 'markup-line',\n    /** The prefixed class name for rendered markup tokens. */\n    MARKUP_TOKEN: 'markup-token',\n    /** The prefixed class name for rendered markup tokens. */\n    MARKUP_FAULT: 'markup-fault',\n    /** The prefixed class name for rendered markup whitespace tokens. */\n    MARKUP_WHITESPACE: 'markup-whitespace',\n    /** The prefixed class name for rendered markup punctuation tokens. */\n    MARKUP_PUNCTUATION: 'markup-punctuation',\n    /** The prefixed class name for rendered markup annotation tokens. */\n    MARKUP_ANNOTATION: 'markup-annotation',\n    /** The prefixed class name for rendered markup entity tokens. */\n    MARKUP_ENTITY: 'markup-entity',\n    /** The prefixed class name for rendered markup identity tokens. */\n    MARKUP_IDENTITY: 'markup-identity',\n    /** The prefixed class name for rendered markup atoms. */\n    MARKUP_ATOM: 'markup-atom',\n  };\n\n  MarkupRenderer.defaults = defaults;\n\n  Object.freeze(defaults);\n}\n\nMarkupRenderer.Factory = class Factory {\n  /** @param {{tagName: string, markupHint: string, markupClass: string, properties: Partial<HTMLElement>, options: MarkupRenderer['options'], dom: typeof MarkupRenderer['dom']}} configuration */\n  constructor({tagName, markupHint, markupClass, properties, options, dom}) {\n    this.tagName = tagName;\n    this.properties = Object.freeze({...properties});\n    this.markupHint = markupHint || '';\n    this.markupClass = markupClass || MarkupRenderer.defaults.MARKUP_CLASS;\n    this.options = options;\n    this.dom = dom;\n    this.render = this.render.bind(this);\n    Object.freeze(this);\n  }\n\n  render(content, hint) {\n    let element, hintSeparator;\n\n    element =\n      (typeof content === 'string' && (content = this.dom.Text(content))) || content != null\n        ? this.dom.Element(this.tagName, this.properties, content)\n        : this.dom.Element(this.tagName, this.properties);\n\n    typeof hint === 'string' && hint !== '' && (hintSeparator = hint.indexOf('\\n\\n')) !== -1\n      ? ((element.dataset = {\n          'markup-hint': `${this.markupHint}${this.dom.escape(hint.slice(hintSeparator))}`,\n        }),\n        hintSeparator === 0 || (element.className = `${element.className} ${hint.slice(0, hintSeparator)}`))\n      : (hint && (element.className = `${element.className} ${hint}`),\n        (element.dataset = {'markup-hint': hint || this.markupHint || element.className}));\n\n    return element;\n  }\n};\n\nMarkupRenderer.dom = (() => {\n  /** Uses lightweight proxy objects that can be serialized into HTML text */\n  const HTML_MODE = MarkupRenderer.defaults.MODE === 'html';\n  const supported = !!pseudom.native;\n  const native = !HTML_MODE && supported;\n  const implementation = native ? pseudom.native : pseudom.pseudo;\n  const {createElement: Element, createText: Text, createFragment: Fragment} = implementation;\n  const Template = template =>\n    !supported || Template.supported === false\n      ? false\n      : Template.supported === true\n      ? document.createElement('template')\n      : (Template.supported = !!(\n          (template = document.createElement('template')) && 'HTMLTemplateElement' === (template.constructor || '').name\n        )) && template;\n  const escape = /** @type {(source: string) => string} */ (((replace, replacement) => string =>\n    replace(string, replacement))(\n    RegExp.prototype[Symbol.replace].bind(/[\\0-\\x1F\"\\\\]/g),\n    m => `&#x${m.charCodeAt(0).toString(16)};`,\n  ));\n\n  Template.supported = undefined;\n\n  return Object.freeze({supported, native, implementation, escape, Element, Text, Fragment, Template});\n})();\n\n/// INTERFACE\n\nexport default new MarkupRenderer();\n","﻿export * from './lib/helpers.js';\nimport extendedParser from '../tokenizer.extended.js';\nimport {TokenizerAPI} from '../lib/api.js';\nimport markupDOM from '../extensions/dom.js';\n\n/** @type {{extendedAPI: import('../lib/api').API}} */\nconst {\n  extendedAPI,\n  extendedAPI: {parsers, render, tokenize, warmup},\n} = {\n  //@ts-ignore\n  extendedAPI: new TokenizerAPI({\n    parsers: [extendedParser],\n    render: (source, options, flags) => {\n      const fragment = options && options.fragment;\n      const debugging = flags && /\\bdebug\\b/i.test(typeof flags === 'string' ? flags : [...flags].join(' '));\n\n      debugging && console.info('render: %o', {api: extendedAPI, source, options, flags, fragment, debugging});\n      fragment && (fragment.logs = debugging ? [] : undefined);\n\n      return markupDOM.render(tokenize(source, options, flags), fragment);\n    },\n  }),\n};\n\nexport default extendedAPI;\nexport {parsers, tokenize, render, warmup};\n"],"names":["pseudom.native","native","pseudom.pseudo"],"mappings":"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"}